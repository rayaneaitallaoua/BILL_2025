af_per_sv <- read.table("AF_per_sv.txt", header=FALSE)
af_per_sv <- read.table("AF_per_sv.txt", header=FALSE)
colnames(af_per_sv) <- c("Frequency","Allele Frequency")
af_per_sv <- read.table("AF_per_sv.txt", header=FALSE)
colnames(af_per_sv) <- c("Frequency","Allele Frequency")
plot(af_data$AF, af_data$Frequency,
main = "Allele Frequency Distribution",
xlab = "Allele Frequency",
ylab = "Frequency",
pch = 19, col = "blue")
af_per_sv <- read.table("AF_per_sv.txt", header=FALSE)
colnames(af_per_sv) <- c("Frequency","Allele Frequency")
plot(af_per_sv$AF, af_per_sv$Frequency,
main = "Allele Frequency Distribution",
xlab = "Allele Frequency",
ylab = "Frequency",
pch = 19, col = "blue")
af_per_sv <- read.table("AF_per_sv.txt", header=FALSE)
colnames(af_per_sv) <- c("Frequency","Allele Frequency")
plot(af_per_sv$AF, af_per_sv$Frequency,
main = "Allele Frequency Distribution",
xlab = "Allele Frequency",
ylab = "Frequency",
pch = 19, col = "blue")
af_per_sv <- read.table("AF_per_sv.txt", header=FALSE)
colnames(af_per_sv) <- c("Frequency","Allele Frequency")
plot(af_per_sv$AF, af_per_sv$Frequency,
main = "Allele Frequency Distribution",
xlab = "Allele Frequency",
ylab = "Frequency",
pch = 19, col = "blue")
View(af_per_sv)
View(af_per_sv)
str(af_per_sv)
summary(af_per_sv)
af_per_sv <- read.table("AF_per_sv.txt", header=FALSE)
colnames(af_per_sv) <- c("Frequency","Allele Frequency")
plot(af_per_sv$AF, af_per_sv$Frequency,
main = "Allele Frequency Distribution",
xlab = "Allele Frequency",
ylab = "Frequency",
pch = 19, col = "blue")
library(tidyverse)
# Step 1: Load necessary libraries
library(tidyverse)
# Step 2: Import the data from the file
af_data <- read.table("AF_per_sv.txt", header = FALSE, col.names = c("Frequency", "AF"))
# Step 3: Check the structure of the data
glimpse(af_data)
# Step 4: Plot the data using ggplot2 from the tidyverse
ggplot(af_data, aes(x = AF, y = Frequency)) +
geom_point(color = "blue") +
labs(title = "Allele Frequency Distribution",
x = "Allele Frequency",
y = "Frequency") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
# Optional: Adding a smoothed curve
ggplot(af_data, aes(x = AF, y = Frequency)) +
geom_point(color = "blue") +
geom_smooth(method = "loess", color = "red", se = FALSE) +
labs(title = "Allele Frequency Distribution with Smooth Curve",
x = "Allele Frequency",
y = "Frequency") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
# Step 1: Load necessary libraries
library(tidyverse)
# Step 2: Import the data from the file
af_data <- read.table("AF_per_sv.txt", header = FALSE, col.names = c("Frequency", "AF"))
# Step 3: Check the structure of the data
glimpse(af_data)
# Step 4: Plot the data using ggplot2 from the tidyverse
ggplot(af_data, aes(x = AF, y = Frequency)) +
geom_point(color = "blue") +
labs(title = "Allele Frequency Distribution",
x = "Allele Frequency",
y = "Frequency") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
# Optional: Adding a smoothed curve
ggplot(af_data, aes(x = Frequency, y = AF)) +
geom_point(color = "blue") +
geom_smooth(method = "loess", color = "red", se = FALSE) +
labs(title = "Allele Frequency Distribution with Smooth Curve",
x = "Allele Frequency",
y = "Frequency") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
# Step 1: Load necessary libraries
library(tidyverse)
# Step 2: Import the data from the file
af_data <- read.table("AF_per_sv.txt", header = FALSE, col.names = c("Frequency", "AF"))
# Step 3: Check the structure of the data
glimpse(af_data)
# Step 4: Plot the data using ggplot2 from the tidyverse
ggplot(af_data, aes(x = AF, y = Frequency)) +
geom_point(color = "blue") +
labs(title = "Allele Frequency Distribution",
x = "Allele Frequency",
y = "Frequency") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
# Optional: Adding a smoothed curve
ggplot(af_data, aes(x = Frequency, y = AF)) +
geom_point(color = "blue") +
geom_smooth(method = "loess", color = "red", se = FALSE) +
labs(title = "Allele Frequency Distribution with Smooth Curve",
x = "Frequency",
y = "Allele Frequency") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
# Step 1: Load necessary libraries
library(tidyverse)
# Step 2: Import the data from the file
af_data <- read.table("AF_per_sv.txt", header = FALSE, col.names = c("Frequency", "AF"))
# Step 3: Check the structure of the data
glimpse(af_data)
# Step 4: Plot the data using ggplot2 from the tidyverse
ggplot(af_data, aes(x = AF, y = Frequency)) +
geom_point(color = "blue") +
labs(title = "Allele Frequency Distribution",
x = "Allele Frequency",
y = "Frequency") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
# Optional: Adding a smoothed curve
ggplot(af_data, aes(x = AF, y = Frequency)) +
geom_point(color = "blue") +
geom_smooth(method = "loess", color = "red", se = FALSE) +
labs(title = "Allele Frequency Distribution with Smooth Curve",
x = "Allele Frequency",
y = "Frequency") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
# Step 1: Load necessary libraries
library(tidyverse)
# Step 2: Import the data from the file
af_data <- read.table("AF_per_sv.txt", header = FALSE, col.names = c("Frequency", "AF"))
# Step 3: Check the structure of the data
glimpse(af_data)
# Step 4: Plot the data using ggplot2 from the tidyverse
ggplot(af_data, aes(x = AF, y = Frequency)) +
geom_point(color = "blue") +
labs(title = "Allele Frequency Distribution",
x = "Allele Frequency",
y = "Frequency") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
# Optional: Adding a smoothed curve
ggplot(af_data, aes(x = AF, y = Frequency)) +
geom_point(color = "blue") +
geom_smooth(method = "loess", color = "red", se = FALSE) +
labs(title = "Allele Frequency Distribution with Smooth Curve",
x = "Allele Frequency",
y = "Frequency") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
# Step 2: Import the data from the file (assuming it's formatted the same way)
gq_data <- read.table("GQ_per_SNP.txt", header = FALSE, col.names = c("Quality", "GQ"))
# Step 3: Check the structure of the data
glimpse(gq_data)
# Step 4: Plot the data using ggplot2 from the tidyverse
ggplot(gq_data, aes(x = GQ, y = Quality)) +
geom_point(color = "green") +
labs(title = "Genotype Quality Distribution per SNP",
x = "Genotype Quality (GQ)",
y = "Frequency") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
# Optional: Adding a smoothed curve
ggplot(gq_data, aes(x = GQ, y = Quality)) +
geom_point(color = "green") +
geom_smooth(method = "loess", color = "red", se = FALSE) +
labs(title = "Genotype Quality Distribution with Smooth Curve",
x = "Genotype Quality (GQ)",
y = "Frequency") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
# Step 1: Load necessary libraries
library(tidyverse)
library(gridExtra)
# Step 2: Import the data
af_data <- read.table("AF_per_SV.txt", header = FALSE, col.names = c("Frequency", "AF"))
gq_data <- read.table("GQ_per_SNP.txt", header = FALSE, col.names = c("Quality", "GQ"))
# Step 3: Check the structure of the data
glimpse(af_data)
glimpse(gq_data)
# Step 4: Create the histograms
af_plot <- ggplot(af_data, aes(x = AF)) +
geom_histogram(binwidth = 0.005, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Allele Frequency Distribution per SV", x = "Allele Frequency (AF)", y = "Frequency") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
gq_plot <- ggplot(gq_data, aes(x = GQ)) +
geom_histogram(binwidth = 1, fill = "green", color = "black", alpha = 0.7) +
labs(title = "Genotype Quality Distribution per SNP", x = "Genotype Quality (GQ)", y = "Frequency") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
# Step 5: Arrange the plots side by side
grid.arrange(af_plot, gq_plot, ncol = 2)
# Step 1: Load necessary libraries
library(tidyverse)
library(gridExtra)
# Step 2: Import the data
af_data <- read.table("AF_per_SV.txt", header = FALSE, col.names = c("Frequency", "AF"))
gq_data <- read.table("GQ_per_SNP.txt", header = FALSE, col.names = c("Quality", "GQ"))
# Step 3: Check the structure of the data
glimpse(af_data)
glimpse(gq_data)
# Step 4: Create the histograms
af_plot <- ggplot(af_data, aes(x = AF)) +
geom_histogram(binwidth = 0.05, fill = "blue", color = "black", alpha = 0.7) +  # Increased binwidth
labs(title = "Allele Frequency Distribution per SV", x = "Allele Frequency (AF)", y = "Frequency") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
gq_plot <- ggplot(gq_data, aes(x = GQ)) +
geom_histogram(binwidth = 1, fill = "green", color = "black", alpha = 0.7) +
labs(title = "Genotype Quality Distribution per SNP", x = "Genotype Quality (GQ)", y = "Frequency") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
# Step 5: Arrange the plots side by side
grid.arrange(af_plot, gq_plot, ncol = 2)
View(af_data)
