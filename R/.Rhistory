scale_fill_brewer(palette="Dark2") +
scale_color_brewer(palette="Dark2") +
facet_wrap(~ TYPE, scales = "free")  +  #, ncol = 5
labs(x = "Génération", y = "nombre de mutation", title = "distribution des statistiques des types mutations par Génération") +
theme_classic()
#ggsave("P_nb_variant_generation.png", width = 14, height = 6)
plot_boxplot_snpsvEff <-count_snp_sv_type %>%
ggplot(aes(x = GENERATION, y = COUNT_TYPE, color= TRAITEMENT)) +
geom_boxplot(outlier.colour="black", position = position_dodge(1) ,outlier.shape=16, outlier.size=2, outlier.alpha = 0.5 ,notch=FALSE) +
geom_dotplot(aes(fill = TRAITEMENT) , position = position_dodge(1), binaxis='y', stackdir='center', dotsize=0.5, alpha = 0.7) +
#geom_jitter(shape=16, position=position_jitter(0.2), alpha = 0.5)
scale_fill_brewer(palette="Dark2") +
scale_color_brewer(palette="Dark2") +
facet_wrap(~ TYPE, scales = "free", ncol = 1)  +  #, ncol = 5
labs(x = "Génération", y = "Effectif") +
ggtitle("Statistiques des types de mutations en fonction du traitement et de la génération") +
theme_classic() +
theme(axis.title.y = element_text(angle=0, vjust = 0.5))
plot_boxplot_snpsvEff2 <-count_snp_sv_type %>%
ggplot(aes(x = GENERATION, y = COUNT_TYPE, color= TRAITEMENT)) +
geom_boxplot(outlier.colour="black", position = position_dodge(1) ,outlier.shape=16, outlier.size=2, outlier.alpha = 0.5 ,notch=FALSE) +
geom_dotplot(aes(fill = TRAITEMENT) , position = position_dodge(1), binaxis='y', stackdir='center', dotsize=0.3, alpha = 0.7) +
#geom_jitter(shape=16, position=position_jitter(0.2), alpha = 0.5)
scale_fill_brewer(palette="Dark2") +
scale_color_brewer(palette="Dark2") +
facet_wrap(~ TYPE, scales = "free")  +  #, ncol = 5
labs(x = "Génération", y = "Effectif") +
ggtitle("Distribution des statistiques des types de mutations en fonction du traitement et de la génération") +
theme_classic() +
theme(axis.title.y = element_text(angle=0, vjust = 0.5))
plot_boxplot_snpsvEff
plot_boxplot_snpsvEff2
#ggsave(plot = plot_boxplot_snpsvEff, "plot_boxplot_snpsvEff.png", width = 8, height = 12)
#ggsave(plot = plot_boxplot_snpsvEff2, "plot_boxplot_snpsvEff2.png", width = 14, height = 6)
#Comparer plusieurs générations entre elles :
#kruskal_test(count_snp_sv_type[which(count_snp_sv_type$TYPE == "SUB"),], COUNT_TYPE ~ GENERATION)
count_snp_sv_type %>%
filter(TYPE == "SUB") %>%
kruskal.test(COUNT_TYPE ~ GENERATION) # Kruskal-Wallis chi-squared = 415.16, df = 8, p-value < 2.2e-16
count_snp_sv_type %>%
filter(TYPE == "INS") %>%
kruskal.test(COUNT_TYPE ~ GENERATION)
#Kruskal-Wallis chi-squared = 313.07, df = 8, p-value < 2.2e-16
count_snp_sv_type %>%
filter(TYPE == "DEL") %>%
kruskal.test(COUNT_TYPE ~ GENERATION)
#Kruskal-Wallis chi-squared = 220.91, df = 8, p-value < 2.2e-16
#Si la p-value est < 0.05, il y a une différence significative entre les générations.
#Tu peux ensuite faire un test post-hoc pour voir quelles générations diffèrent :
count_snp_sv_type$GENERATION <- as.factor(count_snp_sv_type$GENERATION)
count_snp_sv_type %>%
filter(TYPE == "SUB",
GENERATION == "P90") %>% nrow() #10, #10, #10, #10, 10
count_snp_sv_type$COUNT_TYPE <- as.numeric(count_snp_sv_type$COUNT_TYPE)
# Filtrer uniquement les générations P15 et P30 -> SUBSTITUTIONS
df_test <- count_snp_sv_type %>% filter(TYPE == "SUB", GENERATION %in% c("P15", "P30")) #%>%
pairwise.wilcox.test(df_test$COUNT_TYPE, df_test$GENERATION, p.adjust.method = "bonferroni") # 0.12
df_test <- count_snp_sv_type %>% filter(TYPE == "SUB", GENERATION %in% c("P15", "P50"))
pairwise.wilcox.test(df_test$COUNT_TYPE, df_test$GENERATION, p.adjust.method = "bonferroni") # 0.14
df_test <- count_snp_sv_type %>% filter(TYPE == "SUB", GENERATION %in% c("P15", "P65"))
pairwise.wilcox.test(df_test$COUNT_TYPE, df_test$GENERATION, p.adjust.method = "bonferroni") # 0.82
df_test <- count_snp_sv_type %>% filter(TYPE == "SUB", GENERATION %in% c("P15", "P90"))
pairwise.wilcox.test(df_test$COUNT_TYPE, df_test$GENERATION, p.adjust.method = "bonferroni") # 0.54
df_test <- count_snp_sv_type %>% filter(TYPE == "SUB", GENERATION %in% c("P30", "P50"))
pairwise.wilcox.test(df_test$COUNT_TYPE, df_test$GENERATION, p.adjust.method = "bonferroni") # 0.82
df_test <- count_snp_sv_type %>% filter(TYPE == "SUB", GENERATION %in% c("P30", "P65"))
pairwise.wilcox.test(df_test$COUNT_TYPE, df_test$GENERATION, p.adjust.method = "bonferroni") #0.00088
df_test <- count_snp_sv_type %>% filter(TYPE == "SUB", GENERATION %in% c("P30", "P90"))
pairwise.wilcox.test(df_test$COUNT_TYPE, df_test$GENERATION, p.adjust.method = "bonferroni") #0.00018
df_test <- count_snp_sv_type %>% filter(TYPE == "SUB", GENERATION %in% c("P50", "P65"))
pairwise.wilcox.test(df_test$COUNT_TYPE, df_test$GENERATION, p.adjust.method = "bonferroni") #0.00033
df_test <- count_snp_sv_type %>% filter(TYPE == "SUB", GENERATION %in% c("P50", "P90"))
pairwise.wilcox.test(df_test$COUNT_TYPE, df_test$GENERATION, p.adjust.method = "bonferroni") #0.00018
df_test <- count_snp_sv_type %>% filter(TYPE == "SUB", GENERATION %in% c("P65", "P90"))
pairwise.wilcox.test(df_test$COUNT_TYPE, df_test$GENERATION, p.adjust.method = "bonferroni") #0.57
# INSERTIONS
df_test <- count_snp_sv_type %>% filter(TYPE == "INS", GENERATION %in% c("P15", "P30"))
pairwise.wilcox.test(df_test$COUNT_TYPE, df_test$GENERATION, p.adjust.method = "bonferroni") # 0.15
df_test <- count_snp_sv_type %>% filter(TYPE == "INS", GENERATION %in% c("P15", "P50"))
pairwise.wilcox.test(df_test$COUNT_TYPE, df_test$GENERATION, p.adjust.method = "bonferroni") #0.32
df_test <- count_snp_sv_type %>% filter(TYPE == "INS", GENERATION %in% c("P15", "P65"))
pairwise.wilcox.test(df_test$COUNT_TYPE, df_test$GENERATION, p.adjust.method = "bonferroni") # 0.2
df_test <- count_snp_sv_type %>% filter(TYPE == "INS", GENERATION %in% c("P15", "P90"))
pairwise.wilcox.test(df_test$COUNT_TYPE, df_test$GENERATION, p.adjust.method = "bonferroni") # 5e-04
df_test <- count_snp_sv_type %>% filter(TYPE == "INS", GENERATION %in% c("P30", "P50"))
pairwise.wilcox.test(df_test$COUNT_TYPE, df_test$GENERATION, p.adjust.method = "bonferroni") # 0.057
df_test <- count_snp_sv_type %>% filter(TYPE == "INS", GENERATION %in% c("P30", "P65"))
pairwise.wilcox.test(df_test$COUNT_TYPE, df_test$GENERATION, p.adjust.method = "bonferroni") #0.074
df_test <- count_snp_sv_type %>% filter(TYPE == "INS", GENERATION %in% c("P30", "P90"))
pairwise.wilcox.test(df_test$COUNT_TYPE, df_test$GENERATION, p.adjust.method = "bonferroni") #0.00028
df_test <- count_snp_sv_type %>% filter(TYPE == "INS", GENERATION %in% c("P50", "P65"))
pairwise.wilcox.test(df_test$COUNT_TYPE, df_test$GENERATION, p.adjust.method = "bonferroni") #0.18
df_test <- count_snp_sv_type %>% filter(TYPE == "INS", GENERATION %in% c("P50", "P90"))
pairwise.wilcox.test(df_test$COUNT_TYPE, df_test$GENERATION, p.adjust.method = "bonferroni") #2e-04
df_test <- count_snp_sv_type %>% filter(TYPE == "INS", GENERATION %in% c("P65", "P90"))
pairwise.wilcox.test(df_test$COUNT_TYPE, df_test$GENERATION, p.adjust.method = "bonferroni") #0.78
# DELETION
df_test <- count_snp_sv_type %>% filter(TYPE == "DEL", GENERATION %in% c("P15", "P30"))
pairwise.wilcox.test(df_test$COUNT_TYPE, df_test$GENERATION, p.adjust.method = "bonferroni") # 0.29
df_test <- count_snp_sv_type %>% filter(TYPE == "DEL", GENERATION %in% c("P15", "P50"))
pairwise.wilcox.test(df_test$COUNT_TYPE, df_test$GENERATION, p.adjust.method = "bonferroni") #0.59
df_test <- count_snp_sv_type %>% filter(TYPE == "DEL", GENERATION %in% c("P15", "P65"))
pairwise.wilcox.test(df_test$COUNT_TYPE, df_test$GENERATION, p.adjust.method = "bonferroni") # 0.03
df_test <- count_snp_sv_type %>% filter(TYPE == "DEL", GENERATION %in% c("P15", "P90"))
pairwise.wilcox.test(df_test$COUNT_TYPE, df_test$GENERATION, p.adjust.method = "bonferroni") # 0.029
df_test <- count_snp_sv_type %>% filter(TYPE == "DEL", GENERATION %in% c("P30", "P50"))
pairwise.wilcox.test(df_test$COUNT_TYPE, df_test$GENERATION, p.adjust.method = "bonferroni") # 0.057
df_test <- count_snp_sv_type %>% filter(TYPE == "DEL", GENERATION %in% c("P30", "P65"))
pairwise.wilcox.test(df_test$COUNT_TYPE, df_test$GENERATION, p.adjust.method = "bonferroni") #0.048
df_test <- count_snp_sv_type %>% filter(TYPE == "DEL", GENERATION %in% c("P30", "P90"))
pairwise.wilcox.test(df_test$COUNT_TYPE, df_test$GENERATION, p.adjust.method = "bonferroni") #0.93
df_test <- count_snp_sv_type %>% filter(TYPE == "DEL", GENERATION %in% c("P50", "P65"))
pairwise.wilcox.test(df_test$COUNT_TYPE, df_test$GENERATION, p.adjust.method = "bonferroni") #0.02
df_test <- count_snp_sv_type %>% filter(TYPE == "DEL", GENERATION %in% c("P50", "P90"))
pairwise.wilcox.test(df_test$COUNT_TYPE, df_test$GENERATION, p.adjust.method = "bonferroni") #0.018
df_test <- count_snp_sv_type %>% filter(TYPE == "DEL", GENERATION %in% c("P65", "P90"))
pairwise.wilcox.test(df_test$COUNT_TYPE, df_test$GENERATION, p.adjust.method = "bonferroni") #0.71
#Cela compare chaque paire de générations en ajustant les p-values.
#Comparaison des traitements au sein d’une génération
#Si tu veux comparer les traitements au sein d’une même génération, utilise Wilcoxon (si 2 traitements) ou Kruskal-Wallis (si >2 traitements).
#Wilcoxon pour 2 traitements
#Si tu compares deux traitements (ex: "aucun" vs "traité") dans P15 :
df_test <- count_snp_sv_type %>% filter(TYPE == "SUB", GENERATION == "P30")
pairwise.wilcox.test(df_test$COUNT_TYPE, df_test$TRAITEMENT, p.adjust.method = "bonferroni") #0.095
df_test <- count_snp_sv_type %>% filter(TYPE == "SUB", GENERATION == "P50")
pairwise.wilcox.test(df_test$COUNT_TYPE, df_test$TRAITEMENT, p.adjust.method = "bonferroni") #0.21
df_test <- count_snp_sv_type %>% filter(TYPE == "SUB", GENERATION == "P65")
pairwise.wilcox.test(df_test$COUNT_TYPE, df_test$TRAITEMENT, p.adjust.method = "bonferroni") #0.22
df_test <- count_snp_sv_type %>% filter(TYPE == "SUB", GENERATION == "P90")
pairwise.wilcox.test(df_test$COUNT_TYPE, df_test$TRAITEMENT, p.adjust.method = "bonferroni") #1 : impossible de calculer la p-value exacte avec des ex-aequos
df_test <- count_snp_sv_type %>% filter(TYPE == "INS", GENERATION == "P30")
pairwise.wilcox.test(df_test$COUNT_TYPE, df_test$TRAITEMENT, p.adjust.method = "bonferroni") #0.89
df_test <- count_snp_sv_type %>% filter(TYPE == "INS", GENERATION == "P50")
pairwise.wilcox.test(df_test$COUNT_TYPE, df_test$TRAITEMENT, p.adjust.method = "bonferroni") #1
df_test <- count_snp_sv_type %>% filter(TYPE == "INS", GENERATION == "P65")
pairwise.wilcox.test(df_test$COUNT_TYPE, df_test$TRAITEMENT, p.adjust.method = "bonferroni") #0.5
df_test <- count_snp_sv_type %>% filter(TYPE == "INS", GENERATION == "P90")
pairwise.wilcox.test(df_test$COUNT_TYPE, df_test$TRAITEMENT, p.adjust.method = "bonferroni") #0.035
df_test <- count_snp_sv_type %>% filter(TYPE == "DEL", GENERATION == "P30")
pairwise.wilcox.test(df_test$COUNT_TYPE, df_test$TRAITEMENT, p.adjust.method = "bonferroni") #0.48
df_test <- count_snp_sv_type %>% filter(TYPE == "DEL", GENERATION == "P50")
pairwise.wilcox.test(df_test$COUNT_TYPE, df_test$TRAITEMENT, p.adjust.method = "bonferroni") #0.71
df_test <- count_snp_sv_type %>% filter(TYPE == "DEL", GENERATION == "P65")
pairwise.wilcox.test(df_test$COUNT_TYPE, df_test$TRAITEMENT, p.adjust.method = "bonferroni")
df_test <- count_snp_sv_type %>% filter(TYPE == "DEL", GENERATION == "P90")
pairwise.wilcox.test(df_test$COUNT_TYPE, df_test$TRAITEMENT, p.adjust.method = "bonferroni") #0.047
#Si la p-value est < 0.05, il y a une différence significative entre les traitements.
remove(df_test)
count_snp_sv_type <- count_snp_sv_type %>% mutate(freq_type = COUNT_TYPE/COUNT_ech_gen)
remove(df_test)
count_snp_sv_type$freq_type <-  round(count_snp_sv_type$freq_type, 3)
#frequence moyenne par génération
df_freq_moy_gen <- count_snp_sv_type %>% aggregate(freq_type ~ GENERATION + TYPE, FUN = mean)
df2 <- count_snp_sv_type %>% aggregate(freq_type ~ GENERATION + TYPE, FUN = sd)
names(df2)[names(df2) == "freq_type"] <- "freq_type_sd"
df_freq_moy_gen <- left_join(df_freq_moy_gen, df2)
remove(df2)
df_freq_moy_gen$freq_type <- round(df_freq_moy_gen$freq_type, 3)
df_freq_moy_gen$freq_type_sd <- round(df_freq_moy_gen$freq_type_sd, 3)
df_freq_moy_gen <- df_freq_moy_gen %>% mutate(GEN_num = case_when(df_freq_moy_gen$GENERATION == "P15"~ 15,
df_freq_moy_gen$GENERATION == "P30"~ 30,
df_freq_moy_gen$GENERATION == "P50"~ 50,
df_freq_moy_gen$GENERATION == "P65"~ 65,
df_freq_moy_gen$GENERATION == "P90"~ 90,
))
ggplot(df_freq_moy_gen, aes(x = GEN_num, y = freq_type, color = TYPE)) +
geom_point() +
geom_line()+
scale_color_brewer(palette = "Dark2") +
labs(title = "Fréquences moyennes des types de mutations dans chaque génération", y = "Fréquence", x = "Génération") +
theme_bw()
#par génération, par traitement
df_freq_moy_gen_t <- count_snp_sv_type %>% aggregate(freq_type ~ GENERATION + TRAITEMENT + TYPE, FUN = mean)
df2 <- count_snp_sv_type %>% aggregate(freq_type ~ GENERATION + TYPE, FUN = sd)
names(df2)[names(df2) == "freq_type"] <- "freq_type_sd"
df_freq_moy_gen_t <- left_join(df_freq_moy_gen_t, df2)
remove(df2)
df_freq_moy_gen_t$freq_type <- round(df_freq_moy_gen_t$freq_type, 3)
df_freq_moy_gen_t$freq_type_sd <- round(df_freq_moy_gen_t$freq_type_sd, 3)
df_freq_moy_gen_t <- df_freq_moy_gen_t %>% mutate(GEN_num = case_when(df_freq_moy_gen_t$GENERATION == "P15"~ 15,
df_freq_moy_gen_t$GENERATION == "P30"~ 30,
df_freq_moy_gen_t$GENERATION == "P50"~ 50,
df_freq_moy_gen_t$GENERATION == "P65"~ 65,
df_freq_moy_gen_t$GENERATION == "P90"~ 90,
))
ggplot(df_freq_moy_gen_t, aes(x = GEN_num, y = freq_type, color = TYPE)) +
geom_point() +
geom_line()+
scale_color_brewer(palette = "Dark2") +
facet_wrap(~TRAITEMENT) +
labs(title = "Fréquences moyennes des types de mutations dans chaque génération et par traitement", y = "Fréquence", x = "Génération") +
theme_bw()
ggplot(df_freq_moy_gen_t, aes(x = GEN_num, y = freq_type, color = TRAITEMENT)) +
geom_point() +
geom_line()+
scale_color_brewer(palette = "Dark2") +
facet_wrap(~TYPE)+
theme_bw()
#remove(df_freq_moy_gen_traitement, df_freq_moy_gen)
count_snp_sv_type  %>%
ggplot(aes(x = as.factor(ECHANTILLON), y = freq_type, fill = TYPE, color = TRAITEMENT)) +
geom_bar(aes(color = TRAITEMENT), stat = "identity", position = "fill", width= 0.8, size = 1) +
geom_text(aes(label = freq_type), stat = "identity",  position = position_fill(.5), size = 2, color = "black") +
scale_fill_brewer(palette = "Set2") +
facet_wrap(~GENERATION, ncol = 1) +
scale_color_manual(values = c("#339966", "#0066CC", "#990000"))+
labs(title = "Fréquence relative des types de mutations dans chaque échantillon par génération") +
theme_bw()
#là j'ai voulu faire une moyenne de fréquence des mutations dans les générations sans prendre en compte le traitement
df_freq_moy_gen %>%
ggplot(aes(x = as.factor(GENERATION), y = freq_type, fill = TYPE)) +
geom_bar( stat = "identity", position = position_dodge(1)) +
geom_text(aes(label = freq_type), stat = "identity", vjust = - 1,position = position_dodge(1) ,size = 2, color = "black")+
geom_errorbar(aes(ymin= freq_type - freq_type_sd, ymax=freq_type + freq_type_sd), width=.2, position = position_dodge(1), na.rm = TRUE) +
scale_fill_brewer(palette="Dark2") +
theme_bw()
df_freq_moy_gen %>%
ggplot(aes(x = as.factor(GENERATION), y = freq_type, fill = TYPE)) +
geom_bar( stat = "identity", position = position_fill(0.5)) +
geom_text(aes(label = freq_type), stat = "identity", vjust = 0, position = position_fill(0.5) , size = 2, color = "black")+
scale_fill_brewer(palette="Dark2") +
theme_bw()
df_freq_moy_gen %>%
ggplot(aes(x = as.factor(GENERATION), y = freq_type, color = TYPE)) +
geom_point() +
geom_line(aes(group = TYPE)) +
geom_errorbar(aes(ymin= freq_type - freq_type, ymax=freq_type + freq_type), width=.2, na.rm = TRUE) +
scale_fill_brewer(palette="Dark2") +
theme_bw()
#Par génération, oar traitement
df_freq_moy_gen_t %>%
ggplot(aes(x = as.factor(GENERATION), y = freq_type, fill = TRAITEMENT)) +
geom_bar( stat = "identity", position = position_dodge(1)) +
geom_text(aes(label = freq_type), stat = "identity", vjust = - 1,position = position_dodge(1) ,size = 2, color = "black")+
geom_errorbar(aes(ymin= freq_type - freq_type_sd, ymax=freq_type + freq_type_sd), width=.2, position = position_dodge(1), na.rm = TRUE) +
scale_fill_brewer(palette="Dark2") +
facet_wrap(~TYPE) +
theme_bw()
df_freq_moy_gen_t %>%
ggplot(aes(x = as.factor(GENERATION), y = freq_type, fill = TYPE)) +
geom_bar( stat = "identity", position = position_dodge(1)) +
geom_text(aes(label = freq_type), stat = "identity", vjust = 0, position = position_dodge(1) , size = 2, color = "black")+
geom_errorbar(aes(ymin= freq_type - freq_type_sd, ymax=freq_type + freq_type_sd), width=.2, position = position_dodge(1), na.rm = TRUE) +
scale_fill_brewer(palette="Dark2") +
facet_wrap(~TRAITEMENT) +
#scale_y_log10()+
theme_bw()
remove(df_freq_moy_gen, df_freq_moy_gen_t)
count_ins_del_sv <- count_ins_del_sv %>%
mutate(TRAITEMENT = case_when(GENERATION == "P15" ~ "aucun",
GENERATION != "P15" & ECHANTILLON <=5 ~ "Froid",
GENERATION != "P15" & ECHANTILLON > 5 ~ "Chaud")) %>%
relocate(TRAITEMENT, .after = ECHANTILLON)
count_ins_del_sv <- count_ins_del_sv %>% mutate(freq_indel = COUNT_TYPE/COUNT)
count_ins_del_sv$freq_indel <- round(count_ins_del_sv$freq_indel, 3)
count_ins_del_sv <- count_ins_del_sv %>% mutate(GEN_TRAITEMENT = paste(as.factor(GENERATION), as.factor(TRAITEMENT), sep = "_"))
count_ins_del_sv %>% names()
count_ins_del_sv %>%
ggplot(aes(x = as.factor(ECHANTILLON), y = freq_indel, by = TYPE, fill = TYPE)) +
geom_bar(stat = "identity", position = "fill", width= 0.8, color = "black") +
geom_text(aes(label = freq_indel), stat = "identity",  position = position_fill(.5), size = 2, color = "black") +
scale_fill_brewer(palette = "Set2") +
facet_wrap(~GEN_TRAITEMENT) +
labs(title = "Fréquence relative des délétions et des subsitution dans chaque échantillon par génération") +
theme_bw()
count_ins_del_sv %>%
ggplot(aes(x = as.factor(ECHANTILLON), y = freq_indel, fill = TYPE, color = TRAITEMENT)) +
geom_bar(aes(color = TRAITEMENT), stat = "identity", position = "fill", width= 0.8, size = 1) +
geom_text(aes(label = freq_indel), stat = "identity",  position = position_fill(.5), size = 2, color = "black") +
scale_fill_brewer(palette = "Set2") +
facet_wrap(~GENERATION) +
scale_color_manual(values = c("#339966", "#0066CC", "#990000"))+
labs(title = "Fréquence relative des délétions et des subsitution dans chaque échantillon par génération") +
theme_bw()
count_ins_del_sv %>%
ggplot(aes(x = as.factor(ECHANTILLON), y = freq_indel, by = TYPE, fill = TYPE)) +
geom_bar(stat = "identity", position = "fill", width= 0.8, color = "black") +
geom_text(aes(label = freq_indel), stat = "identity",  position = position_fill(.5), size = 2, color = "black") +
scale_fill_brewer(palette = "Set2") +
facet_wrap(~GEN_TRAITEMENT, scales = "free") +
labs(title = "Fréquence relative des délétions et des subsitution dans chaque échantillon par génération") +
theme_bw()
count_ins_del_sv %>%
ggplot(aes(x = as.factor(ECHANTILLON), y = freq_indel, fill = TYPE, color = TRAITEMENT)) +
geom_bar(aes(color = TRAITEMENT), stat = "identity", position = "fill", width= 0.8, size = 1) +
geom_text(aes(label = freq_indel), stat = "identity",  position = position_fill(.5), size = 2, color = "black") +
scale_fill_brewer(palette = "Set2") +
facet_wrap(~GENERATION, ncol = 1) +
scale_color_manual(values = c("#339966", "#0066CC", "#990000"))+
labs(title = "Fréquence relative des délétions et des subsitution dans chaque échantillon par génération") +
theme_bw()
#là j'ai voulu faire une moyenne de fréquence des indels dans les générations sans prendre en compte le traitement
freq_moy_indel_gen <- count_ins_del_sv %>% aggregate(freq_indel ~ GENERATION + TYPE, FUN = mean)
df2 <- count_ins_del_sv %>% aggregate(freq_indel ~ GENERATION + TYPE, FUN = sd)
names(df2)[names(df2) == "freq_indel"] <- "freq_indel_sd"
freq_moy_indel_gen <- left_join(freq_moy_indel_gen, df2)
remove(df2)
freq_moy_indel_gen$freq_indel<- round(freq_moy_indel_gen$freq_indel, 3)
freq_moy_indel_gen$freq_indel_sd<- round(freq_moy_indel_gen$freq_indel_sd, 3)
freq_moy_indel_gen <- freq_moy_indel_gen %>% mutate(GEN_num = case_when(freq_moy_indel_gen$GENERATION == "P15"~ 15,
freq_moy_indel_gen$GENERATION == "P30"~ 30,
freq_moy_indel_gen$GENERATION == "P50"~ 50,
freq_moy_indel_gen$GENERATION == "P65"~ 65,
freq_moy_indel_gen$GENERATION == "P90"~ 90,
))
freq_moy_indel_gen %>%
ggplot(aes(x = as.factor(GENERATION), y = freq_indel, fill = TYPE)) +
geom_bar( stat = "identity", position = position_dodge(1)) +
geom_text(aes(label = freq_indel), stat = "identity", vjust = - 1,position = position_dodge(1) ,size = 2, color = "black")+
geom_errorbar(aes(ymin= freq_indel - freq_indel_sd, ymax=freq_indel + freq_indel_sd), width=.2, position = position_dodge(1), na.rm = TRUE) +
scale_fill_brewer(palette="Dark2") +
theme_bw()
freq_moy_indel_gen %>%
ggplot(aes(x = as.factor(GENERATION), y = freq_indel, color = TYPE)) +
geom_point() +
geom_line(aes(group = TYPE)) +
geom_errorbar(aes(ymin= freq_indel - freq_indel_sd, ymax=freq_indel + freq_indel_sd), width=.2, na.rm = TRUE) +
scale_fill_brewer(palette="Dark2") +
theme_bw()
nb_indel_ech_gen_t %>%
ggplot(aes(x = as.factor(GENERATION), y = freq_indel, fill = TRAITEMENT)) +
geom_bar( stat = "identity", position = position_dodge(1)) +
geom_text(aes(label = freq_indel), stat = "identity", vjust = 0, position = position_dodge(1) , size = 2, color = "black")+
geom_errorbar(aes(ymin= freq_indel - freq_indel_sd, ymax=freq_indel + freq_indel_sd), width=.2, position = position_dodge(1), na.rm = TRUE) +
scale_fill_brewer(palette="Dark2") +
facet_wrap(~TYPE ) +
theme_bw()
nb_indel_ech_gen_t <- count_ins_del_sv %>% aggregate(freq_indel ~ GENERATION + TRAITEMENT + TYPE, FUN = mean)
df2 <- count_ins_del_sv %>% aggregate(freq_indel ~ GENERATION + TRAITEMENT + TYPE, FUN = sd)
names(df2)[names(df2) == "freq_indel"] <- "freq_indel_sd"
nb_indel_ech_gen_t <- left_join(nb_indel_ech_gen_t, df2)
remove(df2)
nb_indel_ech_gen_t$freq_indel <- round(nb_indel_ech_gen_t$freq_indel, 3)
nb_indel_ech_gen_t$freq_indel_sd <- round(nb_indel_ech_gen_t$freq_indel_sd, 3)
nb_indel_ech_gen_t <- nb_indel_ech_gen_t %>% mutate(GEN_num = case_when(nb_indel_ech_gen_t$GENERATION == "P15"~ 15,
nb_indel_ech_gen_t$GENERATION == "P30"~ 30,
nb_indel_ech_gen_t$GENERATION == "P50"~ 50,
nb_indel_ech_gen_t$GENERATION == "P65"~ 65,
nb_indel_ech_gen_t$GENERATION == "P90"~ 90,
))
nb_indel_ech_gen_t %>%
ggplot(aes(x = as.factor(GENERATION), y = freq_indel, fill = TRAITEMENT)) +
geom_bar( stat = "identity", position = position_dodge(1)) +
geom_text(aes(label = freq_indel), stat = "identity", vjust = 0, position = position_dodge(1) , size = 2, color = "black")+
geom_errorbar(aes(ymin= freq_indel - freq_indel_sd, ymax=freq_indel + freq_indel_sd), width=.2, position = position_dodge(1), na.rm = TRUE) +
scale_fill_brewer(palette="Dark2") +
facet_wrap(~TYPE ) +
theme_bw()
nb_indel_ech_gen_t %>%
ggplot(aes(x = as.factor(GENERATION), y = freq_indel, color = TRAITEMENT)) +
geom_point()+
geom_line(aes(group = TRAITEMENT))+
#geom_text(aes(label = freq_indel), stat = "identity", vjust = - 1,position = position_dodge(1) ,size = 2, color = "black")+
geom_errorbar(aes(ymin= freq_indel - freq_indel_sd, ymax=freq_indel + freq_indel_sd), width=.2, na.rm = TRUE) +
scale_color_brewer(palette="Dark2") +
facet_wrap(~TYPE) +
theme_bw()
nb_indel_ech_gen_t %>%
ggplot(aes(x = as.factor(GENERATION), y = freq_indel, fill = TRAITEMENT)) +
geom_bar( stat = "identity", position = position_dodge(1)) +
geom_text(aes(label = freq_indel), stat = "identity", vjust = 0, position = position_dodge(1) , size = 2, color = "black")+
geom_errorbar(aes(ymin= freq_indel - freq_indel_sd, ymax=freq_indel + freq_indel_sd), width=.2, position = position_dodge(1), na.rm = TRUE) +
scale_fill_brewer(palette="Dark2") +
facet_wrap(~TYPE ) +
theme_bw()
nb_indel_ech_gen_t %>%
ggplot(aes(x = as.factor(GENERATION), y = freq_indel, color = TRAITEMENT)) +
geom_point()+
geom_line(aes(group = TRAITEMENT))+
geom_text(aes(label = freq_indel), stat = "identity", vjust = - 1,position = position_dodge(1) ,size = 2, color = "black")+
#geom_errorbar(aes(ymin= freq_indel - freq_indel_sd, ymax=freq_indel + freq_indel_sd), width=.2, na.rm = TRUE) +
scale_color_brewer(palette="Dark2") +
facet_wrap(~TYPE) +
theme_bw()
nb_indel_ech_gen_t %>%
ggplot(aes(x = as.factor(GENERATION), y = freq_indel, fill = TRAITEMENT)) +
geom_bar( stat = "identity", position = position_dodge(1), whidth = 1 ) +
geom_text(aes(label = freq_indel), stat = "identity", vjust = 0, position = position_dodge(1) , size = 2, color = "black")+
geom_errorbar(aes(ymin= freq_indel - freq_indel_sd, ymax=freq_indel + freq_indel_sd), width=.2, position = position_dodge(1), na.rm = TRUE) +
scale_fill_brewer(palette="Dark2") +
facet_wrap(~TYPE ) +
theme_bw()
nb_indel_ech_gen_t %>%
ggplot(aes(x = as.factor(GENERATION), y = freq_indel, fill = TRAITEMENT)) +
geom_bar( stat = "identity", position = position_dodge(1), whidth = 0.5 ) +
geom_text(aes(label = freq_indel), stat = "identity", vjust = 0, position = position_dodge(1) , size = 2, color = "black")+
geom_errorbar(aes(ymin= freq_indel - freq_indel_sd, ymax=freq_indel + freq_indel_sd), width=.2, position = position_dodge(1), na.rm = TRUE) +
scale_fill_brewer(palette="Dark2") +
facet_wrap(~TYPE ) +
theme_bw()
View(nb_indel_ech_gen_t)
View(count_ins_del_sv)
nb_indel_ech_gen_t <- count_ins_del_sv %>% aggregate(freq_indel ~ GENERATION + TRAITEMENT + TYPE, FUN = mean)
df2 <- count_ins_del_sv %>% aggregate(freq_indel ~ GENERATION + TRAITEMENT + TYPE, FUN = sd)
names(df2)[names(df2) == "freq_indel"] <- "freq_indel_sd"
nb_indel_ech_gen_t <- left_join(nb_indel_ech_gen_t, df2)
remove(df2)
nb_indel_ech_gen_t$freq_indel <- round(nb_indel_ech_gen_t$freq_indel, 3)
nb_indel_ech_gen_t$freq_indel_sd <- round(nb_indel_ech_gen_t$freq_indel_sd, 3)
nb_indel_ech_gen_t <- nb_indel_ech_gen_t %>% mutate(GEN_num = case_when(nb_indel_ech_gen_t$GENERATION == "P15"~ 15,
nb_indel_ech_gen_t$GENERATION == "P30"~ 30,
nb_indel_ech_gen_t$GENERATION == "P50"~ 50,
nb_indel_ech_gen_t$GENERATION == "P65"~ 65,
nb_indel_ech_gen_t$GENERATION == "P90"~ 90,
))
nb_indel_ech_gen_t %>%
ggplot(aes(x = as.factor(GENERATION), y = freq_indel, fill = TRAITEMENT)) +
geom_bar( stat = "identity", position = position_dodge(1), whidth = 0.5 ) +
geom_text(aes(label = freq_indel), stat = "identity", vjust = 0, position = position_dodge(1) , size = 2, color = "black")+
geom_errorbar(aes(ymin= freq_indel - freq_indel_sd, ymax=freq_indel + freq_indel_sd), width=.2, position = position_dodge(1), na.rm = TRUE) +
scale_fill_brewer(palette="Dark2") +
facet_wrap(~TYPE ) +
theme_bw()
nb_indel_ech_gen_t %>%
ggplot(aes(x = as.factor(GENERATION), y = freq_indel, color = TRAITEMENT)) +
geom_point()+
geom_line(aes(group = TRAITEMENT))+
geom_text(aes(label = freq_indel), stat = "identity", vjust = - 1,position = position_dodge(1) ,size = 2, color = "black")+
#geom_errorbar(aes(ymin= freq_indel - freq_indel_sd, ymax=freq_indel + freq_indel_sd), width=.2, na.rm = TRUE) +
scale_color_brewer(palette="Dark2") +
facet_wrap(~TYPE) +
theme_bw()
View(nb_indel_ech_gen_t)
nb_indel_ech_gen_t %>%
ggplot(aes(x = as.factor(GENERATION), y = freq_indel, fill = TYPE)) +
geom_bar( stat = "identity", position = position_dodge(1), whidth = 0.5 ) +
geom_text(aes(label = freq_indel), stat = "identity", vjust = 0, position = position_dodge(1) , size = 2, color = "black")+
geom_errorbar(aes(ymin= freq_indel - freq_indel_sd, ymax=freq_indel + freq_indel_sd), width=.2, position = position_dodge(1), na.rm = TRUE) +
scale_fill_brewer(palette="Dark2") +
facet_wrap(~TRAITEMENT ) +
theme_bw()
View(freq_moy_indel_gen)
nb_indel_ech_gen_t <- count_ins_del_sv %>% aggregate(freq_indel ~ GENERATION + TRAITEMENT + TYPE , FUN = mean)
df2 <- count_ins_del_sv %>% aggregate(freq_indel ~ GENERATION + TRAITEMENT + TYPE, FUN = sd)
names(df2)[names(df2) == "freq_indel"] <- "freq_indel_sd"
nb_indel_ech_gen_t <- left_join(nb_indel_ech_gen_t, df2)
remove(df2)
nb_indel_ech_gen_t$freq_indel <- round(nb_indel_ech_gen_t$freq_indel, 3)
nb_indel_ech_gen_t$freq_indel_sd <- round(nb_indel_ech_gen_t$freq_indel_sd, 3)
nb_indel_ech_gen_t <- nb_indel_ech_gen_t %>% mutate(GEN_num = case_when(nb_indel_ech_gen_t$GENERATION == "P15"~ 15,
nb_indel_ech_gen_t$GENERATION == "P30"~ 30,
nb_indel_ech_gen_t$GENERATION == "P50"~ 50,
nb_indel_ech_gen_t$GENERATION == "P65"~ 65,
nb_indel_ech_gen_t$GENERATION == "P90"~ 90,
))
View(nb_indel_ech_gen_t)
mean(0.538, 0.52, 0.412, 0.256, 0.595)
count_snp_sv_type  %>%
ggplot(aes(x = as.factor(ECHANTILLON), y = freq_type, fill = TYPE, color = TRAITEMENT)) +
geom_bar(aes(color = TRAITEMENT), stat = "identity", position = "fill", width= 0.8, size = 1) +
geom_text(aes(label = freq_type), stat = "identity",  position = position_fill(.5), size = 2, color = "black") +
scale_fill_brewer(palette = "Set2") +
facet_wrap(~GENERATION, ncol = 1) +
scale_color_manual(values = c("#339966", "#990000", "#0066CC"))+
labs(title = "Fréquence relative des types de mutations dans chaque échantillon par génération") +
theme_bw()
count_ins_del_sv %>%
ggplot(aes(x = as.factor(ECHANTILLON), y = freq_indel, fill = TYPE, color = TRAITEMENT)) +
geom_bar(aes(color = TRAITEMENT), stat = "identity", position = "fill", width= 0.8, size = 1) +
geom_text(aes(label = freq_indel), stat = "identity",  position = position_fill(.5), size = 2, color = "black") +
scale_fill_brewer(palette = "Set2") +
facet_wrap(~GENERATION, ncol = 1) +
scale_color_manual(values = c("#339966", , "#990000", "#0066CC"))+
labs(title = "Fréquence relative des délétions et des subsitution dans chaque échantillon par génération") +
theme_bw()
count_ins_del_sv %>%
ggplot(aes(x = as.factor(ECHANTILLON), y = freq_indel, fill = TYPE, color = TRAITEMENT)) +
geom_bar(aes(color = TRAITEMENT), stat = "identity", position = "fill", width= 0.8, size = 1) +
geom_text(aes(label = freq_indel), stat = "identity",  position = position_fill(.5), size = 2, color = "black") +
scale_fill_brewer(palette = "Set2") +
facet_wrap(~GENERATION, ncol = 1) +
scale_color_manual(values = c("#339966", "#990000", "#0066CC"))+
labs(title = "Fréquence relative des délétions et des subsitution dans chaque échantillon par génération") +
theme_bw()
nb_indel_ech_gen_t <- count_ins_del_sv %>% aggregate(freq_indel ~ GENERATION + TRAITEMENT + TYPE , FUN = mean)
df2 <- count_ins_del_sv %>% aggregate(freq_indel ~ GENERATION + TRAITEMENT + TYPE, FUN = sd)
names(df2)[names(df2) == "freq_indel"] <- "freq_indel_sd"
nb_indel_ech_gen_t <- left_join(nb_indel_ech_gen_t, df2)
remove(df2)
nb_indel_ech_gen_t$freq_indel <- round(nb_indel_ech_gen_t$freq_indel, 3)
nb_indel_ech_gen_t$freq_indel_sd <- round(nb_indel_ech_gen_t$freq_indel_sd, 3)
nb_indel_ech_gen_t <- nb_indel_ech_gen_t %>% mutate(GEN_num = case_when(nb_indel_ech_gen_t$GENERATION == "P15"~ 15,
nb_indel_ech_gen_t$GENERATION == "P30"~ 30,
nb_indel_ech_gen_t$GENERATION == "P50"~ 50,
nb_indel_ech_gen_t$GENERATION == "P65"~ 65,
nb_indel_ech_gen_t$GENERATION == "P90"~ 90,
))
nb_indel_ech_gen_t %>%
ggplot(aes(x = as.factor(GENERATION), y = freq_indel, fill = TRAITEMENT)) +
geom_bar( stat = "identity", position = position_dodge(1), whidth = 0.5 ) +
geom_text(aes(label = freq_indel), stat = "identity", vjust = 0, position = position_dodge(1) , size = 2, color = "black")+
geom_errorbar(aes(ymin= freq_indel - freq_indel_sd, ymax=freq_indel + freq_indel_sd), width=.2, position = position_dodge(1), na.rm = TRUE) +
scale_fill_brewer(palette="Dark2") +
facet_wrap(~TYPE ) +
theme_bw()
nb_indel_ech_gen_t %>%
ggplot(aes(x = as.factor(GENERATION), y = freq_indel, fill = TYPE)) +
geom_bar( stat = "identity", position = position_dodge(1), whidth = 0.5 ) +
geom_text(aes(label = freq_indel), stat = "identity", vjust = 0, position = position_dodge(1) , size = 2, color = "black")+
geom_errorbar(aes(ymin= freq_indel - freq_indel_sd, ymax=freq_indel + freq_indel_sd), width=.2, position = position_dodge(1), na.rm = TRUE) +
scale_fill_brewer(palette="Dark2") +
facet_wrap(~TRAITEMENT ) +
theme_bw()
nb_indel_ech_gen_t %>%
ggplot(aes(x = as.factor(GENERATION), y = freq_indel, color = TRAITEMENT)) +
geom_point()+
geom_line(aes(group = TRAITEMENT))+
geom_text(aes(label = freq_indel), stat = "identity", vjust = - 1,position = position_dodge(1) ,size = 2, color = "black")+
#geom_errorbar(aes(ymin= freq_indel - freq_indel_sd, ymax=freq_indel + freq_indel_sd), width=.2, na.rm = TRUE) +
scale_color_brewer(palette="Dark2") +
facet_wrap(~TYPE) +
theme_bw()
