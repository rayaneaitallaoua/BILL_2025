---
title: "modeles_polynomes_sst"
author: "heloise_calzan"
date: '2022-05-10'
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

```{r, include=FALSE}
#repertoire de travail
setwd("E:\\github\\travail_github\\Stage_M2_Calzan")

#librairies
library(readr)
library(ggplot2)
library(lmtest)
library(lme4)
library(car)
library(nlme)
library(dplyr)
library(tidyverse)
library(effects)
library(wesanderson)
library(car)
```


#importation des données 
```{r}
table_cohortes <- read.csv("table_cohorte_procedure_selection_2.csv", header = TRUE, sep = ",",  na ="NA", stringsAsFactors = FALSE)
table_donnees <- read.csv("tableau_donnees_procedure_selection_2.csv", header = TRUE, sep = ",",  na ="NA", stringsAsFactors = FALSE)
```

*exploration*
```{r, include=FALSE}
#table_donnees
summary(table_donnees)
sapply(table_donnees,FUN=function(el) sum(is.na(el)))
sapply(table_donnees, FUN = class)

table_donnees$Area <- as.factor(table_donnees$Area)
table_donnees$Species <- as.factor(table_donnees$Species)
table_donnees$Sex <- as.factor(table_donnees$Sex)
table_donnees$Maturity <- as.factor(table_donnees$Maturity)
table_donnees$AphiaID <- as.factor(table_donnees$AphiaID)

sapply(table_donnees, FUN = levels)

summary(table_donnees$LngtClass)
summary(table_donnees$Age)
#creation d'une colonne fcaohorte pour cohorte en factor ==> qui servira pour les glm
table_donnees$fcohorte <- as.factor(table_donnees$Cohorte)

#table_cohortes
summary(table_cohortes)
sapply(table_cohortes,FUN=function(el) sum(is.na(el)))
sapply(table_cohortes, FUN = class)

table_cohortes$Species <- as.factor(table_cohortes$Species)
table_cohortes$Cohorte_factor <- as.factor(table_cohortes$Cohorte_factor)

sapply(table_cohortes, FUN = levels)
```

*figure*
```{r, fig.width=13,fig.height=4}
##Figure

ggplot(data = table_cohortes, aes(x = Cohorte, y = SR)) +
  geom_point() +
  geom_line() +
  #geom_smooth(method="lm", se=TRUE, fullrange=FALSE, level=0.95) +
  facet_wrap(~Species, scales = "free_x", ncol = 5) + 
  labs(x = "Cohorte", y = "Sexe ratio") +
  theme(strip.text.x = element_text(size=40)) +
  theme_bw()

#ggsave("plot_sp.png", width = 13, height = 5)


```
**avec indice NAO**
```{r, include=FALSE}
tableau_NAO <- read.csv("Monthly mean NAO index since January 1950.csv", header = FALSE, sep = ";",  na ="NA", stringsAsFactors = FALSE)
summary(tableau_NAO)
sapply(tableau_NAO,FUN=function(el) sum(is.na(el)))
sapply(tableau_NAO, FUN = class)
str(tableau_NAO)

tableau_NAO <- tableau_NAO[-73,]

names(tableau_NAO)[names(tableau_NAO) == "V1"] <- "Date"
names(tableau_NAO)[c(2: 13)] = c("Janvier","Fevrier", "Mars", "Avril", "Mai", "Juin", "Juillet", "Aout", "Septembre", "Octobre", "Novembre","Decembre")


tableau_NAO <- mutate(tableau_NAO, Moy_NAO = rowMeans(select(tableau_NAO, Janvier : Decembre), na.rm = TRUE))

Moy_NAO <- rowMeans(tableau_NAO[,2:13], na.rm = TRUE) 
tableau_NAO$Moy_NAO <- Moy_NAO

#tableau_NAO2 <- tableau_NAO %>% pivot_longer(c("Janvier","Fevrier", "Mars", "Avril", "Mai", "Juin", "Juillet", "Aout", "Septembre", "Octobre", "Novembre","Decembre")) 
#names(tableau_NAO2)[names(tableau_NAO2) == "name"] <- "Mois"
#names(tableau_NAO2)[names(tableau_NAO2) == "value"] <- "indice_NAO"

plot(tableau_NAO$Moy_NAO ~ tableau_NAO$Date)
lm(Moy_NAO ~ Date, data = tableau_NAO)
summary(lm(Moy_NAO ~ Date, data = tableau_NAO))
plot(lm(Moy_NAO ~ Date, data = tableau_NAO))

#summary(lmer(indice_NAO ~ Date + (1|Mois), data = tableau_NAO2))
```
Le tableau_NAO au dessus avec le #ont été trouvé à partir de ce site :
<https://www.cpc.ncep.noaa.gov/products/precip/CWlink/pna/nao_index.html>


```{r}
#tableau_nao_moy_JFM <- read.csv("moyennes_nao_jfm.csv", header = FALSE, sep = ";",  na ="NA", stringsAsFactors = FALSE)
```
le tableau_nao_moy_JFM s'appuit sur les données de ce site :
<https://psl.noaa.gov/data/climateindices/>

<https://psl.noaa.gov/cgi-bin/data/climateindices/corr.pl?tstype1=3&custname1=&custtitle1=&tstype2=0&custname2=&custtitle2=&year1=&year2=&itypea=0&y1=&y2=&plotstyle=0&length=&lag=&iall=0&iseas=1&mon1=0&mon2=2&anom=0&climo1_yr1=&climo1_yr2=&climo2_yr1=&climo2_yr2=&Submit=Calculate+Results>

moyenne du la NAO pour Janvier Fevrier Mars

```{r}
tableau_NAO <- mutate(tableau_NAO, Moy_NAO_JFM = rowMeans(select(tableau_NAO, Janvier : Mars), na.rm = TRUE))
summary(lm(Moy_NAO_JFM ~ Date, data = tableau_NAO))

table_NAO_JFM <- tableau_NAO[,c("Date", "Moy_NAO_JFM")]
names(table_NAO_JFM)[names(table_NAO_JFM) == "Date"] <- "Cohorte"# pour que ce soit compatible avec les années cohortes des tableaux des espèces

ggplot(tableau_NAO, aes(x = Date, y = Moy_NAO_JFM)) +
  geom_point() +
  geom_line()+
  theme_classic()
#ggsave("moy_nao.png", width = 13, height = 6)
remove(tableau_NAO)
```
**AMO** : 
<https://psl.noaa.gov/data/timeseries/AMO/>
```{r, include=FALSE}
tableau_AMO_d<- read.csv("AMO unsmoothed, detrended from the Kaplan SST V2.csv", header = FALSE, sep = ";",  na ="NA", stringsAsFactors = FALSE)

#on renomme les colonnes
names(tableau_AMO_d)[names(tableau_AMO_d) == "V1"] <- "Cohorte"
names(tableau_AMO_d)[c(2: 13)] = c("Janvier","Fevrier", "Mars", "Avril", "Mai", "Juin", "Juillet", "Aout", "Septembre", "Octobre", "Novembre","Decembre")

summary(tableau_AMO_d)
sapply(tableau_AMO_d,FUN=function(el) sum(is.na(el)))
sapply(tableau_AMO_d, FUN = class)
str(tableau_AMO_d)

tableau_AMO_d <- tableau_AMO_d[-75,] #on enlève la dernière ligne

#figures pour voir le comportement intra-annuel de l'AMO
ggplot(tableau_AMO_d, aes(x = Cohorte)) +
  geom_line(aes(y = Janvier), colour = "#006666") +
  theme_classic()

ggplot(tableau_AMO_d, aes(x = Cohorte)) +
  geom_line(aes(y = Fevrier), colour = "#003399") +
  theme_classic()
    
ggplot(tableau_AMO_d, aes(x = Cohorte)) +
  geom_line(aes(y = Mars), colour = "#9933FF") +
  theme_classic()
  
ggplot(tableau_AMO_d, aes(x = Cohorte)) +
  geom_line(aes(y = Avril), colour = "#FF33FF") +
  theme_classic()
  
ggplot(tableau_AMO_d, aes(x = Cohorte)) +
  geom_line(aes(y = Mai), colour = "#993366") +
  theme_classic()
  
ggplot(tableau_AMO_d, aes(x = Cohorte)) +
  geom_line(aes(y = Juin), colour = "#990000") +
  theme_classic()
  
ggplot(tableau_AMO_d, aes(x = Cohorte)) +
  geom_line(aes(y = Juillet), colour = "#FF6600") +
  theme_classic()
  
ggplot(tableau_AMO_d, aes(x = Cohorte)) +
  geom_line(aes(y = Aout), colour = "#FFCC33") +
  theme_classic()
  
ggplot(tableau_AMO_d, aes(x = Cohorte)) +
  geom_line(aes(y = Septembre), colour = "#669900") +
  theme_classic()
  
ggplot(tableau_AMO_d, aes(x = Cohorte)) +
  geom_line(aes(y = Octobre), colour = "#66CC66") +
  theme_classic()
  
ggplot(tableau_AMO_d, aes(x = Cohorte)) +
  geom_line(aes(y = Novembre), colour = "#00CC66") +
  theme_classic()
  
ggplot(tableau_AMO_d, aes(x = Cohorte)) +
  geom_line(aes(y = Decembre), colour = "#33FFFF") +
  theme_classic()


#corrélation
cor(tableau_AMO_d[,c("Janvier", "Fevrier", "Mars", "Avril", "Mai", "Juin", "Juillet", "Aout", "Septembre", "Octobre", "Novembre", "Decembre")])

tableau_AMO_d <- mutate(tableau_AMO_d, Moy_AMO_d = rowMeans(select(tableau_AMO_d, Janvier : Decembre), na.rm = TRUE)) #moyenne annuelle
ggplot(tableau_AMO_d, aes(x = Cohorte)) +
  geom_line(aes(y = Moy_AMO_d), colour = "#CC00CC") +
  theme_classic()

tableau_AMO_d_moy <- tableau_AMO_d[,c("Cohorte", "Moy_AMO_d")]
remove(tableau_AMO_d)
```

**AMO non détendancé**
```{r}

tableau_AMO_brute <- read.csv("AMO_non_detandence.csv", header = FALSE, sep = ";",  na ="NA", stringsAsFactors = FALSE)
names(tableau_AMO_brute)[names(tableau_AMO_brute) == "V1"] <- "Cohorte"
names(tableau_AMO_brute)[c(2: 13)] = c("Janvier","Fevrier", "Mars", "Avril", "Mai", "Juin", "Juillet", "Aout", "Septembre", "Octobre", "Novembre","Decembre")

tableau_AMO_brute <- tableau_AMO_brute[-which(tableau_AMO_brute$Cohorte < 1948),] #on enlève les valeurs en dessous de cette date
tableau_AMO_brute <- tableau_AMO_brute[-which(tableau_AMO_brute$Cohorte == "AMO"),]#on enlève la dernière ligne
tableau_AMO_brute <- tableau_AMO_brute[-which(tableau_AMO_brute$Cohorte == 2022),] #on enlève les valeurs au dessus de cette date

summary(tableau_AMO_brute)

tableau_AMO_brute[,1] <- as.integer(tableau_AMO_brute[,1])
tableau_AMO_brute[,2] <- as.numeric(tableau_AMO_brute[,2])
tableau_AMO_brute[,3] <- as.numeric(tableau_AMO_brute[,3])
tableau_AMO_brute[,4] <- as.numeric(tableau_AMO_brute[,4])

sapply(tableau_AMO_brute,FUN=function(el) sum(is.na(el)))
sapply(tableau_AMO_brute, FUN = class)
str(tableau_AMO_brute)

tableau_AMO_brute <- mutate(tableau_AMO_brute, Moy_AMO_brute = rowMeans(select(tableau_AMO_brute, Janvier : Decembre), na.rm = TRUE)) #moyenne annuelle 
tableau_AMO_brute_moy <- tableau_AMO_brute[,c("Cohorte", "Moy_AMO_brute")] #on fait un nouveau tableau qui ne contient que ce dont on a besoin (la moyenne annuelle et une colonne date qui est la cohorte)
#tableau_AMO_brute_moy$Cohorte <- as.numeric(tableau_AMO_brute_moy$Cohorte)
remove(tableau_AMO_brute) #on n'utilisera pas ce tableau
```

**GSNW**
<http://www.pml-gulfstream.org.uk/data.htm> ==> Cruises 
```{r, include=FALSE}
tableau_GSNW <- read.csv("GSNW_month.csv", header = TRUE, sep = ";",  na ="NA", stringsAsFactors = FALSE)
#Renommer les colonnes
names(tableau_GSNW)[names(tableau_GSNW) == "Year"] <- "Cohorte"
names(tableau_GSNW)[c(2: 13)] = c("Janvier","Fevrier", "Mars", "Avril", "Mai", "Juin", "Juillet", "Aout", "Septembre", "Octobre", "Novembre","Decembre")

summary(tableau_GSNW)
sapply(tableau_GSNW,FUN=function(el) sum(is.na(el)))
sapply(tableau_GSNW, FUN = class)
str(tableau_GSNW)

ggplot(tableau_GSNW, aes(x = Cohorte)) +
  geom_line(aes(y = Janvier), colour = "#006666") +
  theme_classic()

ggplot(tableau_GSNW, aes(x = Cohorte)) +
  geom_line(aes(y = Fevrier), colour = "#003399") +
  theme_classic()
    
ggplot(tableau_GSNW, aes(x = Cohorte)) +
  geom_line(aes(y = Mars), colour = "#9933FF") +
  theme_classic()
  
ggplot(tableau_GSNW, aes(x = Cohorte)) +
  geom_line(aes(y = Avril), colour = "#FF33FF") +
  theme_classic()
  
ggplot(tableau_GSNW, aes(x = Cohorte)) +
  geom_line(aes(y = Mai), colour = "#993366") +
  theme_classic()
  
ggplot(tableau_GSNW, aes(x = Cohorte)) +
  geom_line(aes(y = Juin), colour = "#990000") +
  theme_classic()
  
ggplot(tableau_GSNW, aes(x = Cohorte)) +
  geom_line(aes(y = Juillet), colour = "#FF6600") +
  theme_classic()
  
ggplot(tableau_GSNW, aes(x = Cohorte)) +
  geom_line(aes(y = Aout), colour = "#FFCC33") +
  theme_classic()
  
ggplot(tableau_GSNW, aes(x = Cohorte)) +
  geom_line(aes(y = Septembre), colour = "#669900") +
  theme_classic()
  
ggplot(tableau_GSNW, aes(x = Cohorte)) +
  geom_line(aes(y = Octobre), colour = "#66CC66") +
  theme_classic()
  
ggplot(tableau_GSNW, aes(x = Cohorte)) +
  geom_line(aes(y = Novembre), colour = "#00CC66") +
  theme_classic()
  
ggplot(tableau_GSNW, aes(x = Cohorte)) +
  geom_line(aes(y = Decembre), colour = "#33FFFF") +
  theme_classic()

#correlation
cor(tableau_GSNW[,c("Janvier", "Fevrier", "Mars", "Avril", "Mai", "Juin", "Juillet", "Aout", "Septembre", "Octobre", "Novembre", "Decembre")])

ggplot(tableau_GSNW, aes(x = Cohorte)) +
  geom_line(aes(y = Annual), colour = "#CC00CC") +
  theme_classic()


tableau_GSNW_moy <- tableau_GSNW[,c("Cohorte", "Annual")] #on fait un sous-tableau
names(tableau_GSNW_moy)[names(tableau_GSNW_moy) == "Annual"] <- "GSNW_moy"
remove(tableau_GSNW)
```

**SST**
```{r}
table_SST_MN <- read.csv("table_SST_MN.csv", header = TRUE, sep = ";",  na ="NA", stringsAsFactors = FALSE)
names(table_SST_MN)[names(table_SST_MN) == "annee"] <- "Cohorte"
```


# Fonctions utiles
```{r}
#cette fonction permet de fusionner les tableaux de variables environnementales aux tableaux des descripteurs biologiques de chaque espèce
#on utilise la fonction merge et non left join parce que la fonction merge ne fusionne les tableaux que pour les lignes dont les valeurs de la colonne de référence (qui sera la cohorte) correspondent et elle supprime les autre lignes . C'est important parce qu'après on utilise la fonction prédict et on recalcul des valeurs de SR pour chaque cohorte, il peut y avoir des problèmes s'il y a des NA qui trainent dans la colonne de la Cohorte
F_fusion_df <- function(tableau, Cohorte){
  tableau <- merge(tableau, table_NAO_JFM, by = c(Cohorte))
  tableau <- merge(tableau, tableau_AMO_d_moy, by = c(Cohorte))
  tableau <- merge(tableau, tableau_AMO_brute_moy, by = c(Cohorte))
  tableau <- merge(tableau, tableau_GSNW_moy, by = c(Cohorte))
  tableau <- merge(tableau, table_SST_MN, by =c(Cohorte))
  tableau <- fonction_scale_i(tableau = tableau)
  return(tableau)
}
#centrer réduire les variables explicatives 
fonction_scale_i <- function(tableau){
  tableau <- mutate(tableau, sc_cohorte = as.numeric(scale(Cohorte)))
  tableau <- mutate(tableau, sc_LngtClass = as.numeric(scale(LngtClass)))
  tableau <- mutate(tableau, sc_age = as.numeric(scale(Age)))
  tableau <- mutate(tableau, sc_Moy_NAO_JFM = as.numeric(scale(Moy_NAO_JFM)))
  tableau <- mutate(tableau, sc_moy_AMO_d = as.numeric(scale(Moy_AMO_d)))
  tableau <- mutate(tableau, sc_moy_AMO_brute = as.numeric(scale(Moy_AMO_brute)))
  tableau <- mutate(tableau, sc_moy_GSNW = as.numeric(scale(GSNW_moy)))
  tableau <- mutate(tableau, sc_SST = as.numeric(scale(sst_i)))
}

#vérifier les corrélations entre variables explicatives
fonction_corr <- function(tableau){
  #tableau de correlation
  corr <- cor(tableau[which(tableau[,"Cohorte"] > 1966 & tableau[, "Cohorte"] < 2019),c("sc_cohorte", "sc_LngtClass", "sc_age", "sc_Moy_NAO_JFM", "sc_moy_AMO_d", "sc_moy_AMO_brute", "sc_moy_GSNW", "sc_SST")])
  return(corr)
}

#finalement on n'utilisera pas cette fonction parce qu'on créer les polynomes avec la fonction poly directement dans les modèles 
fonction_polynome<- function(tableau) {
  tableau <- mutate(tableau, Age_2 = Age^2)
  tableau <- mutate(tableau, Age_3 = Age^3)
  tableau <- mutate(tableau, sc_age_2 = as.numeric(scale(Age_2)))
  tableau <- mutate(tableau, sc_age_3 = as.numeric(scale(Age_3)))
  tableau <- mutate(tableau, LngtClass_2 = LngtClass^2)
  tableau <- mutate(tableau, LngtClass_3 = LngtClass^3)
  tableau <- mutate(tableau, sc_LngtClass_2 = as.numeric(scale(LngtClass_2)))
  tableau <- mutate(tableau, sc_LngtClass_3 = as.numeric(scale(LngtClass_3)))
  tableau <- tableau %>% relocate (Age_2, .after = Age)
  tableau <- tableau %>% relocate (Age_3, .after = Age_2)
  tableau <- tableau %>% relocate (sc_age_2, .after = sc_age)
  tableau <- tableau %>% relocate (sc_age_3, .after = sc_age_2)
  tableau <- tableau %>% relocate (LngtClass_2, .after = LngtClass)
  tableau <- tableau %>% relocate (LngtClass_3, .after = LngtClass_2)
  tableau <- tableau %>% relocate (sc_LngtClass_2, .after = sc_LngtClass)
  tableau <- tableau %>% relocate (sc_LngtClass_3, .after = sc_LngtClass_2)
  return(tableau)
}
```

Mettre le sexe numérique (données 0 et 1) en as.factor
```{r}
#L'idée c'est d'avoir dans le tableau une colonne du sexe numérique (0 et 1) en integer et une colonne en facteur. Pour ça il faut d'abord dupliquer la colonne integer et ensuite on met en facteur sur la nouvelle colonne
class(table_donnees$sexe_numerique)#integer
names(table_donnees)[names(table_donnees) == "sexe_numerique"] <- "sexe_num_2"
table_donnees <- mutate(table_donnees, sexe_numerique = as.factor(sexe_num_2)) 
table_donnees <- table_donnees %>% relocate(sexe_num_2, .after = sexe_numerique)#changer de place la colonne

```


# Creation tables espèces 
**hareng**
```{r, include=FALSE}
table_hareng_i <- filter(table_donnees, Species == "Clupea harengus")
table_hareng_i <- table_hareng_i[order(table_hareng_i$Cohorte),]
table_hareng_i <- F_fusion_df(tableau = table_hareng_i, Cohorte = "Cohorte")
sapply(table_hareng_i, FUN = class)
sapply(table_hareng_i, FUN = summary)
fonction_corr(tableau = table_hareng_i)



#les modèles réalisés reposent sur la période entre 1966 et 2019
#pour réaliser la figure de serie temporelle de sexe ratio en fonction des cohortes pour la seconde procédure de sélection (après retrait des outliers)
#table_cohortes <- table_cohortes[-which(table_cohortes$Species == "Clupea harengus" & table_cohortes$Cohorte > 2019),]
#table_cohortes <- table_cohortes[-which(table_cohortes$Species == "Clupea harengus" & table_cohortes$Cohorte <1966),]
```

**Aiglefin** 
Les trois premières cohortes sont à enlever
```{r, include=FALSE}
table_aiglefin_i <- filter(table_donnees, Species == "Melanogrammus aeglefinus")
table_aiglefin_i <- table_aiglefin_i[-which(table_aiglefin_i$Age == max(table_aiglefin_i$Age)),]
table_aiglefin_i <- table_aiglefin_i[order(table_aiglefin_i$Cohorte),]
table_aiglefin_i <- table_aiglefin_i[-which(table_aiglefin_i$Cohorte <1970),]#outliers


table_aiglefin_i <- F_fusion_df(tableau = table_aiglefin_i, Cohorte = "Cohorte")
fonction_corr(tableau = table_aiglefin_i)
sapply(table_aiglefin_i, FUN = class)
sapply(table_aiglefin_i, FUN = summary)

#table_cohortes <- table_cohortes[-which(table_cohortes$Species == "Melanogrammus aeglefinus" & table_cohortes$Cohorte < 1970),]
#table_cohortes <- table_cohortes[-which(table_cohortes$Species == "Melanogrammus aeglefinus" & table_cohortes$Cohorte > 2019),]
```

**Morue**
```{r, include=FALSE}
table_morue_i <- filter(table_donnees, Species == "Gadus morhua")
table_morue_i <- table_morue_i[order(table_morue_i$Cohorte),]
table_morue_i <- table_morue_i[-which(table_morue_i$Cohorte <1969),]

table_morue_i <- F_fusion_df(tableau = table_morue_i, Cohorte = "Cohorte")
sapply(table_morue_i, FUN = summary)
fonction_corr(tableau = table_morue_i)

#table_cohortes <- table_cohortes[-which(table_cohortes$Species == "Gadus morhua" & table_cohortes$Cohorte < 1969),]
#table_cohortes <- table_cohortes[-which(table_cohortes$Species == "Gadus morhua" & table_cohortes$Cohorte > 2019),]
```

**Merlan**
```{r, include=FALSE}
table_merlan_i <- filter(table_donnees, Species == "Merlangius merlangus")
table_merlan_i <- table_merlan_i[-which(table_merlan_i$Age > 20),]
table_merlan_i <- table_merlan_i[-which(table_merlan_i$Cohorte <1969),]
nrow(table_merlan_i[which(table_merlan_i$Cohorte == 1969),])
table_merlan_i <- F_fusion_df(tableau = table_merlan_i, Cohorte = "Cohorte")

sapply(table_merlan_i, FUN = class)
fonction_corr(tableau = table_merlan_i)#variables age et cohorte non corrélées
sapply(table_merlan_i, FUN = summary)

#table_cohortes <- table_cohortes[-which(table_cohortes$Species == "Merlangius merlangus" & table_cohortes$Cohorte < 1969),]
#table_cohortes <- table_cohortes[-which(table_cohortes$Species == "Merlangius merlangus" & table_cohortes$Cohorte > 2019),]

```

**Plie**
```{r, include=FALSE}
table_plie_i <- filter(table_donnees, Species == "Pleuronectes platessa")
table_plie_i <- table_plie_i[order(table_plie_i$Cohorte),]
table_plie_i <- F_fusion_df(tableau = table_plie_i, Cohorte = "Cohorte")
table_plie_i <- table_plie_i[-which(table_plie_i$Cohorte == 1981),]

sapply(table_plie_i, FUN = class)
sapply(table_plie_i, FUN = summary)
fonction_corr(tableau = table_plie_i)
boxplot(table_plie_i$Age)
summary(table_plie_i$sc_cohorte)


#table_cohortes <- table_cohortes[-which(table_cohortes$Species == "Pleuronectes platessa" & table_cohortes$Cohorte == 1981),]
#table_cohortes <- table_cohortes[-which(table_cohortes$Species == "Pleuronectes platessa" & table_cohortes$Cohorte > 2019),]
#table_cohortes <- table_cohortes[-which(table_cohortes$Species == "Pleuronectes platessa" & table_cohortes$Cohorte <1966),]
```

**Lieu**
```{r, include=FALSE}
table_lieu_i <- filter(table_donnees, Species == "Pollachius virens")
table_lieu_i <- table_lieu_i[order(table_lieu_i$Cohorte),]

table_lieu_i <- table_lieu_i[-which(table_lieu_i$Cohorte == 1972 | table_lieu_i$Cohorte == 1973 | table_lieu_i$Cohorte == 1976 | table_lieu_i$Cohorte == 1977| table_lieu_i$Cohorte == 1981| table_lieu_i$Cohorte == 1982| table_lieu_i$Cohorte == 1983| table_lieu_i$Cohorte == 1984 | table_lieu_i$Cohorte == 1985 | table_lieu_i$Cohorte == 2019 | table_lieu_i$Cohorte == 2017 | table_lieu_i$Cohorte == 2016),]
table_lieu_i <- F_fusion_df(tableau = table_lieu_i, Cohorte = "Cohorte")

unique(table_lieu_i$fcohorte)
sapply(table_lieu_i, FUN = summary)
fonction_corr(tableau = table_lieu_i)


mean(table_donnees[which(table_donnees$Species == "Pollachius virens"), "sexe_num_2"])


#table_cohortes <- table_cohortes[-which(table_cohortes$Species == "Pollachius virens" & table_cohortes$Cohorte == 1972),]
#table_cohortes <- table_cohortes[-which(table_cohortes$Species == "Pollachius virens" & table_cohortes$Cohorte == 1973),]
#table_cohortes <- table_cohortes[-which(table_cohortes$Species == "Pollachius virens" & table_cohortes$Cohorte == 1976),]
#table_cohortes <- table_cohortes[-which(table_cohortes$Species == "Pollachius virens" & table_cohortes$Cohorte == 1977),]
#table_cohortes <- table_cohortes[-which(table_cohortes$Species == "Pollachius virens" & table_cohortes$Cohorte == 1981),]
#table_cohortes <- table_cohortes[-which(table_cohortes$Species == "Pollachius virens" & table_cohortes$Cohorte == 1982),]
#table_cohortes <- table_cohortes[-which(table_cohortes$Species == "Pollachius virens" & table_cohortes$Cohorte == 1983),]
#table_cohortes <- table_cohortes[-which(table_cohortes$Species == "Pollachius virens" & table_cohortes$Cohorte == 1984),]
#table_cohortes <- table_cohortes[-which(table_cohortes$Species == "Pollachius virens" & table_cohortes$Cohorte == 1985),]
#table_cohortes <- table_cohortes[-which(table_cohortes$Species == "Pollachius virens" & table_cohortes$Cohorte == 2016),]
#table_cohortes <- table_cohortes[-which(table_cohortes$Species == "Pollachius virens" & table_cohortes$Cohorte == 2017),]
#table_cohortes <- table_cohortes[-which(table_cohortes$Species == "Pollachius virens" & table_cohortes$Cohorte >= 2019),]
#table_cohortes <- table_cohortes[-which(table_cohortes$Species == "Pollachius virens" & table_cohortes$Cohorte < 1966),]
```


```{r, include=FALSE}
table_maquereau_i <- filter(table_donnees, Species == "Scomber scombrus")
table_maquereau_i <- table_maquereau_i[order(table_maquereau_i$Cohorte),]
table_maquereau_i <- table_maquereau_i[-which(table_maquereau_i$Cohorte == 1979 | table_maquereau_i$Cohorte == 1980 | table_maquereau_i$Cohorte == 1981 | table_maquereau_i$Cohorte == 1984| table_maquereau_i$Cohorte == 1987| table_maquereau_i$Cohorte == 1988| table_maquereau_i$Cohorte == 1990| table_maquereau_i$Cohorte == 2003),]
table_maquereau_i <- F_fusion_df(tableau = table_maquereau_i, Cohorte = "Cohorte")

nrow(table_maquereau_i[which(table_maquereau_i$Cohorte == 2003),])

unique(table_maquereau_i$fcohorte)
sapply(table_maquereau_i, FUN = class)
sapply(table_maquereau_i, FUN = summary)
fonction_corr(tableau = table_maquereau_i)



#table_cohortes <- table_cohortes[-which(table_cohortes$Species == "Scomber scombrus" & table_cohortes$Cohorte == 1979),]
#table_cohortes <- table_cohortes[-which(table_cohortes$Species == "Scomber scombrus" & table_cohortes$Cohorte == 1980),]
#table_cohortes <- table_cohortes[-which(table_cohortes$Species == "Scomber scombrus" & table_cohortes$Cohorte == 1981),]
#table_cohortes <- table_cohortes[-which(table_cohortes$Species == "Scomber scombrus" & table_cohortes$Cohorte == 1984),]
#table_cohortes <- table_cohortes[-which(table_cohortes$Species == "Scomber scombrus" & table_cohortes$Cohorte == 1987),]
#table_cohortes <- table_cohortes[-which(table_cohortes$Species == "Scomber scombrus" & table_cohortes$Cohorte == 1988),]
#table_cohortes <- table_cohortes[-which(table_cohortes$Species == "Scomber scombrus" & table_cohortes$Cohorte == 1990),]
#table_cohortes <- table_cohortes[-which(table_cohortes$Species == "Scomber scombrus" & table_cohortes$Cohorte == 2003),]
#table_cohortes <- table_cohortes[-which(table_cohortes$Species == "Scomber scombrus" & table_cohortes$Cohorte > 2019),]
#table_cohortes <- table_cohortes[-which(table_cohortes$Species == "Scomber scombrus" & table_cohortes$Cohorte < 1966),]
```

**Sprat**
```{r, include=FALSE}
table_sprat_i <- filter(table_donnees, Species == "Sprattus sprattus")
table_sprat_i <- table_sprat_i[order(table_sprat_i$Cohorte),]
table_sprat_i <- table_sprat_i[-which(table_sprat_i$Age > 6),]
table_sprat_i <- table_sprat_i[-which(table_sprat_i$LngtClass > 160),]
unique(table_sprat_i$fcohorte)#trous dans la série temporelle
table_sprat_i <- table_sprat_i[-which(table_sprat_i$Cohorte == 1967 | table_sprat_i$Cohorte == 1968 | table_sprat_i$Cohorte == 1991),]
nrow(table_sprat_i[which(table_sprat_i$Cohorte == 1969),])
table_sprat_i <- F_fusion_df(tableau = table_sprat_i, Cohorte = "Cohorte")

sapply(table_sprat_i, FUN = class)
fonction_corr(tableau = table_sprat_i)
sapply(table_sprat_i, FUN = summary)
unique(table_sprat_i$fcohorte)


#table_cohortes <- table_cohortes[-which(table_cohortes$Species == "Sprattus sprattus" & table_cohortes$Cohorte == 1967),]
#table_cohortes <- table_cohortes[-which(table_cohortes$Species == "Sprattus sprattus" & table_cohortes$Cohorte == 1968),]
#table_cohortes <- table_cohortes[-which(table_cohortes$Species == "Sprattus sprattus" & table_cohortes$Cohorte == 1991),]
#table_cohortes <- table_cohortes[-which(table_cohortes$Species == "Sprattus sprattus" & table_cohortes$Cohorte > 2019),]
```

**Tacaud**
```{r, include=FALSE}
table_tacaud_i <- filter(table_donnees, Species == "Trisopterus esmarkii")

table_tacaud_i <- table_tacaud_i[order(table_tacaud_i$Cohorte),]
table_tacaud_i <-table_tacaud_i[-which(table_tacaud_i$Age > 7), ] # le tacaud vis environ 5 ans 
table_tacaud_i <- table_tacaud_i[-which(table_tacaud_i$Cohorte == 1969 | table_tacaud_i$Cohorte == 1971 | table_tacaud_i$Cohorte == 1973 | table_tacaud_i$Cohorte == 1974 | table_tacaud_i$Cohorte == 1975),]
nrow(table_tacaud_i[which(table_tacaud_i$Cohorte == 1973),])
table_tacaud_i <- F_fusion_df(tableau = table_tacaud_i, Cohorte = "Cohorte")

sapply(table_tacaud_i, FUN = class)
sapply(table_tacaud_i, FUN = summary)
fonction_corr(tableau = table_tacaud_i)


#table_cohortes <- table_cohortes[-which(table_cohortes$Species == "Trisopterus esmarkii" & table_cohortes$Cohorte == 1969),]
#table_cohortes <- table_cohortes[-which(table_cohortes$Species == "Trisopterus esmarkii" & table_cohortes$Cohorte == 1971),]
#table_cohortes <- table_cohortes[-which(table_cohortes$Species == "Trisopterus esmarkii" & table_cohortes$Cohorte == 1973),]
#table_cohortes <- table_cohortes[-which(table_cohortes$Species == "Trisopterus esmarkii" & table_cohortes$Cohorte == 1974),]
#table_cohortes <- table_cohortes[-which(table_cohortes$Species == "Trisopterus esmarkii" & table_cohortes$Cohorte == 1975),]
#table_cohortes <- table_cohortes[-which(table_cohortes$Species == "Trisopterus esmarkii" & table_cohortes$Cohorte > 2019),]
```


```{r, include=FALSE}
table_limande_sole_i <- filter(table_donnees, Species == "Microstomus kitt")
table_limande_sole_i <- table_limande_sole_i[order(table_limande_sole_i$Cohorte),]
table_limande_sole_i <- table_limande_sole_i[-which(table_limande_sole_i$Cohorte == 1993 | table_limande_sole_i$Cohorte == 1996 | table_limande_sole_i$Cohorte == 2003 | table_limande_sole_i$Cohorte == 2019),]
nrow(table_limande_sole_i[which(table_limande_sole_i$Cohorte == 2003),])
table_limande_sole_i <- F_fusion_df(tableau = table_limande_sole_i, Cohorte = "Cohorte")

sapply(table_limande_sole_i, FUN = class)
sapply(table_limande_sole_i, FUN = summary)
fonction_corr(tableau = table_limande_sole_i)
unique(table_limande_sole_i$fcohorte)


#table_cohortes <- table_cohortes[-which(table_cohortes$Species == "Microstomus kitt" & table_cohortes$Cohorte == 1993),]
#table_cohortes <- table_cohortes[-which(table_cohortes$Species == "Microstomus kitt" & table_cohortes$Cohorte == 1996),]
#table_cohortes <- table_cohortes[-which(table_cohortes$Species == "Microstomus kitt" & table_cohortes$Cohorte == 2003),]
#table_cohortes <- table_cohortes[-which(table_cohortes$Species == "Microstomus kitt" & table_cohortes$Cohorte >= 2019),]
```



# Modèles
**Modèles nuls et simples**
```{r}
M_i_A_nul <- glmer(sexe_numerique ~ 1 + (1| Area) + (1| fcohorte), data =  table_aiglefin_i, family = binomial(link=logit))
M_i_H_nul <- glmer(sexe_numerique ~ 1 + (1| Area) + (1| fcohorte), data =  table_hareng_i, family = binomial(link=logit))
M_i_L_nul <- glmer(sexe_numerique ~ 1 + (1| Area) + (1| fcohorte), data =  table_lieu_i, family = binomial(link=logit))
M_i_Ma_nul <- glmer(sexe_numerique ~ 1  + (1| fcohorte), data =  table_maquereau_i, family = binomial(link=logit))
M_i_Me_nul <- glmer(sexe_numerique ~ 1 + (1| Area) + (1| fcohorte), data =  table_merlan_i, family = binomial(link=logit))
M_i_Mo_nul <- glmer(sexe_numerique ~ 1 + (1| Area) + (1| fcohorte), data =  table_morue_i, family = binomial(link=logit))
M_i_P_nul <- glmer(sexe_numerique ~ 1 + (1| Area) + (1| fcohorte), data =  table_plie_i, family = binomial(link=logit))
M_i_S_nul <- glmer(sexe_numerique ~ 1 + (1| Area) + (1| fcohorte), data =  table_sprat_i, family = binomial(link=logit))
M_i_T_nul <- glmer(sexe_numerique ~ 1 + (1| Area) + (1| fcohorte), data =  table_tacaud_i, family = binomial(link=logit))
M_i_LS_nul <- glmer(sexe_numerique ~ 1 + (1| Area) + (1| fcohorte), data =  table_limande_sole_i, family = binomial(link=logit))

#Avec Cohortes
M_i_A_40 <- glmer(sexe_numerique ~ sc_cohorte + sc_LngtClass + sc_age +  (1| Area) + (1| fcohorte), data =  table_aiglefin_i, family = binomial(link=logit))
M_i_H_40 <- glmer(sexe_numerique ~ sc_cohorte + sc_LngtClass + sc_age +  (1| Area) + (1| fcohorte), data =  table_hareng_i, family = binomial(link=logit))
M_i_L_40 <- glmer(sexe_numerique ~ sc_cohorte + sc_LngtClass + sc_age +  (1| Area) + (1| fcohorte), data =  table_lieu_i, family = binomial(link=logit))
M_i_Ma_40 <- glmer(sexe_numerique ~ sc_cohorte + sc_LngtClass + sc_age + (1| fcohorte), data =  table_maquereau_i, family = binomial(link=logit))
M_i_Me_40 <- glmer(sexe_numerique ~ sc_cohorte + sc_LngtClass + sc_age +  (1| Area) + (1| fcohorte), data =  table_merlan_i, family = binomial(link=logit))
M_i_Mo_40 <- glmer(sexe_numerique ~ sc_cohorte + sc_LngtClass + sc_age +  (1| Area) + (1| fcohorte), data =  table_morue_i, family = binomial(link=logit))
M_i_P_40 <- glmer(sexe_numerique ~ sc_cohorte + sc_LngtClass + sc_age +  (1| Area) + (1| fcohorte), data =  table_plie_i, family = binomial(link=logit))
M_i_S_40 <- glmer(sexe_numerique ~ sc_cohorte + sc_LngtClass + sc_age +  (1| Area) + (1| fcohorte), data =  table_sprat_i, family = binomial(link=logit))
M_i_T_40 <- glmer(sexe_numerique ~ sc_cohorte + sc_LngtClass + sc_age +  (1| Area) + (1| fcohorte), data =  table_tacaud_i, family = binomial(link=logit))
M_i_LS_40 <- glmer(sexe_numerique ~ sc_cohorte + sc_LngtClass + sc_age +  (1| Area) + (1| fcohorte), data =  table_limande_sole_i, family = binomial(link=logit))


```

```{r}
plot(predictorEffects(M_i_H_40, residuals=TRUE), partial.residuals=list(lty="dashed"))
plot(predictorEffects(M_i_A_40, residuals=TRUE), partial.residuals=list(lty="dashed"))
plot(predictorEffects(M_i_L_40, residuals=TRUE), partial.residuals=list(lty="dashed"))
plot(predictorEffects(M_i_Ma_40, residuals=TRUE), partial.residuals=list(lty="dashed"))
plot(predictorEffects(M_i_Me_40, residuals=TRUE), partial.residuals=list(lty="dashed"))
plot(predictorEffects(M_i_Mo_40, residuals=TRUE), partial.residuals=list(lty="dashed"))
plot(predictorEffects(M_i_P_40, residuals=TRUE), partial.residuals=list(lty="dashed"))
plot(predictorEffects(M_i_S_40, residuals=TRUE), partial.residuals=list(lty="dashed"))
plot(predictorEffects(M_i_T_40, residuals=TRUE), partial.residuals=list(lty="dashed"))
plot(predictorEffects(M_i_LS_40, residuals=TRUE), partial.residuals=list(lty="dashed"))
```


```{r}
plot(predictorEffects(M_i_H_40, residuals=TRUE), partial.residuals=list(lty="dashed"), axes = list(y = list(lim = c(-6, 6))))
plot(predictorEffects(M_i_A_40, residuals=TRUE), partial.residuals=list(lty="dashed"), axes = list(y = list(lim = c(-6, 6))))
plot(predictorEffects(M_i_L_40, residuals=TRUE), partial.residuals=list(lty="dashed"), axes = list(y = list(lim = c(-6, 6))))
plot(predictorEffects(M_i_Ma_40, residuals=TRUE), partial.residuals=list(lty="dashed"), axes = list(y = list(lim = c(-6, 6))))
plot(predictorEffects(M_i_Me_40, residuals=TRUE), partial.residuals=list(lty="dashed"), axes = list(y = list(lim = c(-6, 6))))
plot(predictorEffects(M_i_Mo_40, residuals=TRUE), partial.residuals=list(lty="dashed"), axes = list(y = list(lim = c(-6, 6))))
plot(predictorEffects(M_i_P_40, residuals=TRUE), partial.residuals=list(lty="dashed"), axes = list(y = list(lim = c(-6, 6))))
plot(predictorEffects(M_i_S_40, residuals=TRUE), partial.residuals=list(lty="dashed"), axes = list(y = list(lim = c(-6, 6))))
plot(predictorEffects(M_i_T_40, residuals=TRUE), partial.residuals=list(lty="dashed"), axes = list(y = list(lim = c(-6, 6))))
plot(predictorEffects(M_i_LS_40, residuals=TRUE), partial.residuals=list(lty="dashed"), axes = list(y = list(lim = c(-6, 6))))

#ggsave("plot_linearité_M_i_Mo_40.png", width = 13, height = 6)

```

```{r}
#polynomes Taille et Age de degré 2  
M_i_L_40_pta2<- glmer(sexe_numerique ~ sc_cohorte + poly(sc_LngtClass, degree = 2, raw = TRUE) + poly(sc_age, degree  = 2) +  (1| Area) + (1| fcohorte), data =  table_lieu_i, family = binomial(link=logit))
M_i_Me_40_pta2 <- glmer(sexe_numerique ~ sc_cohorte + poly(sc_LngtClass, degree = 2,  raw = TRUE) + poly(sc_age, degree  = 2,  raw = TRUE) +  (1| Area) + (1| fcohorte), data =  table_merlan_i, family = binomial(link=logit))
M_i_Mo_40_pta2 <- glmer(sexe_numerique ~ sc_cohorte + poly(sc_LngtClass, degree = 2) + poly(sc_age, degree  = 2) +  (1| Area) + (1| fcohorte), data =  table_morue_i, family = binomial(link=logit))
M_i_P_40_pta2 <- glmer(sexe_numerique ~ sc_cohorte + poly(sc_LngtClass, degree = 2) + poly(sc_age, degree  = 2) +  (1| Area) + (1| fcohorte), data =  table_plie_i, family = binomial(link=logit))
M_i_S_40_pta2 <- glmer(sexe_numerique ~ sc_cohorte + poly(sc_LngtClass, degree = 2,  raw = TRUE) + poly(sc_age, degree  = 2) +  (1| Area) + (1| fcohorte), data =  table_sprat_i, family = binomial(link=logit))
M_i_T_40_pta2 <- glmer(sexe_numerique ~ sc_cohorte + poly(sc_LngtClass, degree = 2) + poly(sc_age, degree  = 2) +  (1| Area) + (1| fcohorte), data =  table_tacaud_i, family = binomial(link=logit))
M_i_LS_40_pta2 <- glmer(sexe_numerique ~ sc_cohorte + poly(sc_LngtClass, degree = 2) + poly(sc_age, degree  = 2) +  (1| Area) + (1| fcohorte), data =  table_limande_sole_i, family = binomial(link=logit))

#polynômes Taille et âge de degré 3
M_i_P_40_pta3 <- glmer(sexe_numerique ~ sc_cohorte + poly(sc_LngtClass, degree = 3) + poly(sc_age, degree  = 3) +  (1| Area) + (1| fcohorte), data =  table_plie_i, family = binomial(link=logit))
M_i_LS_40_pta3 <- glmer(sexe_numerique ~ sc_cohorte + poly(sc_LngtClass, degree = 3) + poly(sc_age, degree  = 3) +  (1| Area) + (1| fcohorte), data =  table_limande_sole_i, family = binomial(link=logit))
M_i_T_40_pta3 <- glmer(sexe_numerique ~ sc_cohorte + poly(sc_LngtClass, degree = 3, raw = TRUE) + poly(sc_age, degree  = 3, raw = TRUE) +  (1| Area) + (1| fcohorte), data =  table_tacaud_i, family = binomial(link=logit))

#polynôme Taille Age de degré 2 et 3
M_i_P_40_pta23 <- glmer(sexe_numerique ~ sc_cohorte +  poly(sc_LngtClass, degree = 2) + poly(sc_age, degree  = 3) +  (1| Area) + (1| fcohorte), data =  table_plie_i, family = binomial(link=logit))
M_i_LS_40_pta23 <- glmer(sexe_numerique ~ sc_cohorte + poly(sc_LngtClass, degree = 2) + poly(sc_age, degree  = 3) +  (1| Area) + (1| fcohorte), data =  table_limande_sole_i, family = binomial(link=logit))
M_i_T_40_pta23 <- glmer(sexe_numerique ~ sc_cohorte + poly(sc_LngtClass, degree = 2) + poly(sc_age, degree  = 3) +  (1| Area) + (1| fcohorte), data =  table_tacaud_i, family = binomial(link=logit))

#Pôlynômes Taille Age de degré 3 et 2
M_i_Me_40_pta32 <- glmer(sexe_numerique ~ sc_cohorte + poly(sc_LngtClass, degree = 3) + poly(sc_age, degree  = 2) +  (1| Area) + (1| fcohorte), data =  table_merlan_i, family = binomial(link=logit))
M_i_P_40_pta32 <- glmer(sexe_numerique ~ sc_cohorte + poly(sc_LngtClass, degree = 3, raw = TRUE) + poly(sc_age, degree  = 2, raw = TRUE) +  (1| Area) + (1| fcohorte), data =  table_plie_i, family = binomial(link=logit))#ne converge pas
M_i_T_40_pta32 <- glmer(sexe_numerique ~ sc_cohorte + poly(sc_LngtClass, degree = 3, raw = TRUE) + poly(sc_age, degree  = 2, raw = TRUE) +  (1| Area) + (1| fcohorte), data =  table_tacaud_i, family = binomial(link=logit))#ne converge pas
M_i_LS_40_pta32 <- glmer(sexe_numerique ~ sc_cohorte + poly(sc_LngtClass, degree = 3) + poly(sc_age, degree  = 2) +  (1| Area) + (1| fcohorte), data =  table_limande_sole_i, family = binomial(link=logit))

#Polynôme Taille de degré 2
M_i_A_40_pt2 <- glmer(sexe_numerique ~ sc_cohorte +  poly(sc_LngtClass, degree = 2) + sc_age +  (1| Area) + (1| fcohorte), data =  table_aiglefin_i, family = binomial(link=logit)) 
M_i_L_40_pt2 <- glmer(sexe_numerique ~ sc_cohorte +  poly(sc_LngtClass, degree = 2) + sc_age +  (1| Area) + (1| fcohorte), data =  table_lieu_i, family = binomial(link=logit))
M_i_Mo_40_pt2 <- glmer(sexe_numerique ~ sc_cohorte +  poly(sc_LngtClass, degree = 2) + sc_age +  (1| Area) + (1| fcohorte), data =  table_morue_i, family = binomial(link=logit))
M_i_S_40_pt2 <- glmer(sexe_numerique ~ sc_cohorte + poly(sc_LngtClass, degree = 2) + sc_age +  (1| Area) + (1| fcohorte), data =  table_sprat_i, family = binomial(link=logit))
M_i_LS_40_pt2 <- glmer(sexe_numerique ~ sc_cohorte +  poly(sc_LngtClass, degree = 2) + sc_age +  (1| Area) + (1| fcohorte), data =  table_limande_sole_i, family = binomial(link=logit)) 
M_i_T_40_pt2 <- glmer(sexe_numerique ~ sc_cohorte +  poly(sc_LngtClass, degree = 2) + sc_age +  (1| Area) + (1| fcohorte), data =  table_tacaud_i, family = binomial(link=logit)) 

#Polynôme Age de degré 2 
M_i_L_40_pa2 <- glmer(sexe_numerique ~ sc_cohorte + sc_LngtClass + poly(sc_age, degree  = 2) +  (1| Area) + (1| fcohorte), data =  table_lieu_i, family = binomial(link=logit))
M_i_Ma_40_pa2 <- glmer(sexe_numerique ~ sc_cohorte + sc_LngtClass + poly(sc_age, degree  = 2) + (1| fcohorte), data =  table_maquereau_i, family = binomial(link=logit))
M_i_Mo_40_pa2 <- glmer(sexe_numerique ~ sc_cohorte + sc_LngtClass + poly(sc_age, degree  = 2) +  (1| Area) + (1| fcohorte), data =  table_morue_i, family = binomial(link=logit))
M_i_S_40_pa2 <- glmer(sexe_numerique ~ sc_cohorte + sc_LngtClass + poly(sc_age, degree  = 2) +  (1| Area) + (1| fcohorte), data =  table_sprat_i, family = binomial(link=logit))
M_i_LS_40_pa2 <- glmer(sexe_numerique ~ sc_cohorte + sc_LngtClass + poly(sc_age, degree  = 2) +  (1| Area) + (1| fcohorte), data =  table_limande_sole_i, family = binomial(link=logit))

#Polynome Taille degré 3
M_i_A_40_pt3 <- glmer(sexe_numerique ~ sc_cohorte +  poly(sc_LngtClass, degree = 3) + sc_age +  (1| Area) + (1| fcohorte), data =  table_aiglefin_i, family = binomial(link=logit)) 
M_i_T_40_pt3 <- glmer(sexe_numerique ~ sc_cohorte +  poly(sc_LngtClass, degree = 3) + sc_age +  (1| Area) + (1| fcohorte), data =  table_tacaud_i, family = binomial(link=logit)) 
```


```{r}
#hareng
plot(predictorEffects(M_i_H_40, residuals=TRUE), partial.residuals=list(lty="dashed"), axes = list(y = list(lim = c(-6, 6))))

#Aiglefin
plot(predictorEffects(M_i_A_40, residuals=TRUE), partial.residuals=list(lty="dashed"), axes = list(y = list(lim = c(-6, 6))))#
plot(predictorEffects(M_i_A_40_pt2, residuals=TRUE), partial.residuals=list(lty="dashed"), axes = list(y = list(lim = c(-6, 6))))
plot(predictorEffects(M_i_A_40_pt3, residuals=TRUE), partial.residuals=list(lty="dashed"), axes = list(y = list(lim = c(-6, 6))))#
AIC(M_i_A_40)
AIC(M_i_A_40_pt2)
AIC(M_i_A_40_pt3)#
#Demander à Bruno et Jean marc

#Lieu
plot(predictorEffects(M_i_L_40, residuals=TRUE), partial.residuals=list(lty="dashed"), axes = list(y = list(lim = c(-6, 6))))#
plot(predictorEffects(M_i_L_40_pta2, residuals=TRUE), partial.residuals=list(lty="dashed"), axes = list(y = list(lim = c(-6, 6))))
plot(predictorEffects(M_i_L_40_pt2, residuals=TRUE), partial.residuals=list(lty="dashed"), axes = list(y = list(lim = c(-6, 6))))#
plot(predictorEffects(M_i_L_40_pa2, residuals=TRUE), partial.residuals=list(lty="dashed"), axes = list(y = list(lim = c(-6, 6))))#
AIC(M_i_L_40)# on prend linéaire 
AIC(M_i_L_40_pta2)
AIC(M_i_L_40_pt2)#
AIC(M_i_L_40_pa2)


#Maquereau
plot(predictorEffects(M_i_Ma_40, residuals=TRUE), partial.residuals=list(lty="dashed"), axes = list(y = list(lim = c(-6, 6))))#
plot(predictorEffects(M_i_Ma_40_pa2, residuals=TRUE), partial.residuals=list(lty="dashed"), axes = list(y = list(lim = c(-6, 6))))
AIC(M_i_Ma_40)#
AIC(M_i_Ma_40_pa2)

#Merlan
plot(predictorEffects(M_i_Me_40, residuals=TRUE), partial.residuals=list(lty="dashed"), axes = list(y = list(lim = c(-6, 6))))
plot(predictorEffects(M_i_Me_40_pta32, residuals=TRUE), partial.residuals=list(lty="dashed"), axes = list(y = list(lim = c(-6, 6))))#
plot(predictorEffects(M_i_Me_40_pta2, residuals=TRUE), partial.residuals=list(lty="dashed"), axes = list(y = list(lim = c(-6, 6))))
AIC(M_i_Me_40)
AIC(M_i_Me_40_pta32)# on prend ce modele
AIC(M_i_Me_40_pta2)

#Morue
plot(predictorEffects(M_i_Mo_40, residuals=TRUE), partial.residuals=list(lty="dashed"), axes = list(y = list(lim = c(-6, 6))))
plot(predictorEffects(M_i_Mo_40_pta2, residuals=TRUE), partial.residuals=list(lty="dashed"), axes = list(y = list(lim = c(-6, 6))))#
plot(predictorEffects(M_i_Mo_40_pt2, residuals=TRUE), partial.residuals=list(lty="dashed"), axes = list(y = list(lim = c(-6, 6))))
plot(predictorEffects(M_i_Mo_40_pa2, residuals=TRUE), partial.residuals=list(lty="dashed"), axes = list(y = list(lim = c(-6, 6))))
AIC(M_i_Mo_40)
AIC(M_i_Mo_40_pta2)# on prend celui là
AIC(M_i_Mo_40_pt2)
AIC(M_i_Mo_40_pa2)

#Plie
plot(predictorEffects(M_i_P_40, residuals=TRUE), partial.residuals=list(lty="dashed"), axes = list(y = list(lim = c(-6, 6))))
plot(predictorEffects(M_i_P_40_pta2, residuals=TRUE), partial.residuals=list(lty="dashed"), axes = list(y = list(lim = c(-6, 6))))
plot(predictorEffects(M_i_P_40_pta3, residuals=TRUE), partial.residuals=list(lty="dashed"), axes = list(y = list(lim = c(-6, 6))))
plot(predictorEffects(M_i_P_40_pta23, residuals=TRUE), partial.residuals=list(lty="dashed"), axes = list(y = list(lim = c(-6, 6))))#
plot(predictorEffects(M_i_P_40_pta32, residuals=TRUE), partial.residuals=list(lty="dashed"), axes = list(y = list(lim = c(-6, 6))))
AIC(M_i_P_40)
AIC(M_i_P_40_pta2)
AIC(M_i_P_40_pta3)# on prend celui là
AIC(M_i_P_40_pta23)
AIC(M_i_P_40_pta32)
#Demander 

#hareng
plot(predictorEffects(M_i_S_40, residuals=TRUE), partial.residuals=list(lty="dashed"), axes = list(y = list(lim = c(-6, 6))))
plot(predictorEffects(M_i_S_40_pta2, residuals=TRUE), partial.residuals=list(lty="dashed"), axes = list(y = list(lim = c(-6, 6))))
plot(predictorEffects(M_i_S_40_pt2, residuals=TRUE), partial.residuals=list(lty="dashed"), axes = list(y = list(lim = c(-6, 6))))#
plot(predictorEffects(M_i_S_40_pa2, residuals=TRUE), partial.residuals=list(lty="dashed"), axes = list(y = list(lim = c(-6, 6))))
AIC(M_i_S_40)
AIC(M_i_S_40_pta2)#
AIC(M_i_S_40_pt2)
AIC(M_i_S_40_pa2)


#Tacaud
plot(predictorEffects(M_i_T_40, residuals=TRUE), partial.residuals=list(lty="dashed"), axes = list(y = list(lim = c(-6, 6))))
plot(predictorEffects(M_i_T_40_pta2, residuals=TRUE), partial.residuals=list(lty="dashed"), axes = list(y = list(lim = c(-6, 6))))
plot(predictorEffects(M_i_T_40_pta3, residuals=TRUE), partial.residuals=list(lty="dashed"), axes = list(y = list(lim = c(-6, 6))))
plot(predictorEffects(M_i_T_40_pta32, residuals=TRUE), partial.residuals=list(lty="dashed"), axes = list(y = list(lim = c(-6, 6))))
plot(predictorEffects(M_i_T_40_pta23, residuals=TRUE), partial.residuals=list(lty="dashed"), axes = list(y = list(lim = c(-6, 6))))#
plot(predictorEffects(M_i_T_40_pt3, residuals=TRUE), partial.residuals=list(lty="dashed"), axes = list(y = list(lim = c(-6, 6))))
plot(predictorEffects(M_i_T_40_pt2, residuals=TRUE), partial.residuals=list(lty="dashed"), axes = list(y = list(lim = c(-6, 6))))
AIC(M_i_T_40)
AIC(M_i_T_40_pta2)
AIC(M_i_T_40_pta3)#
AIC(M_i_T_40_pta32)
AIC(M_i_T_40_pta23)#
AIC(M_i_T_40_pt3)
AIC(M_i_T_40_pt2)


#Limande 
plot(predictorEffects(M_i_LS_40, residuals=TRUE), partial.residuals=list(lty="dashed"), axes = list(y = list(lim = c(-6, 6))))
plot(predictorEffects(M_i_LS_40_pta2, residuals=TRUE), partial.residuals=list(lty="dashed"), axes = list(y = list(lim = c(-6, 6))))
plot(predictorEffects(M_i_LS_40_pta3, residuals=TRUE), partial.residuals=list(lty="dashed"), axes = list(y = list(lim = c(-6, 6))))
plot(predictorEffects(M_i_LS_40_pta23, residuals=TRUE), partial.residuals=list(lty="dashed"), axes = list(y = list(lim = c(-6, 6))))
plot(predictorEffects(M_i_LS_40_pta32, residuals=TRUE), partial.residuals=list(lty="dashed"), axes = list(y = list(lim = c(-6, 6))))
plot(predictorEffects(M_i_LS_40_pt2, residuals=TRUE), partial.residuals=list(lty="dashed"), axes = list(y = list(lim = c(-6, 6))))
plot(predictorEffects(M_i_LS_40_pa2, residuals=TRUE), partial.residuals=list(lty="dashed"), axes = list(y = list(lim = c(-6, 6))))
AIC(M_i_LS_40)# prendre ce modèle
AIC(M_i_LS_40_pta2)#
AIC(M_i_LS_40_pta3)
AIC(M_i_LS_40_pta23)
AIC(M_i_LS_40_pta32)
AIC(M_i_LS_40_pt2)
AIC(M_i_LS_40_pa2)


plot(predictorEffects(M_i_Mo_40, residuals=TRUE), partial.residuals=list(lty="dashed"), axes = list(y = list(lim = c(-6, 6))))
plot(predictorEffects(M_i_Mo_40_pta2, residuals=TRUE), partial.residuals=list(lty="dashed"), axes = list(y = list(lim = c(-6, 6))))#

```


**Figure (plot diagnostiques) Hareng**
```{r}
#nouveau tableau
table_H_i2 <- select(table_hareng_i, Cohorte, Area, Species, SR_cohorte, LngtClass, Age, sexe_numerique, fcohorte, Moy_NAO_JFM ,Moy_AMO_d, Moy_AMO_brute, GSNW_moy ,sc_cohorte, sc_LngtClass ,sc_age ,sc_Moy_NAO_JFM ,sc_moy_AMO_d, sc_moy_AMO_brute, sc_moy_GSNW, sexe_num_2)
sapply(table_hareng_i, FUN = summary)


#extraction des résidus
Res_P <- resid(M_i_H_40, type = "pearson")
Res_D <- resid(M_i_H_40, type = "deviance")

#extractions des prédictions (fonction de lien et réponse). Le modèle sort les prédictions dans le même ordre que les valeurs du tableau : d'où l'importance d'ordonner les valeurs du tableau par ordre chronologique et d'enlever les données correspondant aux dates < 1966 et > 2019
Pred_L_M40 <- predict(M_i_H_40, type = "link")
Pred_R_M40 <- predict(M_i_H_40, type = "response")

table_H_i2 <- cbind(table_H_i2, Pred_L_M40) # on join les prédictions du modèle au tableau
table_H_i2 <- cbind(table_H_i2, Pred_R_M40)
table_H_i2 <- cbind(table_H_i2, Res_D)


#Résidus VS prediction
plot(M_i_H_40, resid(., type = "deviance") ~ predict(., type = "response"), type=c("p","smooth"), col.line=1, col = 7, main = "deviance residuelle") 
plot(M_i_H_40, resid(., type = "deviance") ~ predict(., type = "link"), type=c("p","smooth"), col.line=1, col = 7, main = "deviance residuelle") 

#Résidus VS Variables explicatives
#ggplot(data = table_H_i2[-which(table_H_i2$Cohorte < 1966),], aes(x = Cohorte, y = Res_D)) +
 # geom_point(alpha = 0.1, colour = "#660033") +
 # geom_smooth(method = "gam", color = "#66CC99") +
 # ylim(-1.5,1.55) +
 # theme_light() +
#  labs(x = "Cohortes", y = "Résidus de déviance", title = "Distribution des résidus de type déviance du modèle 40 en fonction du \ntemps chez le hareng", subtitle = "sans sélection de cohortes a priori")


#ggplot(data = table_H_i2[-which(table_H_i2$Cohorte < 1966),], aes(x = LngtClass, y = Res_D)) +
#  geom_point(alpha = 0.1, colour = "#660033") +
#  geom_smooth(method = "gam", color = "#66CC99") +
#  ylim(-1.5,1.55) +
#  theme_light() +
#  labs(x = "Taille", y = "Résidus de déviance", title = "Distribution des résidus de type déviance du modèle 40 en fonction de \nla taille des individus chez le hareng", subtitle = "sans sélection de cohortes a priori")


#ggplot(data = table_H_i2[-which(table_H_i2$Cohorte < 1966),], aes(x = Age, y = Res_D)) +
#  geom_point(alpha = 0.1, colour = "#660033") +
#  geom_smooth(method = "gam", color = "#66CC99") +
#  ylim(-1.5,1.55) +
#  theme_light() +
#  labs(x = "Age", y = "Résidus de déviance", title = "Distribution des résidus de type déviance du modèle 40 en fonction de \nl'age des individus chez le hareng", subtitle = "sans sélection de cohortes a priori")

#ggplot(data = table_H_i2[-which(table_H_i2$Cohorte < 1966),], aes(x = Moy_NAO_JFM, y = Res_D)) +
#  geom_point(alpha = 0.1, colour = "#660033") +
#  geom_smooth(method = "gam", color = "#66CC99") +
#  ylim(-1.5,1.55) +
#  theme_light() +
#  labs(x = "NAO", y = "Résidus de déviance", title = "Distribution des résidus de type déviance du modèle 40 en fonction de \nla moyenne mensuelle de la NAO sur les mois de janvier, février, mars\nchez le hareng", subtitle = "sans sélection de cohortes a priori")


#ggplot(data = table_H_i2[-which(table_H_i2$Cohorte < 1966),], aes(x = Moy_AMO_d, y = Res_D)) +
#  geom_point(alpha = 0.1, colour = "#660033") +
#  geom_smooth(method = "gam", color = "#66CC99") +
#  ylim(-1.5,1.55) +
#  theme_light() +
#  labs(x = "AMO", y = "Résidus de déviance", title = "Distribution des résidus de type déviance du modèle 40 en fonction de \nla moyenne annuelle de l'AMO chez le hareng", subtitle = "sans sélection de cohortes a priori")

#ggplot(data = table_H_i2[-which(table_H_i2$Cohorte < 1966),], aes(x = GSNW_moy, y = Res_D)) +
#  geom_point(alpha = 0.1, colour = "#660033") +
#  geom_smooth(method = "gam", color = "#66CC99") +
#  ylim(-1.5,1.55) +
#  theme_light() +
#  labs(x = "GSNW", y = "Résidus de déviance", title = "Distribution des résidus de type déviance du modèle 40 en fonction de \nla moyenne annuelle du GSNW chez le hareng", subtitle = "sans sélection de cohortes a priori")

#Reproduction du sexe ratio observé
effectif <- rep(1, nrow(table_H_i2))
table_H_i2 <- cbind(table_H_i2, effectif)
table_H_i2 <- table_H_i2 %>% relocate(effectif, .before = sexe_numerique)
summary(table_H_i2)

SR_obs_H <- aggregate(effectif ~  Species + Cohorte + sexe_num_2, data = table_H_i2, FUN = sum)# sommes des mâle et des femelles par cohorte et par espèce
SR_obs_H <- SR_obs_H[order(SR_obs_H$Cohorte),]
SR_obs_H <- pivot_wider(SR_obs_H, names_from = sexe_num_2, values_from = effectif)
names(SR_obs_H)[names(SR_obs_H) == "0"] <- "Femelles"
names(SR_obs_H)[names(SR_obs_H) == "1"] <- "Males"

sum(is.na(SR_obs_H$Males))
sum(is.na(SR_obs_H$Femelles))
SR_obs_H <- mutate(SR_obs_H, SR_obs = Males/(Femelles + Males)) #calcul du sexe ratio

#Sexe ratio prédit 
SR_pred_H <- aggregate(Pred_R_M40 ~  Species + Cohorte, data = table_H_i2, FUN = mean) # moyenne de probabilité de devenir mâle ou femelle par espèce et par cohorte
SR_obs_pred_H <- left_join(SR_obs_H, SR_pred_H, by = c("Species", "Cohorte")) # on join ce nouveau tableau avec le tableau contenant déjà les données de SR observé par espèce et par cohorte
remove(SR_pred_H, SR_obs_H)

ggplot(SR_obs_pred_H, aes(x = Cohorte)) +
  geom_point(aes(y = SR_obs), color = "#FFCC33", alpha = 0.5) + #Jaune
  geom_line(aes(y = SR_obs),  color = "#CC9900") +
  geom_point(aes(y = Pred_R_M40), color = "#339966", alpha = 0.5, shape = 5) + #vert
  geom_line(aes(y = Pred_R_M40), color = "#009966") +
  theme_light() +
  labs(y = "sexe ratio", x = "Cohorte") 
#Et là on  se rend compte qu'on a quelque chose qui ressemble à de l'over fitting

ggplot(SR_obs_pred_H, aes (x = SR_obs, y = Pred_R_M40)) +
  geom_point() +
  theme_light()

##################
#on créer un sous ensemble de jeux de donnée avec les variables explicatives du modèles : deux fixées à leurs moyennes et l'autre qui varie et on fait les prédctions pour ces variables 

tableau_H_i3 <- select(table_H_i2, Cohorte, Area, Species, SR_cohorte, LngtClass, Age, sexe_numerique, fcohorte, Moy_NAO_JFM ,Moy_AMO_d, Moy_AMO_brute, GSNW_moy ,sc_cohorte, sc_LngtClass ,sc_age ,sc_Moy_NAO_JFM, sc_moy_AMO_d, sc_moy_AMO_brute, sc_moy_GSNW)

#on veut les contributions des variables explicatives du modèle aux prédictions
#Taille
tableau_H_i3$sc_cohorte <- mean(tableau_H_i3$sc_cohorte)
tableau_H_i3$sc_age <- mean(tableau_H_i3$sc_age, na.rm = TRUE)
predict_T <- predict(M_i_H_40, newdata = tableau_H_i3, type = "response") #prediction du modèle mais avec les valeurs du tableau dans lequel les autre variables explicatives sont fixées à leur moyenne
table_H_i2 <- cbind(table_H_i2 ,predict_T)

SR_pred_t_H <-aggregate(predict_T ~ Species + Cohorte, table_H_i2, FUN = mean)
SR_obs_pred_H <- left_join(SR_obs_pred_H, SR_pred_t_H, by = c("Species", "Cohorte"))
remove(SR_pred_t_H)

#Age
tableau_H_i3 <- select(table_H_i2, Cohorte, Area, Species, SR_cohorte, LngtClass, Age, sexe_numerique, fcohorte, Moy_NAO_JFM ,Moy_AMO_d, Moy_AMO_brute, GSNW_moy ,sc_cohorte, sc_LngtClass ,sc_age ,sc_Moy_NAO_JFM, sc_moy_AMO_d, sc_moy_AMO_brute, sc_moy_GSNW)

tableau_H_i3$sc_cohorte <- mean(tableau_H_i3$sc_cohorte)
tableau_H_i3$sc_LngtClass <- mean(tableau_H_i3$sc_LngtClass, na.rm = TRUE)
predict_A <- predict(M_i_H_40, newdata = tableau_H_i3, type = "response")
table_H_i2 <- cbind(table_H_i2 ,predict_A)

SR_pred_a_H <-aggregate(predict_A ~ Species + Cohorte, data = table_H_i2, FUN = mean)
SR_obs_pred_H <- left_join(SR_obs_pred_H, SR_pred_a_H, by = c("Species", "Cohorte"))
remove(SR_pred_a_H)

#Cohorte
tableau_H_i3 <- select(table_H_i2, Cohorte, Area, Species, SR_cohorte, LngtClass, Age, sexe_numerique, fcohorte, Moy_NAO_JFM ,Moy_AMO_d, Moy_AMO_brute, GSNW_moy ,sc_cohorte, sc_LngtClass ,sc_age ,sc_Moy_NAO_JFM, sc_moy_AMO_d, sc_moy_AMO_brute, sc_moy_GSNW)

tableau_H_i3$sc_age <- mean(tableau_H_i3$sc_age)
tableau_H_i3$sc_LngtClass <- mean(tableau_H_i3$sc_LngtClass, na.rm = TRUE)
predict_C <- predict(M_i_H_40, newdata = tableau_H_i3, type = "response")
table_H_i2 <- cbind(table_H_i2 ,predict_C)

SR_pred_c_H <-aggregate(predict_C ~ Species + Cohorte, data = table_H_i2, FUN = mean)
SR_obs_pred_H <- left_join(SR_obs_pred_H, SR_pred_c_H, by = c("Species", "Cohorte"))
remove(SR_pred_c_H)


ggplot(SR_obs_pred_H, aes(x = Cohorte)) +
  geom_point(aes(y = SR_obs, colour = "SR_obs"), alpha = 0.5) +
  geom_line(aes(y = SR_obs, colour = "SR_obs"), size = 1) +
  geom_point(aes(y = Pred_R_M40, colour = "Pred_R"), alpha = 0.5, shape = 5) + 
  geom_line(aes(y = Pred_R_M40, colour = "Pred_R"), size = 1) +
  geom_point(aes(y = predict_T, colour = "Pred_T"), alpha = 0.5, shape = 5) + 
  geom_line(aes(y = predict_T, colour = "Pred_T"), linetype = "dashed", size = 0.8) +
  geom_point(aes(y = predict_A, colour = "Pred_A"), alpha = 0.5, shape = 5) + 
  geom_line(aes(y = predict_A, colour = "Pred_A"), linetype = "dashed", size = 0.8) +
  geom_point(aes(y = predict_C, colour = "Pred_C"), alpha = 0.5, shape = 5) + 
  geom_line(aes(y = predict_C, colour = "Pred_C"), linetype = "dashed", size = 0.8) +
  scale_color_manual(values = wes_palette("Darjeeling2", n = 5)) +
  theme_dark() +
  labs(y = "sexe ratio", x = "Cohorte")

names(wes_palettes)

#en fait on a une distorsion du sexe ratio predit quand on utilise les prédictions du modèle en utilisant  les descripteurs biologique  fixés à une valeur moyenne, car on ecrase la variabilité intra cohorte et inter-annuelle de l'âge et de la taille
```

#fonctions
Ensuite de cela, j'en ai fait des fonctions
```{r}
#Creation d'un sous ensemble de jeu de donnée
F_tableau_i2 <- function(tableau) {
  tableau_sp_i2 <- select(tableau, Cohorte, Area, Species, SR_cohorte, LngtClass, Age, sexe_numerique, fcohorte, Moy_NAO_JFM ,Moy_AMO_d, Moy_AMO_brute, GSNW_moy ,sc_cohorte, sc_LngtClass ,sc_age ,sc_Moy_NAO_JFM, sc_moy_AMO_d, sc_moy_AMO_brute, sc_moy_GSNW, sexe_num_2)
  return(tableau_sp_i2)
}

#extraction des résidus et predictions
F_resid_pred <- function(tableau, modele) {
  Res_P <- resid(modele, type = "pearson")#résidus de pearson
  Res_D <- resid(modele, type = "deviance")#résidus de déviance
  Pred_L <- predict(modele, type = "link")
  Pred_R <- predict(modele, type = "response")
  tableau <- cbind(tableau, Pred_L)
  tableau <- cbind(tableau, Pred_R)
  tableau <- cbind(tableau, Res_D)
  return(tableau)
}

#fonction plot diagnistique
F_plot_resid_pred <- function(modele){
  Rd_vs_Pres <- plot(modele, resid(., type = "deviance") ~ predict(., type = "response"), type = c("p","smooth"), col.line = 1, col = 7, main = "résidus de déviance en fonction des prédictions de type réponse")
  Rd_vs_Plink <- plot(modele, resid(., type = "deviance") ~ predict(., type = "link"), type = c("p", "smooth"), col.line = 1, col = 7, main = "résidus logit en fonction des prédictions de type réponse")
  return(list("Residus_d_vs_predictions_reponse" = Rd_vs_Pres, "Residus_d_vs_predictions_lien" = Rd_vs_Plink))
}

#fonction permettant de calculer le SR observé et le SR prédit du modèle
F_SR_obs_pred <- function(tableau){
  #Reproduction du sexe ratio observé
  effectif <- rep(1, nrow(tableau))
  tableau <- cbind(tableau, effectif)
  tableau <- tableau %>% relocate(effectif, .before = sexe_numerique)
  SR_obs_sp <- aggregate(effectif ~  Species + Cohorte + sexe_num_2, data = tableau, FUN = sum)
  SR_obs_sp <- SR_obs_sp[order(SR_obs_sp$Cohorte),]
  SR_obs_sp <- pivot_wider(SR_obs_sp, names_from = sexe_num_2, values_from = effectif)
  names(SR_obs_sp)[names(SR_obs_sp) == "0"] <- "Femelles"
  names(SR_obs_sp)[names(SR_obs_sp) == "1"] <- "Males"
  SR_obs_sp <- mutate(SR_obs_sp, SR_obs = Males/(Femelles + Males))
  #prediction SR modele
  SR_pred_sp <- aggregate(Pred_R ~  Species + Cohorte, data = tableau, FUN = mean)
  SR_obs_pred_sp <- left_join(SR_obs_sp, SR_pred_sp, by = c("Species", "Cohorte"))
  
  return(SR_obs_pred_sp)
}

#fonction SR prédit par le modèle selon une seule variable (permet de capturer l'effet des variables une à une)
F_SR_pred_VE <- function(tableau1, tableau2, modele, SR_obs_pred_sp, VE1, VE2, nom){
  tableau2[, VE1] <- mean(tableau2[, VE1])
  tableau2[, VE2] <- mean(tableau2[,VE2])
  predict_VE <- predict(modele, newdata = tableau2, type = "response")
  tableau1 <- cbind(tableau1, predict_VE)
  SR_pred_VE_sp <- aggregate(predict_VE ~  Species + Cohorte, data = tableau1, FUN = mean)
  SR_obs_pred_sp <- left_join(SR_obs_pred_sp, SR_pred_VE_sp, by = c("Species", "Cohorte"))
  names(SR_obs_pred_sp)[names(SR_obs_pred_sp) == "predict_VE"] <- nom
  return(SR_obs_pred_sp)
}

#fonction figure
names(wes_palettes)
F_plot_obs_pred <- function(tableau){
  SRpobs_vs_cohorte <- ggplot(tableau, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "SR_obs"), alpha = 0.5) + #Jaune color = "#FFCC33"
    geom_line(aes(y = SR_obs, colour = "SR_obs"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Pred_R"), alpha = 0.5, shape = 5) + #vert color = "#339966"
    geom_line(aes(y = Pred_R, colour = "Pred_R"), size = 1) +
    geom_point(aes(y = Pred_T, colour = "Pred_T"), alpha = 0.5, shape = 5) + #orange : pred T
    geom_line(aes(y = Pred_T, colour = "Pred_T"), linetype = "dashed", size = 0.7) +
    geom_point(aes(y = Pred_A, colour = "Pred_A"), alpha = 0.5, shape = 5) + #bleu : pred a 
    geom_line(aes(y = Pred_A, colour = "Pred_A"), linetype = "dashed", size = 0.7) +
    geom_point(aes(y = Pred_C, colour = "Pred_C"), alpha = 0.5, shape = 5) + #violet : pred C
    geom_line(aes(y = Pred_C, colour = "Pred_C"), linetype = "dashed", size = 0.7) +
    scale_color_brewer(palette="Set1", name="sexe ratio", ) +
    theme_light() +
    labs(y = "sexe ratio", x = "Cohorte")
  
  SRobs_vs_SRpred <-ggplot(tableau, aes (x = SR_obs, y = Pred_R)) +
    geom_point() +
    geom_abline(intercept = 0, slope = 1, colour = "#666666", linetype = "dashed") +
    xlim(0.25,0.75) +
    ylim(0.25,0.75) +
    theme_light()
  return(list("SR predit et obs vs cohorte" = SRpobs_vs_cohorte, "SR predit vs SR obs"= SRobs_vs_SRpred))
}

#fonction qui permet d'avoir les prédictions du modèle selon la variabilité d'une seule variable à la fois
F_modele_C1 <- function(table_sp_i, modele){
  table_sp_i2 <- F_tableau_i2(tableau = table_sp_i)
  table_sp_i2 <- F_resid_pred(tableau =table_sp_i2, modele = modele)
  SR_obs_pred_sp <-F_SR_obs_pred(tableau = table_sp_i2)
  table_sp_i3 <- F_tableau_i2(tableau = table_sp_i)
  SR_obs_pred_sp <- F_SR_pred_VE(tableau1 = table_sp_i2, tableau2 = table_sp_i3, modele = modele, SR_obs_pred_sp = SR_obs_pred_sp, VE1 = "sc_age", VE2 = "sc_cohorte", nom = "Pred_T")
  SR_obs_pred_sp <- F_SR_pred_VE(tableau1 = table_sp_i2, tableau2 = table_sp_i3, modele = modele, SR_obs_pred_sp = SR_obs_pred_sp, VE1 = "sc_LngtClass", VE2 = "sc_cohorte", nom = "Pred_A")
  SR_obs_pred_sp <- F_SR_pred_VE(tableau1 = table_sp_i2, tableau2 = table_sp_i3, modele = modele, SR_obs_pred_sp = SR_obs_pred_sp, VE1 = "sc_age", VE2 = "sc_LngtClass", nom = "Pred_C")
  return(SR_obs_pred_sp)
}

```

```{r}
#table_H_i2 <- F_tableau_i2(tableau = table_hareng_i)
#table_H_i2 <- F_resid_pred(tableau = table_H_i2, modele = M_i_H_40)
#SR_obs_pred_H <- F_SR_obs_pred(tableau = table_H_i2)
#table_H_i3 <- F_tableau_i2(tableau = table_hareng_i)
#SR_obs_pred_H <- F_SR_pred_VE(tableau1 = table_H_i2, tableau2 = table_H_i3, modele = M_i_H_40, SR_obs_pred_sp = SR_obs_pred_H, VE1 = "sc_age", VE2 = "sc_cohorte", nom = "Pred_T")
#SR_obs_pred_H <- F_SR_pred_VE(tableau1 = table_H_i2, tableau2 = table_H_i3, modele = M_i_H_40, SR_obs_pred_sp = SR_obs_pred_H, VE1 = "sc_LngtClass", VE2 = "sc_cohorte", nom = "Pred_A")
#SR_obs_pred_H <- F_SR_pred_VE(tableau1 = table_H_i2, tableau2 = table_H_i3, modele = M_i_H_40, SR_obs_pred_sp = SR_obs_pred_H, VE1 = "sc_age", VE2 = "sc_LngtClass", nom = "Pred_C")

SR_obs_pred_H <- F_modele_C1(table_sp_i = table_hareng_i, modele = M_i_H_40)
F_plot_resid_pred(modele = M_i_H_40)
F_plot_obs_pred(tableau = SR_obs_pred_H)#$`SR predit et obs vs cohorte`
```


```{r}
SR_obs_pred_A <- F_modele_C1(table_sp_i = table_aiglefin_i, modele = M_i_A_40_pt3)
F_plot_resid_pred(modele = M_i_A_40_pt3)
F_plot_obs_pred(tableau = SR_obs_pred_A)#$`SR predit et obs vs cohorte`
```

```{r}
SR_obs_pred_L <- F_modele_C1(table_sp_i = table_lieu_i, modele = M_i_L_40)
F_plot_resid_pred(modele = M_i_L_40_pt2)
F_plot_obs_pred(tableau = SR_obs_pred_L)$`SR predit et obs vs cohorte`
```

```{r}
SR_obs_pred_Ma <- F_modele_C1(table_sp_i = table_maquereau_i, modele = M_i_Ma_40)
F_plot_resid_pred(modele = M_i_Ma_40)
F_plot_obs_pred(tableau = SR_obs_pred_Ma)#$`SR predit et obs vs cohorte`
```

```{r}

SR_obs_pred_Me <- F_modele_C1(table_sp_i = table_merlan_i, modele = M_i_Me_40)
F_plot_resid_pred(modele = M_i_Me_40_pta32)
F_plot_obs_pred(tableau = SR_obs_pred_Me)#$`SR predit et obs vs cohorte`
```

```{r}
SR_obs_pred_Mo <- F_modele_C1(table_sp_i = table_morue_i, modele = M_i_Mo_40)
F_plot_resid_pred(modele = M_i_Mo_40_pta2)
F_plot_obs_pred(tableau = SR_obs_pred_Mo)#$`SR predit et obs vs cohorte`
```

```{r}

SR_obs_pred_P <- F_modele_C1(table_sp_i = table_plie_i, modele = M_i_P_40)
F_plot_resid_pred(modele = M_i_P_40_pta3)
F_plot_obs_pred(tableau = SR_obs_pred_P)#$`SR predit et obs vs cohorte`
```

```{r}
SR_obs_pred_S <- F_modele_C1(table_sp_i = table_sprat_i, modele = M_i_S_40)
F_plot_resid_pred(modele = M_i_S_40_pta2)
F_plot_obs_pred(tableau = SR_obs_pred_S)#$`SR predit et obs vs cohorte`
```

```{r}
SR_obs_pred_T <- F_modele_C1(table_sp_i = table_tacaud_i, modele = M_i_T_40)
F_plot_resid_pred(modele = M_i_T_40_pta23)
F_plot_obs_pred(tableau = SR_obs_pred_T)#$`SR predit et obs vs cohorte`
```

```{r}

SR_obs_pred_LS <- F_modele_C1(table_sp_i = table_limande_sole_i, modele = M_i_LS_40_pta2)
F_plot_resid_pred(modele = M_i_LS_40_pta2)
F_plot_obs_pred(tableau = SR_obs_pred_LS)#$`SR predit et obs vs cohorte`
```


# Nouvelles fonctions
```{r}
i.logit <- function(x){
  exp(x)/(1+exp(x))
}

#pour avoir les predictions de la cohorte
F_effet_cohorte <- function(tableau, tableau2, modele){
  Moy_SR <- mean(tableau[, "sexe_num_2"]) #SR moyen de l'espèce
  df.cohorte <- data.frame(sc_cohorte = unique(tableau[, "sc_cohorte"])[order(unique(tableau[, "sc_cohorte"]))], Cohorte = unique(tableau[,"Cohorte"])[order(unique(tableau[,"sc_cohorte"]))])
  beta_cohorte <- fixef(modele)[which(names(fixef(modele)) == "sc_cohorte")] #pente de l'effet de la cohorte
  df.cohorte$pred_link <- logit(Moy_SR) + beta_cohorte*df.cohorte[,"sc_cohorte"] #contribution de la variable explicative 
  df.cohorte$pred_reponse <- i.logit(df.cohorte[,"pred_link"]) # de type réponse
  tableau2 <- left_join(tableau2, df.cohorte, by = "Cohorte")
  names(tableau2)[names(tableau2) == "pred_reponse"] <- "pred_C_reponse"
  return(tableau2)
}

#la fonction en dessous aggrège les autres fonctions ecrites
F_resume_M_C <- function(table_sp_i, modele){
  table_sp_i2 <- F_tableau_i2(tableau = table_sp_i)
  table_sp_i2 <- F_resid_pred(tableau = table_sp_i2, modele = modele) #extraction des résidus et des prédictions
  SR_obs_pred_sp <- F_SR_obs_pred(tableau = table_sp_i2)#extraction des SR observés et prédits
  SR_obs_pred_sp <- F_effet_cohorte(tableau = table_sp_i, tableau2 = SR_obs_pred_sp, modele = modele) # effet de la cohorte
  return(SR_obs_pred_sp)
}
##################

#fonction pour avoir la contribution de l'effet aléatoire de la cohorte 
F_pred_fcohorte <- function(tableau, modele, d){
  table_sp_i2 <- F_tableau_i2(tableau = tableau)
  table_sp_i2 <- F_resid_pred(tableau = table_sp_i2, modele = modele)
  SR_obs_pred_sp <- F_SR_obs_pred(tableau = table_sp_i2)
  table_sp_i3 <- F_tableau_i2(tableau = tableau)
  table_sp_i3[, "fcohorte"] <- d #on met une date que l'on a choisit au préalable
  pred_fcohorte <- predict(modele, newdata = table_sp_i3, type = "response") #extraction des prédictions
  table_sp_i2 <- cbind(table_sp_i2, pred_fcohorte)
  SR_pred_VE_sp <- aggregate(pred_fcohorte ~ Species + Cohorte, data = table_sp_i2, FUN = mean) #moyenne par cohorte
  SR_obs_pred_sp <- left_join(SR_obs_pred_sp, SR_pred_VE_sp, by = c("Species", "Cohorte"))
  return(SR_obs_pred_sp)
  
}

```

*Tacaud*
```{r}
#table_T_i2 <- F_tableau_i2(tableau = table_tacaud_i)
#table_T_i2 <- F_resid_pred(tableau = table_T_i2, modele = M_i_T_40_pta23)
#SR_obs_pred_T <- F_SR_obs_pred(tableau = table_T_i2)
#SR_obs_pred_T <- F_effet_cohorte(tableau = table_tacaud_i, tableau2 = SR_obs_pred_T ,modele = M_i_T_40_pta23)

#M_i_T_40_pta23_2 <- glmer(sexe_numerique ~ sc_cohorte + poly(sc_LngtClass, degree = 2) + poly(sc_age, degree  = 3) +  (1| Area) + (1| fcohorte), data =  table_tacaud_i2, family = binomial(link=logit))

#M_i_T_40_5 <- glm(sexe_numerique ~ sc_cohorte + poly(sc_LngtClass, degree = 2, raw = TRUE) + poly(sc_age, degree  = 3, raw = TRUE) , data =  table_tacaud_i2, family = binomial(link=logit))

#M_i_T_40_5 <- glm(sexe_numerique ~ sc_cohorte + scale(poly(LngtClass, degree = 2, raw = TRUE)) + scale(poly(Age, degree  = 3, raw = TRUE)) , data =  table_tacaud_i2, family = binomial(link=logit))

#i.logit(fixef(M_i_T_40_pta23_2)[[1]] + M_area + M_fcohorte)
#mean(table_tacaud_i2$sexe_num_2)
#i.logit(fixef(M_i_T_40_pta23)[[1]])
#i.logit(fixef(M_i_T_40_2)[[1]])
#i.logit(fixef(M_i_T_40)[[1]])
#i.logit(M_i_T_40_3[["coefficients"]][["(Intercept)"]])
#i.logit(M_i_T_40_4[["coefficients"]][["(Intercept)"]])
#i.logit(M_i_T_40_5[["coefficients"]][["(Intercept)"]])
#i.logit(M_i_T_40_5[["coefficients"]][["(Intercept)"]])
#ranef(M_i_T_40_pta23_2)
#M_area<- mean(ranef(M_i_T_40_pta23_2)$Area$"(Intercept)")
#M_fcohorte <- mean(ranef(M_i_T_40_pta23_2)$fcohorte$"(Intercept)")

SR_obs_pred_T <- F_resume_M_C(table_sp_i = table_tacaud_i, modele = M_i_T_40_pta23)


ggplot(SR_obs_pred_T, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "SR_obs"), alpha = 0.5) + 
    geom_line(aes(y = SR_obs, colour = "SR_obs"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Pred_R"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Pred_R"), size = 1) +
    geom_point(aes(y = pred_C_reponse, colour = "Pred_C"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = pred_C_reponse, colour = "Pred_C"), linetype = "dashed", size = 0.7) +
    scale_color_manual(values = wes_palette("Darjeeling1", n = 3)) +
    theme_light() +
    labs(y = "sexe ratio", x = "Cohorte")

ggplot(SR_obs_pred_T, aes (x = SR_obs, y = Pred_R)) +
    geom_point() +
    geom_abline(intercept = 0, slope = 1, colour = "#666666", linetype = "dashed") +
    xlim(0.25,0.75) +
    ylim(0.25,0.75) +
    theme_light()

##############################

SR_obs_pred_T <- F_pred_fcohorte(tableau = table_tacaud_i, modele = M_i_T_40, d = 1993)
ggplot(SR_obs_pred_T, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "SR_obs"), alpha = 0.5) + 
    geom_line(aes(y = SR_obs, colour = "SR_obs"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Pred_R"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Pred_R"), size = 1) +
    geom_point(aes(y = pred, colour = "pred_fcohorte"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = pred, colour = "pred_fcohorte"), size = 0.7) +
    scale_color_manual(values = wes_palette("Darjeeling1", n = 3)) +
    theme_light() +
    labs(y = "sexe ratio", x = "Cohorte")


```

*Limande sole*
```{r}

SR_obs_pred_LS <- F_resume_M_C(table_sp_i = table_limande_sole_i, modele = M_i_LS_40_pta2)

ggplot(SR_obs_pred_LS, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "SR_obs"), alpha = 0.5) + 
    geom_line(aes(y = SR_obs, colour = "SR_obs"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Pred_R"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Pred_R"), size = 1) +
    geom_point(aes(y = pred_C_reponse, colour = "Pred_C"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = pred_C_reponse, colour = "Pred_C"), linetype = "dashed", size = 0.7) +
    scale_color_manual(values = wes_palette("Darjeeling1", n = 3)) +
    theme_light() +
    labs(y = "sexe ratio", x = "Cohorte")

ggplot(SR_obs_pred_LS, aes (x = SR_obs, y = Pred_R)) +
    geom_point() +
    geom_abline(intercept = 0, slope = 1, colour = "#666666", linetype = "dashed") +
    xlim(0.25,0.75) +
    ylim(0.25,0.75) +
    theme_light()

##############################
SR_obs_pred_LS <- F_pred_fcohorte(tableau = table_limande_sole_i, modele = M_i_LS_40, d = 2009)
ggplot(SR_obs_pred_LS, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "SR_obs"), alpha = 0.5) + 
    geom_line(aes(y = SR_obs, colour = "SR_obs"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Pred_R"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Pred_R"), size = 1) +
    geom_point(aes(y = pred, colour = "pred_fcohorte"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = pred, colour = "pred_fcohorte"), size = 0.7) +
    scale_color_manual(values = wes_palette("Darjeeling1", n = 3)) +
    theme_light() +
    labs(y = "sexe ratio", x = "Cohorte")
```

*Sprat*
```{r}

SR_obs_pred_S <- F_resume_M_C(table_sp_i = table_sprat_i, modele = M_i_S_40_pt2)
ggplot(SR_obs_pred_S, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "SR_obs"), alpha = 0.5) + 
    geom_line(aes(y = SR_obs, colour = "SR_obs"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Pred_R"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Pred_R"), size = 1) +
    geom_point(aes(y = pred_C_reponse, colour = "Pred_C"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = pred_C_reponse, colour = "Pred_C"), linetype = "dashed", size = 0.7) +
    scale_color_manual(values = wes_palette("Darjeeling1", n = 3)) +
    theme_light() +
    labs(y = "sexe ratio", x = "Cohorte")

ggplot(SR_obs_pred_S, aes (x = SR_obs, y = Pred_R)) +
    geom_point() +
    geom_abline(intercept = 0, slope = 1, colour = "#666666", linetype = "dashed") +
    xlim(0.25,0.75) +
    ylim(0.25,0.75) +
    theme_light()

##############################
SR_obs_pred_S <- F_pred_fcohorte(tableau = table_sprat_i, modele = M_i_S_40_pt2, d = 2004)
ggplot(SR_obs_pred_S, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "SR_obs"), alpha = 0.5) + 
    geom_line(aes(y = SR_obs, colour = "SR_obs"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Pred_R"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Pred_R"), size = 1) +
    geom_point(aes(y = pred, colour = "pred_fcohorte"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = pred, colour = "pred_fcohorte"), size = 0.7) +
    scale_color_manual(values = wes_palette("Darjeeling1", n = 3)) +
    theme_light() +
    labs(y = "sexe ratio", x = "Cohorte")
```


*Plie*
```{r}
SR_obs_pred_P <- F_resume_M_C(table_sp_i = table_plie_i, modele = M_i_P_40_pta3)

ggplot(SR_obs_pred_P, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "SR_obs"), alpha = 0.5) + 
    geom_line(aes(y = SR_obs, colour = "SR_obs"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Pred_R"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Pred_R"), size = 1) +
    geom_point(aes(y = pred_C_reponse, colour = "Pred_C"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = pred_C_reponse, colour = "Pred_C"), linetype = "dashed", size = 0.7) +
    scale_color_manual(values = wes_palette("Darjeeling1", n = 3)) +
    theme_light() +
    labs(y = "sexe ratio", x = "Cohorte")

ggplot(SR_obs_pred_P, aes (x = SR_obs, y = Pred_R)) +
    geom_point() +
    geom_abline(intercept = 0, slope = 1, colour = "#666666", linetype = "dashed") +
    xlim(0.25,0.75) +
    ylim(0.25,0.75) +
    theme_light()

##############################
SR_obs_pred_P <- F_pred_fcohorte(tableau = table_plie_i, modele = M_i_P_40_pta3, d = 2002)
ggplot(SR_obs_pred_P, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "SR_obs"), alpha = 0.5) + 
    geom_line(aes(y = SR_obs, colour = "SR_obs"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Pred_R"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Pred_R"), size = 1) +
    geom_point(aes(y = pred, colour = "pred_fcohorte"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = pred, colour = "pred_fcohorte"), size = 0.7) +
    scale_color_manual(values = wes_palette("Darjeeling1", n = 3)) +
    theme_light() +
    labs(y = "sexe ratio", x = "Cohorte")
```

*Morue*
```{r}

SR_obs_pred_Mo <- F_resume_M_C(table_sp_i = table_morue_i, modele = M_i_Mo_40_pta2)
ggplot(SR_obs_pred_Mo, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "SR_obs"), alpha = 0.5) + 
    geom_line(aes(y = SR_obs, colour = "SR_obs"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Pred_R"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Pred_R"), size = 1) +
    geom_point(aes(y = pred_C_reponse, colour = "Pred_C"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = pred_C_reponse, colour = "Pred_C"), linetype = "dashed", size = 0.7) +
    scale_color_manual(values = wes_palette("Darjeeling1", n = 3)) +
    theme_light() +
    labs(y = "sexe ratio", x = "Cohorte")

ggplot(SR_obs_pred_Mo, aes (x = SR_obs, y = Pred_R)) +
    geom_point() +
    geom_abline(intercept = 0, slope = 1, colour = "#666666", linetype = "dashed") +
    xlim(0.4,0.55) +
    ylim(0.4,0.55) +
    theme_light()

##############################
SR_obs_pred_Mo <- F_pred_fcohorte(tableau = table_morue_i, modele = M_i_Mo_40_pta2, d = 1995)
ggplot(SR_obs_pred_Mo, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "SR_obs"), alpha = 0.5) + 
    geom_line(aes(y = SR_obs, colour = "SR_obs"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Pred_R"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Pred_R"), size = 1) +
    geom_point(aes(y = pred, colour = "pred_fcohorte"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = pred, colour = "pred_fcohorte"), size = 0.7) +
    scale_color_manual(values = wes_palette("Darjeeling1", n = 3)) +
    theme_light() +
    labs(y = "sexe ratio", x = "Cohorte")
```

*Merlan*
```{r}

SR_obs_pred_Me <- F_resume_M_C(table_sp_i = table_merlan_i, modele = M_i_Me_40_pta32)
ggplot(SR_obs_pred_Me, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "SR_obs"), alpha = 0.5) + 
    geom_line(aes(y = SR_obs, colour = "SR_obs"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Pred_R"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Pred_R"), size = 1) +
    geom_point(aes(y = pred_C_reponse, colour = "Pred_C"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = pred_C_reponse, colour = "Pred_C"), linetype = "dashed", size = 0.7) +
    scale_color_manual(values = wes_palette("Darjeeling1", n = 3)) +
    theme_light() +
    labs(y = "sexe ratio", x = "Cohorte")

ggplot(SR_obs_pred_Me, aes (x = SR_obs, y = Pred_R)) +
    geom_point() +
    geom_abline(intercept = 0, slope = 1, colour = "#666666", linetype = "dashed") +
    xlim(0.4,0.55) +
    ylim(0.4,0.55) +
    theme_light()


##############################
SR_obs_pred_Me <- F_pred_fcohorte(tableau = table_merlan_i, modele = M_i_Me_40_pta32, d = 1994)
ggplot(SR_obs_pred_Me, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "SR_obs"), alpha = 0.5) + 
    geom_line(aes(y = SR_obs, colour = "SR_obs"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Pred_R"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Pred_R"), size = 1) +
    geom_point(aes(y = pred, colour = "pred_fcohorte"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = pred, colour = "pred_fcohorte"), size = 0.7) +
    scale_color_manual(values = wes_palette("Darjeeling1", n = 3)) +
    theme_light() +
    labs(y = "sexe ratio", x = "Cohorte")

#essayer si le temps de mettre l'effet fixe de la cohorte à 0 pour juste capturer l'effet des variations inter annuelles des variables individuelles (taille et âge)
```

*Maquereau*
```{r}
SR_obs_pred_Ma <- F_resume_M_C(table_sp_i = table_maquereau_i, modele = M_i_Ma_40)
ggplot(SR_obs_pred_Ma, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "SR_obs"), alpha = 0.5) + 
    geom_line(aes(y = SR_obs, colour = "SR_obs"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Pred_R"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Pred_R"), size = 1) +
    geom_point(aes(y = pred_C_reponse, colour = "Pred_C"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = pred_C_reponse, colour = "Pred_C"), linetype = "dashed", size = 0.7) +
    scale_color_manual(values = wes_palette("Darjeeling1", n = 3)) +
    theme_light() +
    labs(y = "sexe ratio", x = "Cohorte")

ggplot(SR_obs_pred_Ma, aes (x = SR_obs, y = Pred_R)) +
    geom_point() +
    geom_abline(intercept = 0, slope = 1, colour = "#666666", linetype = "dashed") +
    xlim(0.4,0.6) +
    ylim(0.4,0.6) +
    theme_light()

##############################
SR_obs_pred_Ma <- F_pred_fcohorte(tableau = table_maquereau_i, modele = M_i_Ma_40, d = 2002)
ggplot(SR_obs_pred_Ma, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "SR_obs"), alpha = 0.5) + 
    geom_line(aes(y = SR_obs, colour = "SR_obs"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Pred_R"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Pred_R"), size = 1) +
    geom_point(aes(y = pred, colour = "pred_fcohorte"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = pred, colour = "pred_fcohorte"), size = 0.7) +
    scale_color_manual(values = wes_palette("Darjeeling1", n = 3)) +
    theme_light() +
    labs(y = "sexe ratio", x = "Cohorte")
```

*Lieu*
```{r}

SR_obs_pred_L <- F_resume_M_C(table_sp_i = table_lieu_i, modele = M_i_L_40_pt2)
ggplot(SR_obs_pred_L, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "SR_obs"), alpha = 0.5) + 
    geom_line(aes(y = SR_obs, colour = "SR_obs"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Pred_R"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Pred_R"), size = 1) +
    geom_point(aes(y = pred_C_reponse, colour = "Pred_C"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = pred_C_reponse, colour = "Pred_C"), linetype = "dashed", size = 0.7) +
    scale_color_manual(values = wes_palette("Darjeeling1", n = 3)) +
    theme_light() +
    labs(y = "sexe ratio", x = "Cohorte")

ggplot(SR_obs_pred_L, aes (x = SR_obs, y = Pred_R)) +
    geom_point() +
    geom_abline(intercept = 0, slope = 1, colour = "#666666", linetype = "dashed") +
    xlim(0.4,0.75) +
    ylim(0.4,0.75) +
    theme_light()

##############################
SR_obs_pred_L <- F_pred_fcohorte(tableau = table_lieu_i, modele = M_i_L_40, d = 1996)
ggplot(SR_obs_pred_L, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "SR_obs"), alpha = 0.5) + 
    geom_line(aes(y = SR_obs, colour = "SR_obs"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Pred_R"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Pred_R"), size = 1) +
    geom_point(aes(y = pred, colour = "pred_fcohorte"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = pred, colour = "pred_fcohorte"), size = 0.7) +
    scale_color_manual(values = wes_palette("Darjeeling1", n = 3)) +
    theme_light() +
    labs(y = "sexe ratio", x = "Cohorte")
```

*Aiglefin*
```{r}

SR_obs_pred_A <- F_resume_M_C(table_sp_i = table_aiglefin_i, modele = M_i_A_40_pt3)
ggplot(SR_obs_pred_A, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "SR_obs"), alpha = 0.5) + 
    geom_line(aes(y = SR_obs, colour = "SR_obs"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Pred_R"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Pred_R"), size = 1) +
    geom_point(aes(y = pred_C_reponse, colour = "Pred_C"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = pred_C_reponse, colour = "Pred_C"), linetype = "dashed", size = 0.7) +
    scale_color_manual(values = wes_palette("Darjeeling1", n = 3)) +
    theme_light() +
    labs(y = "sexe ratio", x = "Cohorte")

ggplot(SR_obs_pred_A, aes (x = SR_obs, y = Pred_R)) +
    geom_point() +
    geom_abline(intercept = 0, slope = 1, colour = "#666666", linetype = "dashed") +
    xlim(0.4,0.6) +
    ylim(0.4,0.6) +
    theme_light()

#########################
SR_obs_pred_A <- F_pred_fcohorte(tableau = table_aiglefin_i, modele = M_i_A_40, d = 1993)
ggplot(SR_obs_pred_A, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "SR_obs"), alpha = 0.5) + 
    geom_line(aes(y = SR_obs, colour = "SR_obs"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Pred_R"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Pred_R"), size = 1) +
    geom_point(aes(y = pred, colour = "pred_fcohorte"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = pred, colour = "pred_fcohorte"), size = 0.7) +
    scale_color_manual(values = wes_palette("Darjeeling1", n = 3)) +
    theme_light() +
    labs(y = "sexe ratio", x = "Cohorte")
```

*Hareng*
```{r}

SR_obs_pred_H <- F_resume_M_C(table_sp_i = table_hareng_i, modele = M_i_H_40)
#ggplot(SR_obs_pred_H, aes(x = Cohorte)) +
#    geom_point(aes(y = SR_obs, colour = "SR_obs"), alpha = 0.5) + 
#    geom_line(aes(y = SR_obs, colour = "SR_obs"), size = 1) +
#    geom_point(aes(y = Pred_R, colour = "Pred_R"), alpha = 0.5, shape = 5) + 
#    geom_line(aes(y = Pred_R, colour = "Pred_R"), size = 1) +
#    geom_point(aes(y = pred_C_reponse, colour = "Pred_C"), alpha = 0.5, shape = 5) + 
#    geom_line(aes(y = pred_C_reponse, colour = "Pred_C"), linetype = "dashed", size = 0.7) +
#    scale_color_manual(values = wes_palette("Darjeeling1", n = 3)) +
#    theme_light() +
#    labs(y = "sexe ratio", x = "Cohorte")

#ggplot(SR_obs_pred_H, aes (x = SR_obs, y = Pred_R)) +
#    geom_point() +
##    geom_abline(intercept = 0, slope = 1, colour = "#666666", linetype = "dashed") +
#    xlim(0.3,0.6) +
#    ylim(0.3,0.6) +
#    theme_light()

df <- data.frame(Cohorte = SR_obs_pred_H$Cohorte, Prediction_cohorte = SR_obs_pred_H$pred_C_reponse)
SR_obs_pred_H <- F_pred_fcohorte(tableau = table_hareng_i, modele = M_i_H_40, d = 1995)
SR_obs_pred_H<- left_join(SR_obs_pred_H, df, by = "Cohorte")

ggplot(SR_obs_pred_H, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "SR_obs"), alpha = 0.5) + 
    geom_line(aes(y = SR_obs, colour = "SR_obs"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Pred_R"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Pred_R"), size = 1) +
    geom_point(aes(y = pred, colour = "pred_fcohorte"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = pred, colour = "pred_fcohorte"), size = 0.7) +
    geom_point(aes(y = Prediction_cohorte, colour = "Pred_cohorte"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Prediction_cohorte, colour = "Pred_cohorte"), size = 0.7) +
    scale_color_brewer(palette="Set1", name="sexe ratio", ) +
    theme_light() +
    labs(y = "sexe ratio", x = "Cohorte")

```



En dessous c'est à peu près la même chose que j'ai fait au dessus (permet de lancer les fonctions pour toutes les espèces à la fois)
```{r}
######### hareng
SR_obs_pred_H <- F_resume_M_C(table_sp_i = table_hareng_i, modele = M_i_H_40)
df <- data.frame(Cohorte = SR_obs_pred_H$Cohorte, Prediction_cohorte = SR_obs_pred_H$pred_C_reponse)
SR_obs_pred_H <- F_pred_fcohorte(tableau = table_hareng_i, modele = M_i_H_40, d = 1995)
SR_obs_pred_H<- left_join(SR_obs_pred_H, df, by = "Cohorte")

######### Aiglefin
SR_obs_pred_A <- F_resume_M_C(table_sp_i = table_aiglefin_i, modele = M_i_A_40)
df <- data.frame(Cohorte = SR_obs_pred_A$Cohorte, Prediction_cohorte = SR_obs_pred_A$pred_C_reponse)
SR_obs_pred_A <- F_pred_fcohorte(tableau = table_aiglefin_i, modele = M_i_A_40, d = 1993)
SR_obs_pred_A<- left_join(SR_obs_pred_A, df, by = "Cohorte")

######### Lieu
SR_obs_pred_L <- F_resume_M_C(table_sp_i = table_lieu_i, modele = M_i_L_40)
df <- data.frame(Cohorte = SR_obs_pred_L$Cohorte, Prediction_cohorte = SR_obs_pred_L$pred_C_reponse)
SR_obs_pred_L <- F_pred_fcohorte(tableau = table_lieu_i, modele = M_i_L_40, d = 1996)
SR_obs_pred_L<- left_join(SR_obs_pred_L, df, by = "Cohorte")

######### Limande Sole
SR_obs_pred_LS <- F_resume_M_C(table_sp_i = table_limande_sole_i, modele = M_i_LS_40)
df <- data.frame(Cohorte = SR_obs_pred_LS$Cohorte, Prediction_cohorte = SR_obs_pred_LS$pred_C_reponse)
SR_obs_pred_LS <- F_pred_fcohorte(tableau = table_limande_sole_i, modele = M_i_LS_40, d = 2009)
SR_obs_pred_LS<- left_join(SR_obs_pred_LS, df, by = "Cohorte")


######### Maquereau
SR_obs_pred_Ma <- F_resume_M_C(table_sp_i = table_maquereau_i, modele = M_i_Ma_40)
df <- data.frame(Cohorte = SR_obs_pred_Ma$Cohorte, Prediction_cohorte = SR_obs_pred_Ma$pred_C_reponse)
SR_obs_pred_Ma <- F_pred_fcohorte(tableau = table_maquereau_i, modele = M_i_Ma_40, d = 2002)
SR_obs_pred_Ma<- left_join(SR_obs_pred_Ma, df, by = "Cohorte")

######### Merlan
SR_obs_pred_Me <- F_resume_M_C(table_sp_i = table_merlan_i, modele = M_i_Me_40_pta32)
df <- data.frame(Cohorte = SR_obs_pred_Me$Cohorte, Prediction_cohorte = SR_obs_pred_Me$pred_C_reponse)
SR_obs_pred_Me <- F_pred_fcohorte(tableau = table_merlan_i, modele = M_i_Me_40_pta32, d = 1994)
SR_obs_pred_Me<- left_join(SR_obs_pred_Me, df, by = "Cohorte")

######### Morue
SR_obs_pred_Mo <- F_resume_M_C(table_sp_i = table_morue_i, modele = M_i_Mo_40_pta2)
df <- data.frame(Cohorte = SR_obs_pred_Mo$Cohorte, Prediction_cohorte = SR_obs_pred_Mo$pred_C_reponse)
SR_obs_pred_Mo <- F_pred_fcohorte(tableau = table_morue_i, modele = M_i_Mo_40_pta2, d = 1995)
SR_obs_pred_Mo<- left_join(SR_obs_pred_Mo, df, by = "Cohorte")

######### Plie
SR_obs_pred_P <- F_resume_M_C(table_sp_i = table_plie_i, modele = M_i_P_40_pta23)
df <- data.frame(Cohorte = SR_obs_pred_P$Cohorte, Prediction_cohorte = SR_obs_pred_P$pred_C_reponse)
SR_obs_pred_P <- F_pred_fcohorte(tableau = table_plie_i, modele = M_i_P_40_pta23, d = 2002)
SR_obs_pred_P<- left_join(SR_obs_pred_P, df, by = "Cohorte")

######### hareng
SR_obs_pred_S <- F_resume_M_C(table_sp_i = table_sprat_i, modele = M_i_S_40_pt2)
df <- data.frame(Cohorte = SR_obs_pred_S$Cohorte, Prediction_cohorte = SR_obs_pred_S$pred_C_reponse)
SR_obs_pred_S <- F_pred_fcohorte(tableau = table_sprat_i, modele = M_i_S_40_pt2, d = 2004)
SR_obs_pred_S<- left_join(SR_obs_pred_S, df, by = "Cohorte")

######### Tacaud
SR_obs_pred_T <- F_resume_M_C(table_sp_i = table_tacaud_i, modele = M_i_T_40_pta23)
df <- data.frame(Cohorte = SR_obs_pred_T$Cohorte, Prediction_cohorte = SR_obs_pred_T$pred_C_reponse)
SR_obs_pred_T <- F_pred_fcohorte(tableau = table_tacaud_i, modele = M_i_T_40_pta23, d = 1993)
SR_obs_pred_T<- left_join(SR_obs_pred_T, df, by = "Cohorte")
```


```{r}
################ Une des figures du rapport ########### En fait non, parce qu'il n'y a pas les prédictions de l'âge et de la taille
library(patchwork)

colour <- c("Sexe ratio observé" = "#006666", "Prédictions du modèle" = "#CC9900", "Prédictions du modèle en fixant l'effet aléatoire de la cohorte" = "#333399" , "Prédictions de la Cohorte"= "#339966") #Palette de couleur

Pred_M_H_C <-ggplot(SR_obs_pred_H, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "Sexe ratio observé"), alpha = 0.5) + 
    geom_line(aes(y = SR_obs, colour = "Sexe ratio observé"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Prédictions du modèle"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Prédictions du modèle"), size = 1) +
   # geom_point(aes(y = pred, colour = "Prédictions du modèle en fixant l'effet aléatoire de la cohorte"), alpha = 0.5, shape = 5) + 
    #geom_line(aes(y = pred, colour = "Prédictions du modèle en fixant l'effet aléatoire de la cohorte"), size = 0.7, linetype = "twodash") +
    geom_point(aes(y = Prediction_cohorte, colour = "Prédictions de la Cohorte"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Prediction_cohorte, colour = "Prédictions de la Cohorte"), size = 0.7, linetype = "twodash") +
    scale_color_manual(values = colour, breaks = c("Sexe ratio observé", "Prédiction du modèle", "Prédictions du modèle en fixant l'effet aléatoire de la cohorte", "Prédictions de la Cohorte")) +
    labs(title = "Hareng", y = "sexe ratio", x = "Cohorte") +
    theme_light() +
    theme(plot.title = element_text(face = "bold", hjust = 0.5, size = 14), legend.position='none')

Pred_M_A_C <- ggplot(SR_obs_pred_A, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "Sexe ratio observé"), alpha = 0.5) + 
    geom_line(aes(y = SR_obs, colour = "Sexe ratio observé"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Prédictions du modèle"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Prédictions du modèle"), size = 1) +
    #geom_point(aes(y = pred, colour = "Prédictions du modèle en fixant l'effet aléatoire de la cohorte"), alpha = 0.5, shape = 5) + 
    #geom_line(aes(y = pred, colour = "Prédictions du modèle en fixant l'effet aléatoire de la cohorte"), size = 0.7, linetype = "twodash") +
    geom_point(aes(y = Prediction_cohorte, colour = "Prédictions de la Cohorte"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Prediction_cohorte, colour = "Prédictions de la Cohorte"), size = 0.7, linetype = "twodash") +
    scale_color_manual(values = colour, breaks = c("Sexe ratio observé", "Prédiction du modèle", "Prédictions du modèle en fixant l'effet aléatoire de la cohorte", "Prédictions de la Cohorte")) +
    labs(title = "Aiglefin", y = "sexe ratio", x = "Cohorte") +
    theme_light() +
    theme(plot.title = element_text(face = "bold", hjust = 0.5, size = 14), legend.position='none')

Pred_M_L_C <- ggplot(SR_obs_pred_L, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "Sexe ratio observé"), alpha = 0.5) + 
    geom_line(aes(y = SR_obs, colour = "Sexe ratio observé"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Prédictions du modèle"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Prédictions du modèle"), size = 1) +
    #geom_point(aes(y = pred, colour = "Prédictions du modèle en fixant l'effet aléatoire de la cohorte"), alpha = 0.5, shape = 5) + 
    #geom_line(aes(y = pred, colour = "Prédictions du modèle en fixant l'effet aléatoire de la cohorte"), size = 0.7, linetype = "twodash") +
    geom_point(aes(y = Prediction_cohorte, colour = "Prédictions de la Cohorte"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Prediction_cohorte, colour = "Prédictions de la Cohorte"), size = 0.7, linetype = "twodash") +
    scale_color_manual(values = colour, breaks = c("Sexe ratio observé", "Prédiction du modèle", "Prédictions du modèle en fixant l'effet aléatoire de la cohorte", "Prédictions de la Cohorte")) +
    labs(title = "Lieu noir", y = "sexe ratio", x = "Cohorte") +
    theme_light() +
    theme(plot.title = element_text(face = "bold", hjust = 0.5, size = 14), legend.position='none')

Pred_M_LS_C <- ggplot(SR_obs_pred_LS, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "Sexe ratio observé"), alpha = 0.5) + 
    geom_line(aes(y = SR_obs, colour = "Sexe ratio observé"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Prédictions du modèle"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Prédictions du modèle"), size = 1) +
    #geom_point(aes(y = pred, colour = "Prédictions du modèle en fixant l'effet aléatoire de la cohorte"), alpha = 0.5, shape = 5) + 
    #geom_line(aes(y = pred, colour = "Prédictions du modèle en fixant l'effet aléatoire de la cohorte"), size = 0.7, linetype = "twodash") +
    geom_point(aes(y = Prediction_cohorte, colour = "Prédictions de la Cohorte"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Prediction_cohorte, colour = "Prédictions de la Cohorte"), size = 0.7, linetype = "twodash") +
    scale_color_manual(values = colour, breaks = c("Sexe ratio observé", "Prédiction du modèle", "Prédictions du modèle en fixant l'effet aléatoire de la cohorte", "Prédictions de la Cohorte")) +
    labs(title = "Limande-sole", y = "sexe ratio", x = "Cohorte") +
    theme_light() +
    theme(plot.title = element_text(face = "bold", hjust = 0.5, size = 14), legend.position='none')

Pred_M_Ma_C <- ggplot(SR_obs_pred_Ma, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "Sexe ratio observé"), alpha = 0.5) + 
    geom_line(aes(y = SR_obs, colour = "Sexe ratio observé"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Prédictions du modèle"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Prédictions du modèle"), size = 1) +
    #geom_point(aes(y = pred, colour = "Prédictions du modèle en fixant l'effet aléatoire de la cohorte"), alpha = 0.5, shape = 5) + 
    #geom_line(aes(y = pred, colour = "Prédictions du modèle en fixant l'effet aléatoire de la cohorte"), size = 0.7, linetype = "twodash") +
    geom_point(aes(y = Prediction_cohorte, colour = "Prédictions de la Cohorte"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Prediction_cohorte, colour = "Prédictions de la Cohorte"), size = 0.7, linetype = "twodash") +
    scale_color_manual(values = colour, breaks = c("Sexe ratio observé", "Prédiction du modèle", "Prédictions du modèle en fixant l'effet aléatoire de la cohorte", "Prédictions de la Cohorte")) +
    labs(title = "Maquereau commun", y = "sexe ratio", x = "Cohorte") +
    theme_light() +
    theme(plot.title = element_text(face = "bold", hjust = 0.5, size = 14), legend.position='none')

Pred_M_Me_C <- ggplot(SR_obs_pred_Me, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "Sexe ratio observé"), alpha = 0.5) + 
    geom_line(aes(y = SR_obs, colour = "Sexe ratio observé"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Prédictions du modèle"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Prédictions du modèle"), size = 1) +
    #geom_point(aes(y = pred, colour = "Prédictions du modèle en fixant l'effet aléatoire de la cohorte"), alpha = 0.5, shape = 5) + 
    #geom_line(aes(y = pred, colour = "Prédictions du modèle en fixant l'effet aléatoire de la cohorte"), size = 0.7, linetype = "twodash") +
    geom_point(aes(y = Prediction_cohorte, colour = "Prédictions de la Cohorte"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Prediction_cohorte, colour = "Prédictions de la Cohorte"), size = 0.7, linetype = "twodash") +
    scale_color_manual(values = colour, breaks = c("Sexe ratio observé", "Prédiction du modèle", "Prédictions du modèle en fixant l'effet aléatoire de la cohorte", "Prédictions de la Cohorte")) +
    labs(title = "Merlan", y = "sexe ratio", x = "Cohorte") +
    theme_light() +
    theme(plot.title = element_text(face = "bold", hjust = 0.5, size = 14), legend.position='none')

Pred_M_Mo_C <- ggplot(SR_obs_pred_Mo, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "Sexe ratio observé"), alpha = 0.5) + 
    geom_line(aes(y = SR_obs, colour = "Sexe ratio observé"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Prédictions du modèle"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Prédictions du modèle"), size = 1) +
    #geom_point(aes(y = pred, colour = "Prédictions du modèle en fixant l'effet aléatoire de la cohorte"), alpha = 0.5, shape = 5) + 
    #geom_line(aes(y = pred, colour = "Prédictions du modèle en fixant l'effet aléatoire de la cohorte"), size = 0.7, linetype = "twodash") +
    geom_point(aes(y = Prediction_cohorte, colour = "Prédictions de la Cohorte"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Prediction_cohorte, colour = "Prédictions de la Cohorte"), size = 0.7, linetype = "twodash") +
    scale_color_manual(values = colour, breaks = c("Sexe ratio observé", "Prédiction du modèle", "Prédictions du modèle en fixant l'effet aléatoire de la cohorte", "Prédictions de la Cohorte")) +
    labs(title = "Morue de l'Atlantique", y = "sexe ratio", x = "Cohorte") +
    theme_light() +
    theme(plot.title = element_text(face = "bold", hjust = 0.5, size = 14), legend.position='none')

Pred_M_P_C <- ggplot(SR_obs_pred_P, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "Sexe ratio observé"), alpha = 0.5) + 
    geom_line(aes(y = SR_obs, colour = "Sexe ratio observé"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Prédictions du modèle"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Prédictions du modèle"), size = 1) +
    #geom_point(aes(y = pred, colour = "Prédictions du modèle en fixant l'effet aléatoire de la cohorte"), alpha = 0.5, shape = 5) + 
    #geom_line(aes(y = pred, colour = "Prédictions du modèle en fixant l'effet aléatoire de la cohorte"), size = 0.7, linetype = "twodash") +
    geom_point(aes(y = Prediction_cohorte, colour = "Prédictions de la Cohorte"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Prediction_cohorte, colour = "Prédictions de la Cohorte"), size = 0.7, linetype = "twodash") +
   scale_color_manual(values = colour, breaks = c("Sexe ratio observé", "Prédiction du modèle", "Prédictions du modèle en fixant l'effet aléatoire de la cohorte", "Prédictions de la Cohorte")) +
    labs(title = "Plie commune", y = "sexe ratio", x = "Cohorte") +
    theme_light() +
    theme(plot.title = element_text(face = "bold", hjust = 0.5, size = 14), legend.position='none')

Pred_M_S_C <- ggplot(SR_obs_pred_S, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "Sexe ratio observé"), alpha = 0.5) + 
    geom_line(aes(y = SR_obs, colour = "Sexe ratio observé"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Prédictions du modèle"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Prédictions du modèle"), size = 1) +
    #geom_point(aes(y = pred, colour = "Prédictions du modèle en fixant l'effet aléatoire de la cohorte"), alpha = 0.5, shape = 5) + 
    #geom_line(aes(y = pred, colour = "Prédictions du modèle en fixant l'effet aléatoire de la cohorte"), size = 0.7, linetype = "twodash") +
    geom_point(aes(y = Prediction_cohorte, colour = "Prédictions de la Cohorte"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Prediction_cohorte, colour = "Prédictions de la Cohorte"), size = 0.7, linetype = "twodash") +
    scale_color_manual(values = colour, breaks = c("Sexe ratio observé", "Prédiction du modèle", "Prédictions du modèle en fixant l'effet aléatoire de la cohorte", "Prédictions de la Cohorte")) +
    labs(title = "Sprat", y = "sexe ratio", x = "Cohorte") +
    theme_light() +
    theme(plot.title = element_text(face = "bold", hjust = 0.5, size = 14), legend.position='none')

Pred_M_T_C <- ggplot(SR_obs_pred_T, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "Sexe ratio observé"), alpha = 0.5) + 
    geom_line(aes(y = SR_obs, colour = "Sexe ratio observé"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Prédictions du modèle"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Prédictions du modèle"), size = 1) +
    #geom_point(aes(y = pred, colour = "Prédictions du modèle en fixant l'effet aléatoire de la cohorte"), alpha = 0.5, shape = 5) + 
    #geom_line(aes(y = pred, colour = "Prédictions du modèle en fixant l'effet aléatoire de la cohorte"), size = 0.7, linetype = "twodash") +
    geom_point(aes(y = Prediction_cohorte, colour = "Prédictions de la Cohorte"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Prediction_cohorte, colour = "Prédictions de la Cohorte"), size = 0.7, linetype = "twodash") +
    scale_color_manual(values = colour, breaks = c("Sexe ratio observé", "Prédiction du modèle", "Prédictions du modèle en fixant l'effet aléatoire de la cohorte", "Prédictions de la Cohorte")) +
    labs(title = "Tacaud norvégien", y = "sexe ratio", x = "Cohorte") +
    theme_light() +
    theme(plot.title = element_text(face = "bold", hjust = 0.5, size = 14), legend.position='none')

P1 <- Pred_M_A_C + Pred_M_H_C 
P2 <- Pred_M_L_C + Pred_M_LS_C 
P3 <- Pred_M_Ma_C + Pred_M_Me_C 
P4 <- Pred_M_Mo_C + Pred_M_P_C 
P5 <- Pred_M_S_C + Pred_M_T_C


plot_pred_M_C <- P1/P2/P3/P4/P5

#Figures de Benjamin Cohorte
#ggsave("Pred_M_H_C.tiff", plot = Pred_M_H_C, width = 10, height = 5)
#ggsave("Pred_M_A_C.tiff", plot = Pred_M_A_C, width = 10, height = 5)
#ggsave("Pred_M_L_C.tiff", plot = Pred_M_L_C, width = 10, height = 5)
#ggsave("Pred_M_LS_C.tiff", plot = Pred_M_LS_C, width = 10, height = 5)
#ggsave("Pred_M_Ma_C.tiff", plot = Pred_M_Ma_C, width = 10, height = 5)
#ggsave("Pred_M_Me_C.tiff", plot = Pred_M_Me_C, width = 10, height = 5)
#ggsave("Pred_M_Mo_C.tiff", plot = Pred_M_Mo_C, width = 10, height = 5)
#ggsave("Pred_M_P_C.tiff", plot = Pred_M_P_C, width = 10, height = 5)
#ggsave("Pred_M_S_C.tiff", plot = Pred_M_S_C, width = 10, height = 5)
#ggsave("Pred_M_T_C.tiff", plot = Pred_M_T_C, width = 10, height = 5)
```



hareng, Aiglefin, Tacaud
M_i_A_40
M_i_H_40
M_i_L_40
M_i_Ma_40
M_i_Me_40_pta32
M_i_Mo_40_pta2
M_i_P_40_pta3
M_i_S_40_pt2
Mi_T_40_e_pta23
M_i_LS_40

# Variables environnementales 
Modèles
```{r}
Mi_A_40_e <- glmer(sexe_numerique ~ sc_LngtClass + sc_age + sc_Moy_NAO_JFM +sc_moy_AMO_d + sc_moy_GSNW + sc_SST + (1|Area), data = table_aiglefin_i, family = binomial(link = "logit"))## linéaire
Mi_H__40_e <- glmer(sexe_numerique ~ sc_LngtClass + sc_age + sc_Moy_NAO_JFM +sc_moy_AMO_d + sc_moy_GSNW + sc_SST + (1|Area), data = table_hareng_i, family = binomial(link = "logit"))## linéaire
Mi_L_40_e <- glmer(sexe_numerique ~ sc_LngtClass + sc_age + sc_Moy_NAO_JFM +sc_moy_AMO_d + sc_moy_GSNW + sc_SST + (1|Area), data = table_lieu_i, family = binomial(link = "logit"))## linéaire
Mi_Ma_40_e<- glm(sexe_numerique ~ sc_LngtClass + sc_age + sc_Moy_NAO_JFM +sc_moy_AMO_d + sc_moy_GSNW + sc_SST, data = table_maquereau_i, family = binomial(link = "logit"))## linéaire
Mi_Me_40_e <- glmer(sexe_numerique ~ sc_LngtClass + sc_age + sc_Moy_NAO_JFM +sc_moy_AMO_d + sc_moy_GSNW + sc_SST + (1|Area), data = table_merlan_i, family = binomial(link = "logit"))## pta32
Mi_Mo_40_e <- glmer(sexe_numerique ~ sc_LngtClass + sc_age + sc_Moy_NAO_JFM +sc_moy_AMO_d + sc_moy_GSNW + sc_SST + (1|Area), data = table_morue_i, family = binomial(link = "logit"))##pta2
Mi_P_40_e <- glmer(sexe_numerique ~ sc_LngtClass + sc_age + sc_Moy_NAO_JFM +sc_moy_AMO_d + sc_moy_GSNW + sc_SST + (1|Area), data = table_plie_i, family = binomial(link = "logit"))##pta23
Mi_S_40_e <- glmer(sexe_numerique ~ sc_LngtClass + sc_age + sc_Moy_NAO_JFM +sc_moy_AMO_d + sc_moy_GSNW + sc_SST + (1|Area), data = table_sprat_i, family = binomial(link = "logit"))##pt2
Mi_T_40_e <- glmer(sexe_numerique ~ sc_LngtClass + sc_age + sc_Moy_NAO_JFM +sc_moy_AMO_d + sc_moy_GSNW + sc_SST + (1|Area), data = table_tacaud_i, family = binomial(link = "logit"))##pta23
Mi_LS_40_e <- glmer(sexe_numerique ~ sc_LngtClass + sc_age + sc_Moy_NAO_JFM +sc_moy_AMO_d + sc_moy_GSNW + sc_SST + (1|Area), data = table_limande_sole_i, family = binomial(link = "logit"))## linéaire
```


```{r}

#Mi_A_40_e_pt3 <- glmer(sexe_numerique ~ poly(sc_LngtClass, degree = 3, raw = TRUE) + sc_age + sc_Moy_NAO_JFM +sc_moy_AMO_d + sc_moy_GSNW + sc_SST + (1|Area), data = table_aiglefin_i, family = binomial(link = "logit")) ne converge pas
Mi_Me_40_e_32 <- glmer(sexe_numerique ~ poly(sc_LngtClass, degree = 3) + poly(sc_age, degree = 2) + sc_Moy_NAO_JFM +sc_moy_AMO_d + sc_moy_GSNW + sc_SST + (1|Area), data = table_merlan_i, family = binomial(link = "logit"))## pta32
Mi_Mo_40_e_pta2 <- glmer(sexe_numerique ~ poly(sc_LngtClass, degree = 2) + poly(sc_age, degree = 2) + sc_Moy_NAO_JFM +sc_moy_AMO_d + sc_moy_GSNW + sc_SST + (1|Area), data = table_morue_i, family = binomial(link = "logit"))##pta2
Mi_P_40_e_pta3 <- glmer(sexe_numerique ~ poly(sc_LngtClass, degree = 3) + poly(sc_age, degree = 3) + sc_Moy_NAO_JFM +sc_moy_AMO_d + sc_moy_GSNW + sc_SST + (1|Area), data = table_plie_i, family = binomial(link = "logit"))##pta3
Mi_S_40_e_pt2 <- glmer(sexe_numerique ~ poly(sc_LngtClass, degree = 2) + sc_age + sc_Moy_NAO_JFM +sc_moy_AMO_d + sc_moy_GSNW + sc_SST + (1|Area), data = table_hareng_i, family = binomial(link = "logit"))##pt2
Mi_T_40_e_pta23 <- glmer(sexe_numerique ~ poly(sc_LngtClass, degree = 2)+ poly(sc_age, degree = 3) + sc_Moy_NAO_JFM +sc_moy_AMO_d + sc_moy_GSNW + sc_SST + (1|Area), data = table_tacaud_i, family = binomial(link = "logit"))

```

# Fonctions
```{r}
#on a créer cette fonction pour les modèles cohorte
#i.logit <- function(x){
#  exp(x)/(1+exp(x))
#}

#F_effet_cohorte <- function(tableau, tableau2, modele){
#  Moy_SR <- mean(tableau[, "sexe_num_2"]) 
#  df.cohorte <- data.frame(sc_cohorte = unique(tableau[, "sc_cohorte"])[order(unique(tableau[, "sc_cohorte"]))], Cohorte = unique(tableau[,"Cohorte"])[order(unique(tableau[,"sc_cohorte"]))])
#  beta_cohorte <- fixef(modele)[which(names(fixef(modele)) == "sc_cohorte")]
#  df.cohorte$pred_link <- logit(Moy_SR) + beta_cohorte*df.cohorte[,"sc_cohorte"]
#  df.cohorte$pred_reponse <- i.logit(df.cohorte[,"pred_link"])
#  tableau2 <- left_join(tableau2, df.cohorte, by = "Cohorte")
#  names(tableau2)[names(tableau2) == "pred_reponse"] <- "pred_C_reponse"
#  return(tableau2)
#}


unique(table_hareng_i$Moy_NAO_JFM[which(table_hareng_i$Cohorte == 2007)])# c'est la même valeur, donc la fonction juste au dessus ne peut pas utiliser le même type de fonction que pour les modèles "cohorte"
unique(table_hareng_i$Moy_NAO_JFM[which(table_hareng_i$Cohorte == 1973)])#


##################
#Fenv_effet_cohorte <- function(SR_obs_pred_sp,df.VE, nom_VE, modele, nom2, nom3){
#  Moy_SR <- mean(SR_obs_pred_sp$SR_obs)
#  df.VE <- df.VE[order(df.VE$Cohorte),]
#  beta.VE <- fixef(modele)[[which(names(fixef(modele)) == nom_VE)]]
#  df.VE$pred_link <- fixef(modele)[[1]] + beta.VE*df.VE[,nom_VE] #prendre l'intercept du modele 
#  df.VE$pred <- i.logit(df.VE[,"pred_link"])
#  SR_obs_pred_sp <- left_join(SR_obs_pred_sp, df.VE, by = "Cohorte")
#  names(SR_obs_pred_sp)[names(SR_obs_pred_sp) == "pred"] <- nom2
#  names(SR_obs_pred_sp)[names(SR_obs_pred_sp) == "pred_link"] <- nom3
#  return(SR_obs_pred_sp)
#}

#contribution des variables environnementales a partir des predictions des modèles
Fenv_effet_cohorte <- function(tableau_sp_i , SR_obs_pred_sp, df.VE, nom_VE, modele, nom2, nom3){
  Moy_SR <- mean(tableau_sp_i$sexe_num_2)#moyenne sexe ratio
  df.VE <- df.VE[order(df.VE$Cohorte),]#on ordonne le dataframe selon un ordre chronologique
  beta.VE <- fixef(modele)[[which(names(fixef(modele)) == nom_VE)]]#intercept du modèle pour la variable explicative voulue
  df.VE$pred_link <- logit(Moy_SR) + beta.VE*df.VE[,nom_VE] #prendre l'intercept du modele 
  df.VE$pred <- i.logit(df.VE[,"pred_link"])
  SR_obs_pred_sp <- left_join(SR_obs_pred_sp, df.VE, by = "Cohorte")
  names(SR_obs_pred_sp)[names(SR_obs_pred_sp) == "pred"] <- nom2 #renommer des colonnes
  names(SR_obs_pred_sp)[names(SR_obs_pred_sp) == "pred_link"] <- nom3
  return(SR_obs_pred_sp)
}

#fonction qui aggrège d'autres fonctions crées (celle qui crée un nouveau tableau, celle qui sort les prédictions du modèle et les résidus, et celle qui calcul les SR obs et prédit)
F_M_env <- function(table_sp_i, modele){
  table_sp_i2 <- F_tableau_i2(tableau = table_sp_i)
  table_sp_i2 <- F_resid_pred(tableau = table_sp_i2, modele = modele)
  SR_obs_pred_sp <- F_SR_obs_pred(tableau = table_sp_i2)
  return(SR_obs_pred_sp)
}

#fonction qui me fait mes figures
Fenv_plot <- function(table_sp_i, SR_obs_pred_sp, modele){
  intercept <- mean(table_sp_i$sexe_num_2)
  p1 <- ggplot(SR_obs_pred_sp, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "Sexe ratio observé"), alpha = 0.5) + 
    geom_line(aes(y = SR_obs, colour = "Sexe ratio observé"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Prédiction du modèle"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Prédiction du modèle"), size = 1) +
    geom_point(aes(y = Pred_NAO, colour = "Prédiction  NAO"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_NAO, colour = "Prédiction  NAO"), linetype = "twodash", size = 1, alpha = 0.7) +
    geom_point(aes(y = Pred_SST, colour = "Prédiction  SST"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_SST, colour = "Prédiction  SST"), linetype = "twodash", size = 1, alpha = 0.7) +
    geom_point(aes(y = Pred_AMO_d, colour = "Prédiction  AMO"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_AMO_d, colour = "Prédiction  AMO"), linetype = "twodash", size = 1, alpha = 0.7) +
    geom_point(aes(y = Pred_GSNW, colour = "Prédiction  GSNW"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_GSNW, colour = "Prédiction  GSNW"), linetype = "twodash", size = 1, alpha = 0.7) +
    scale_color_brewer(palette="Dark2", name="sexe ratio", ) +
    geom_hline(aes(yintercept = intercept),  color = "#000000", alpha = 0.5) +  #geom_hline(aes(yintercept = i.logit(fixef(modele)[[1]]))) +
    labs( y = "sexe ratio", x = "Cohorte") +
    theme_light() +
    labs(y = "sexe ratio", x = "Cohorte")

    p2 <- ggplot(SR_obs_pred_sp, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "SR_obs"), alpha = 0.5) + 
    geom_line(aes(y = SR_obs, colour = "SR_obs"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Pred_R"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Pred_R"), size = 1) +
    geom_point(aes(y = Pred_NAO, colour = "Pred_NAO"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_NAO, colour = "Pred_NAO"), linetype = "twodash", size = 1) +
    scale_color_brewer(palette="Dark2", name="sexe ratio", ) +
    geom_hline(aes(yintercept = intercept), color = "#000000", alpha = 0.5) +
    theme_light() +
    labs(y = "sexe ratio", x = "Cohorte")
 
   p3 <- ggplot(SR_obs_pred_sp, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "SR_obs"), alpha = 0.5) + 
    geom_line(aes(y = SR_obs, colour = "SR_obs"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Pred_R"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Pred_R"), size = 1) +
    geom_point(aes(y = Pred_SST, colour = "Pred_SST"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_SST, colour = "Pred_SST"), linetype = "twodash", size = 1) +
    scale_color_brewer(palette="Dark2", name="sexe ratio", ) +
    geom_hline(aes(yintercept = intercept), color = "#000000", alpha = 0.5) +
    theme_light() +
    labs(y = "sexe ratio", x = "Cohorte")
 
   p4 <- ggplot(SR_obs_pred_sp, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "SR_obs"), alpha = 0.5) + 
    geom_line(aes(y = SR_obs, colour = "SR_obs"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Pred_R"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Pred_R"), size = 1) +
    geom_point(aes(y = Pred_AMO_d, colour = "Pred_AMO_d"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_AMO_d, colour = "Pred_AMO_d"), linetype = "twodash", size = 1) +
    scale_color_brewer(palette="Dark2", name="sexe ratio", ) +
    geom_hline(aes(yintercept = intercept), color = "#000000", alpha = 0.5) +
    theme_light() +
    labs(y = "sexe ratio", x = "Cohorte")
 
   p5 <- ggplot(SR_obs_pred_sp, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "SR_obs"), alpha = 0.5) + 
    geom_line(aes(y = SR_obs, colour = "SR_obs"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Pred_R"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Pred_R"), size = 1) +
    geom_point(aes(y = Pred_GSNW, colour = "Pred_GSNW"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_GSNW, colour = "Pred_GSNW"), linetype = "twodash", size = 1) +
    scale_color_brewer(palette="Dark2", name="sexe ratio", ) +
    geom_hline(aes(yintercept = intercept), color = "#000000", alpha = 0.5) +
    theme_light() +
    labs(y = "sexe ratio", x = "Cohorte")
  
  p6 <- ggplot(SR_obs_pred_T, aes (x = SR_obs, y = Pred_R)) +
    geom_point() +
    geom_abline(intercept = 0, slope = 1, colour = "#666666", linetype = "dashed") +
    xlim(0.25,0.75) +
    ylim(0.25,0.75) +
    theme_light()
  return(list(p1, p2 , p3, p4, p5, p6))
}


```

*Hareng*
```{r, include=FALSE}
table_H_i2 <- F_tableau_i2(tableau = table_hareng_i)
#F_plot_resid_pred(modele = Mi_H__40_e)
table_H_i2 <- F_resid_pred(tableau = table_H_i2, modele = Mi_H__40_e)
SR_obs_pred_H <- F_SR_obs_pred(tableau = table_H_i2)
df.VE <-aggregate(sc_Moy_NAO_JFM ~ Cohorte, data = table_hareng_i, FUN = unique)
SR_obs_pred_H <- Fenv_effet_cohorte(tableau_sp_i = table_hareng_i, SR_obs_pred_sp = SR_obs_pred_H, df.VE = df.VE, nom_VE = "sc_Moy_NAO_JFM", modele = Mi_H__40_e, nom2 = "Pred_NAO", nom3 = "Pred_link_NAO")
df.VE <-aggregate(sc_SST ~ Cohorte, data = table_hareng_i, FUN = unique)
SR_obs_pred_H <- Fenv_effet_cohorte(tableau_sp_i = table_hareng_i, SR_obs_pred_sp = SR_obs_pred_H, df.VE = df.VE, nom_VE = "sc_SST", modele = Mi_H__40_e, nom2 = "Pred_SST", nom3 = "Pred_link_SST")
df.VE <-aggregate(sc_moy_AMO_d ~ Cohorte, data = table_hareng_i, FUN = unique)
SR_obs_pred_H <- Fenv_effet_cohorte(tableau_sp_i = table_hareng_i, SR_obs_pred_sp = SR_obs_pred_H, df.VE = df.VE, nom_VE = "sc_moy_AMO_d", modele = Mi_H__40_e, nom2 = "Pred_AMO_d",  nom3 = "Pred_link_AMO_d")
df.VE <-aggregate(sc_moy_GSNW ~ Cohorte, data = table_hareng_i, FUN = unique)
SR_obs_pred_H <- Fenv_effet_cohorte(tableau_sp_i = table_hareng_i, SR_obs_pred_sp = SR_obs_pred_H, df.VE = df.VE, nom_VE = "sc_moy_GSNW", modele = Mi_H__40_e, nom2 = "Pred_GSNW",  nom3 = "Pred_link_GSNW")

Fenv_plot(table_sp_i = table_hareng_i, SR_obs_pred_sp = SR_obs_pred_H, modele = Mi_H__40_e)
Fenv_plot(table_sp_i = table_hareng_i, SR_obs_pred_sp = SR_obs_pred_H, modele = Mi_H__40_e)[[1]]
i.logit(fixef(Mi_H__40_e)[[1]])#0.474094
mean(table_hareng_i$sexe_num_2)#0.4688733
mean(SR_obs_pred_H$SR_obs)#0.4759595

```

*Aiglefin*
```{r, , include=FALSE}
SR_obs_pred_A <- F_M_env(table_sp_i = table_aiglefin_i, modele = Mi_A_40_e)
df.VE <-aggregate(sc_Moy_NAO_JFM ~ Cohorte, data = table_aiglefin_i, FUN = unique)
SR_obs_pred_A <- Fenv_effet_cohorte(tableau_sp_i =  table_aiglefin_i, SR_obs_pred_sp = SR_obs_pred_A, df.VE = df.VE, nom_VE = "sc_Moy_NAO_JFM", modele = Mi_A_40_e, nom2 = "Pred_NAO", nom3 = "Pred_link_NAO")
df.VE <-aggregate(sc_SST ~ Cohorte, data = table_aiglefin_i, FUN = unique)
SR_obs_pred_A <- Fenv_effet_cohorte(tableau_sp_i =  table_aiglefin_i, SR_obs_pred_sp = SR_obs_pred_A, df.VE = df.VE, nom_VE = "sc_SST", modele = Mi_A_40_e, nom2 = "Pred_SST", nom3 = "Pred_link_SST")
df.VE <-aggregate(sc_moy_AMO_d ~ Cohorte, data = table_aiglefin_i, FUN = unique)
SR_obs_pred_A <- Fenv_effet_cohorte(tableau_sp_i =  table_aiglefin_i,SR_obs_pred_sp = SR_obs_pred_A, df.VE = df.VE, nom_VE = "sc_moy_AMO_d", modele = Mi_A_40_e, nom2 = "Pred_AMO_d",  nom3 = "Pred_link_AMO_d")
df.VE <-aggregate(sc_moy_GSNW ~ Cohorte, data = table_aiglefin_i, FUN = unique)
SR_obs_pred_A <- Fenv_effet_cohorte(tableau_sp_i =  table_aiglefin_i,SR_obs_pred_sp = SR_obs_pred_A, df.VE = df.VE, nom_VE = "sc_moy_GSNW", modele = Mi_A_40_e, nom2 = "Pred_GSNW",  nom3 = "Pred_link_GSNW")

Fenv_plot(table_sp_i = table_aiglefin_i, SR_obs_pred_sp = SR_obs_pred_A, modele = Mi_A_40_e)

i.logit(fixef(Mi_A_40_e)[[1]])#0.4956071
mean(table_aiglefin_i$sexe_num_2)#0.4931505
mean(SR_obs_pred_A$SR_obs)#0.4981734
```

*Lieu*
```{r, include=FALSE}
SR_obs_pred_L <- F_M_env(table_sp_i = table_lieu_i, modele = Mi_L_40_e)
df.VE <-aggregate(sc_Moy_NAO_JFM ~ Cohorte, data = table_lieu_i, FUN = unique)
SR_obs_pred_L <- Fenv_effet_cohorte(tableau_sp_i =  table_lieu_i, SR_obs_pred_sp = SR_obs_pred_L, df.VE = df.VE, nom_VE = "sc_Moy_NAO_JFM", modele = Mi_L_40_e, nom2 = "Pred_NAO", nom3 = "Pred_link_NAO")
df.VE <-aggregate(sc_SST ~ Cohorte, data = table_lieu_i, FUN = unique)
SR_obs_pred_L <- Fenv_effet_cohorte(tableau_sp_i =  table_lieu_i, SR_obs_pred_sp = SR_obs_pred_L, df.VE = df.VE, nom_VE = "sc_SST", modele = Mi_L_40_e, nom2 = "Pred_SST", nom3 = "Pred_link_SST")
df.VE <-aggregate(sc_moy_AMO_d ~ Cohorte, data = table_lieu_i, FUN = unique)
SR_obs_pred_L <- Fenv_effet_cohorte(tableau_sp_i =  table_lieu_i, SR_obs_pred_sp = SR_obs_pred_L, df.VE = df.VE, nom_VE = "sc_moy_AMO_d", modele = Mi_L_40_e, nom2 = "Pred_AMO_d",  nom3 = "Pred_link_AMO_d")
df.VE <-aggregate(sc_moy_GSNW ~ Cohorte, data = table_lieu_i, FUN = unique)
SR_obs_pred_L <- Fenv_effet_cohorte(tableau_sp_i =  table_lieu_i, SR_obs_pred_sp = SR_obs_pred_L, df.VE = df.VE, nom_VE = "sc_moy_GSNW", modele = Mi_L_40_e, nom2 = "Pred_GSNW",  nom3 = "Pred_link_GSNW")

Fenv_plot(table_sp_i = table_lieu_i, SR_obs_pred_sp = SR_obs_pred_L, modele = Mi_L_40_e)

i.logit(fixef(Mi_L_40_e)[[1]])#0.5449973
mean(table_lieu_i$sexe_num_2)#0.5334139
mean(SR_obs_pred_L$SR_obs)#0.5303321
```

*Maquereau*
```{r, include=FALSE}
#comme le modèle du MAquereau est un glm il a fallut refaire toutes les fonctions...
F_resid_pred_Ma <- function(tableau, modele) {
  Res_P <- resid(modele, type = "pearson")#résidus de pearson
  Res_D <- resid(modele, type = "deviance")#résidus de déviance
  Pred_L <- predict.glm(modele, type = "link")
  Pred_R <- predict.glm(modele, type = "response")
  tableau <- cbind(tableau, Pred_L)
  tableau <- cbind(tableau, Pred_R)
  tableau <- cbind(tableau, Res_D)
  return(tableau)
}

F_M_env_Ma <- function(table_sp_i, modele){
  table_sp_i2 <- F_tableau_i2(tableau = table_sp_i)
  table_sp_i2 <- F_resid_pred_Ma(tableau = table_sp_i2, modele = modele)
  SR_obs_pred_sp <- F_SR_obs_pred(tableau = table_sp_i2)
  return(SR_obs_pred_sp)
}

Fenv_effet_Ma <- function(tableau_sp_i , SR_obs_pred_sp, df.VE, nom_VE, modele, nom2, nom3){
  Moy_SR <- mean(tableau_sp_i$sexe_num_2)
  df.VE <- df.VE[order(df.VE$Cohorte),]
  beta.VE <- modele[["coefficients"]][["(Intercept)"]]
  df.VE$pred_link <- logit(Moy_SR) + beta.VE*df.VE[,nom_VE] #prendre l'intercept du modele 
  df.VE$pred <- i.logit(df.VE[,"pred_link"])
  SR_obs_pred_sp <- left_join(SR_obs_pred_sp, df.VE, by = "Cohorte")
  names(SR_obs_pred_sp)[names(SR_obs_pred_sp) == "pred"] <- nom2
  names(SR_obs_pred_sp)[names(SR_obs_pred_sp) == "pred_link"] <- nom3
  return(SR_obs_pred_sp)
}
####################

SR_obs_pred_Ma <- F_M_env_Ma(table_sp_i = table_maquereau_i, modele = Mi_Ma_40_e)
df.VE <-aggregate(sc_Moy_NAO_JFM ~ Cohorte, data = table_maquereau_i, FUN = unique)

SR_obs_pred_Ma <- Fenv_effet_Ma(tableau_sp_i =  table_maquereau_i, SR_obs_pred_sp = SR_obs_pred_Ma, df.VE = df.VE, nom_VE = "sc_Moy_NAO_JFM", modele = Mi_Ma_40_e, nom2 = "Pred_NAO", nom3 = "pred_Maink_NAO")
df.VE <-aggregate(sc_SST ~ Cohorte, data = table_maquereau_i, FUN = unique)
SR_obs_pred_Ma <- Fenv_effet_Ma(tableau_sp_i =  table_maquereau_i, SR_obs_pred_sp = SR_obs_pred_Ma, df.VE = df.VE, nom_VE = "sc_SST", modele = Mi_Ma_40_e, nom2 = "Pred_SST", nom3 = "pred_Maink_SST")
df.VE <-aggregate(sc_moy_AMO_d ~ Cohorte, data = table_maquereau_i, FUN = unique)
SR_obs_pred_Ma <- Fenv_effet_Ma(tableau_sp_i =  table_maquereau_i, SR_obs_pred_sp = SR_obs_pred_Ma, df.VE = df.VE, nom_VE = "sc_moy_AMO_d", modele = Mi_Ma_40_e, nom2 = "Pred_AMO_d",  nom3 = "pred_Maink_AMO_d")
df.VE <-aggregate(sc_moy_GSNW ~ Cohorte, data = table_maquereau_i, FUN = unique)
SR_obs_pred_Ma <- Fenv_effet_Ma(tableau_sp_i =  table_maquereau_i, SR_obs_pred_sp = SR_obs_pred_Ma, df.VE = df.VE, nom_VE = "sc_moy_GSNW", modele = Mi_Ma_40_e, nom2 = "Pred_GSNW",  nom3 = "pred_Maink_GSNW")

Fenv_plot(table_sp_i = table_maquereau_i, SR_obs_pred_sp = SR_obs_pred_Ma, modele = Mi_Ma_40_e)
Fenv_plot(table_sp_i = table_maquereau_i, SR_obs_pred_sp = SR_obs_pred_Ma, modele = Mi_Ma_40_e)[[1]]


i.logit(Mi_Ma_40_e[["coefficients"]][["(Intercept)"]])#0.4861814
mean(table_maquereau_i$sexe_num_2)#0.4865708
mean(SR_obs_pred_Ma$SR_obs)#0.4918575
```

*Merlan*
```{r, include=FALSE}
SR_obs_pred_Me <- F_M_env(table_sp_i = table_merlan_i, modele = Mi_Me_40_e_32)

df.VE <-aggregate(sc_Moy_NAO_JFM ~ Cohorte, data = table_merlan_i, FUN = unique)
SR_obs_pred_Me <- Fenv_effet_cohorte(tableau_sp_i =  table_merlan_i, SR_obs_pred_sp = SR_obs_pred_Me, df.VE = df.VE, nom_VE = "sc_Moy_NAO_JFM", modele = Mi_Me_40_e_32, nom2 = "Pred_NAO", nom3 = "pred_Meink_NAO")

df.VE <-aggregate(sc_SST ~ Cohorte, data = table_merlan_i, FUN = unique)
SR_obs_pred_Me <- Fenv_effet_cohorte(tableau_sp_i =  table_merlan_i, SR_obs_pred_sp = SR_obs_pred_Me, df.VE = df.VE, nom_VE = "sc_SST", modele = Mi_Me_40_e_32, nom2 = "Pred_SST", nom3 = "pred_Meink_SST")

df.VE <-aggregate(sc_moy_AMO_d ~ Cohorte, data = table_merlan_i, FUN = unique)
SR_obs_pred_Me <- Fenv_effet_cohorte(tableau_sp_i =  table_merlan_i, SR_obs_pred_sp = SR_obs_pred_Me, df.VE = df.VE, nom_VE = "sc_moy_AMO_d", modele = Mi_Me_40_e_32, nom2 = "Pred_AMO_d",  nom3 = "pred_Meink_AMO_d")

df.VE <-aggregate(sc_moy_GSNW ~ Cohorte, data = table_merlan_i, FUN = unique)
SR_obs_pred_Me <- Fenv_effet_cohorte(tableau_sp_i =  table_merlan_i, SR_obs_pred_sp = SR_obs_pred_Me, df.VE = df.VE, nom_VE = "sc_moy_GSNW", modele = Mi_Me_40_e_32, nom2 = "Pred_GSNW",  nom3 = "pred_Meink_GSNW")

Fenv_plot(table_sp_i = table_merlan_i, SR_obs_pred_sp = SR_obs_pred_Me, modele = Mi_Me_40_e_32)

vif(Mi_Me_40_e)
i.logit(fixef(Mi_Me_40_e_32)[[1]])#0.4316542
mean(table_merlan_i$sexe_num_2)#0.4613615
mean(SR_obs_pred_Me$SR_obs)#0.4633994
```

*Morue*
```{r, include=FALSE}
SR_obs_pred_Mo <- F_M_env(table_sp_i = table_morue_i, modele = Mi_Mo_40_e_pta2)

df.VE <-aggregate(sc_Moy_NAO_JFM ~ Cohorte, data = table_morue_i, FUN = unique)
SR_obs_pred_Mo <- Fenv_effet_cohorte(tableau_sp_i =  table_morue_i, SR_obs_pred_sp = SR_obs_pred_Mo, df.VE = df.VE, nom_VE = "sc_Moy_NAO_JFM", modele = Mi_Mo_40_e_pta2, nom2 = "Pred_NAO", nom3 = "pred_Moink_NAO")

df.VE <-aggregate(sc_SST ~ Cohorte, data = table_morue_i, FUN = unique)
SR_obs_pred_Mo <- Fenv_effet_cohorte(tableau_sp_i =  table_morue_i, SR_obs_pred_sp = SR_obs_pred_Mo, df.VE = df.VE, nom_VE = "sc_SST", modele = Mi_Mo_40_e_pta2, nom2 = "Pred_SST", nom3 = "pred_Moink_SST")

df.VE <-aggregate(sc_moy_AMO_d ~ Cohorte, data = table_morue_i, FUN = unique)
SR_obs_pred_Mo <- Fenv_effet_cohorte(tableau_sp_i =  table_morue_i, SR_obs_pred_sp = SR_obs_pred_Mo, df.VE = df.VE, nom_VE = "sc_moy_AMO_d", modele = Mi_Mo_40_e_pta2, nom2 = "Pred_AMO_d",  nom3 = "pred_Moink_AMO_d")

df.VE <-aggregate(sc_moy_GSNW ~ Cohorte, data = table_morue_i, FUN = unique)
SR_obs_pred_Mo <- Fenv_effet_cohorte(tableau_sp_i =  table_morue_i, SR_obs_pred_sp = SR_obs_pred_Mo, df.VE = df.VE, nom_VE = "sc_moy_GSNW", modele = Mi_Mo_40_e_pta2, nom2 = "Pred_GSNW",  nom3 = "pred_Moink_GSNW")

Fenv_plot(table_sp_i = table_morue_i ,SR_obs_pred_sp = SR_obs_pred_Mo, modele = Mi_Mo_40_e_pta2)

i.logit(fixef(Mi_Mo_40_e_pta2)[[1]])#0.5074817
mean(table_morue_i$sexe_num_2)#0.4984572
mean(SR_obs_pred_Mo$SR_obs)#0.4947133
```

*Plie*
```{r, include=FALSE}
SR_obs_pred_P <- F_M_env(table_sp_i = table_plie_i, modele = Mi_P_40_e_pta23)

df.VE <-aggregate(sc_Moy_NAO_JFM ~ Cohorte, data = table_plie_i, FUN = unique)
SR_obs_pred_P <- Fenv_effet_cohorte(tableau_sp_i =  table_plie_i, SR_obs_pred_sp = SR_obs_pred_P, df.VE = df.VE, nom_VE = "sc_Moy_NAO_JFM", modele = Mi_P_40_e_pta23, nom2 = "Pred_NAO", nom3 = "pred_Pink_NAO")

df.VE <-aggregate(sc_SST ~ Cohorte, data = table_plie_i, FUN = unique)
SR_obs_pred_P <- Fenv_effet_cohorte(tableau_sp_i =  table_plie_i, SR_obs_pred_sp = SR_obs_pred_P, df.VE = df.VE, nom_VE = "sc_SST", modele = Mi_P_40_e_pta23, nom2 = "Pred_SST", nom3 = "pred_Pink_SST")

df.VE <-aggregate(sc_moy_AMO_d ~ Cohorte, data = table_plie_i, FUN = unique)
SR_obs_pred_P <- Fenv_effet_cohorte(tableau_sp_i =  table_plie_i, SR_obs_pred_sp = SR_obs_pred_P, df.VE = df.VE, nom_VE = "sc_moy_AMO_d", modele = Mi_P_40_e_pta23, nom2 = "Pred_AMO_d",  nom3 = "pred_Pink_AMO_d")

df.VE <-aggregate(sc_moy_GSNW ~ Cohorte, data = table_plie_i, FUN = unique)
SR_obs_pred_P <- Fenv_effet_cohorte(tableau_sp_i =  table_plie_i, SR_obs_pred_sp = SR_obs_pred_P, df.VE = df.VE, nom_VE = "sc_moy_GSNW", modele = Mi_P_40_e_pta23, nom2 = "Pred_GSNW",  nom3 = "pred_Pink_GSNW")

Fenv_plot(table_sp_i = table_plie_i,SR_obs_pred_sp = SR_obs_pred_P, modele = Mi_P_40_e_pta23)

i.logit(fixef(Mi_P_40_e_pta23)[[1]])#0.4644176
mean(table_plie_i$sexe_num_2)#0.4714161
mean(SR_obs_pred_P$SR_obs)#0.4614908
```

*Sprat*
```{r, include=FALSE}
SR_obs_pred_S <- F_M_env(table_sp_i = table_sprat_i, modele = Mi_S_40_e_pt2)

df.VE <-aggregate(sc_Moy_NAO_JFM ~ Cohorte, data = table_sprat_i, FUN = unique)
SR_obs_pred_S <- Fenv_effet_cohorte(tableau_sp_i =  table_sprat_i, SR_obs_pred_sp = SR_obs_pred_S, df.VE = df.VE, nom_VE = "sc_Moy_NAO_JFM", modele = Mi_S_40_e_pt2, nom2 = "Pred_NAO", nom3 = "pred_Sink_NAO")

df.VE <-aggregate(sc_SST ~ Cohorte, data = table_sprat_i, FUN = unique)
SR_obs_pred_S <- Fenv_effet_cohorte(tableau_sp_i =  table_sprat_i, SR_obs_pred_sp = SR_obs_pred_S, df.VE = df.VE, nom_VE = "sc_SST", modele = Mi_S_40_e_pt2, nom2 = "Pred_SST", nom3 = "pred_Sink_SST")

df.VE <-aggregate(sc_moy_AMO_d ~ Cohorte, data = table_sprat_i, FUN = unique)
SR_obs_pred_S <- Fenv_effet_cohorte(tableau_sp_i =  table_sprat_i, SR_obs_pred_sp = SR_obs_pred_S, df.VE = df.VE, nom_VE = "sc_moy_AMO_d", modele = Mi_S_40_e_pt2, nom2 = "Pred_AMO_d",  nom3 = "pred_Sink_AMO_d")

df.VE <-aggregate(sc_moy_GSNW ~ Cohorte, data = table_sprat_i, FUN = unique)
SR_obs_pred_S <- Fenv_effet_cohorte(tableau_sp_i =  table_sprat_i, SR_obs_pred_sp = SR_obs_pred_S, df.VE = df.VE, nom_VE = "sc_moy_GSNW", modele = Mi_S_40_e_pt2, nom2 = "Pred_GSNW",  nom3 = "pred_Sink_GSNW")

Fenv_plot(table_sp_i = table_sprat_i, SR_obs_pred_sp = SR_obs_pred_S, modele = Mi_S_40_e_pt2)

i.logit(fixef(Mi_S_40_e_pt2)[[1]])#
mean(table_sprat_i$sexe_num_2)#
mean(SR_obs_pred_S$SR_obs)#
```


*Tacaud*
```{r, include=FALSE}
SR_obs_pred_T <- F_M_env(table_sp_i = table_tacaud_i, modele = Mi_T_40_e_pta23)

df.VE <-aggregate(sc_Moy_NAO_JFM ~ Cohorte, data = table_tacaud_i, FUN = unique)
SR_obs_pred_T <- Fenv_effet_cohorte(tableau_sp_i =  table_tacaud_i, SR_obs_pred_sp = SR_obs_pred_T, df.VE = df.VE, nom_VE = "sc_Moy_NAO_JFM", modele = Mi_T_40_e_pta23, nom2 = "Pred_NAO", nom3 = "Pred_link_NAO")

df.VE <-aggregate(sc_SST ~ Cohorte, data = table_tacaud_i, FUN = unique)
SR_obs_pred_T <- Fenv_effet_cohorte(tableau_sp_i =  table_tacaud_i, SR_obs_pred_sp = SR_obs_pred_T, df.VE = df.VE, nom_VE = "sc_SST", modele = Mi_T_40_e_pta23, nom2 = "Pred_SST", nom3 = "Pred_link_SST")

df.VE <-aggregate(sc_moy_AMO_d ~ Cohorte, data = table_tacaud_i, FUN = unique)
SR_obs_pred_T <- Fenv_effet_cohorte(tableau_sp_i =  table_tacaud_i, SR_obs_pred_sp = SR_obs_pred_T, df.VE = df.VE, nom_VE = "sc_moy_AMO_d", modele = Mi_T_40_e_pta23, nom2 = "Pred_AMO_d",  nom3 = "Pred_link_AMO_d")

df.VE <-aggregate(sc_moy_GSNW ~ Cohorte, data = table_tacaud_i, FUN = unique)
SR_obs_pred_T <- Fenv_effet_cohorte(tableau_sp_i =  table_tacaud_i, SR_obs_pred_sp = SR_obs_pred_T, df.VE = df.VE, nom_VE = "sc_moy_GSNW", modele = Mi_T_40_e_pta23, nom2 = "Pred_GSNW",  nom3 = "Pred_link_GSNW")

Fenv_plot(table_sp_i = table_tacaud_i, SR_obs_pred_sp = SR_obs_pred_T, modele = Mi_T_40_e_pta23)

i.logit(fixef(Mi_T_40_e_pta23)[[1]])#0.3455071
mean(table_tacaud_i$sexe_num_2)#0.4034344
mean(SR_obs_pred_T$SR_obs)#0.4112148
```

*Limande-sole*
```{r, include=FALSE}
SR_obs_pred_LS <- F_M_env(table_sp_i = table_limande_sole_i, modele = Mi_LS_40_e)

df.VE <-aggregate(sc_Moy_NAO_JFM ~ Cohorte, data = table_limande_sole_i, FUN = unique)
SR_obs_pred_LS <- Fenv_effet_cohorte(tableau_sp_i =  table_limande_sole_i, SR_obs_pred_sp = SR_obs_pred_LS, df.VE = df.VE, nom_VE = "sc_Moy_NAO_JFM", modele = Mi_LS_40_e, nom2 = "Pred_NAO", nom3 = "pred_LSink_NAO")

df.VE <-aggregate(sc_SST ~ Cohorte, data = table_limande_sole_i, FUN = unique)
SR_obs_pred_LS <- Fenv_effet_cohorte(tableau_sp_i =  table_limande_sole_i, SR_obs_pred_sp = SR_obs_pred_LS, df.VE = df.VE, nom_VE = "sc_SST", modele = Mi_LS_40_e, nom2 = "Pred_SST", nom3 = "pred_LSink_SST")

df.VE <-aggregate(sc_moy_AMO_d ~ Cohorte, data = table_limande_sole_i, FUN = unique)
SR_obs_pred_LS <- Fenv_effet_cohorte(tableau_sp_i =  table_limande_sole_i, SR_obs_pred_sp = SR_obs_pred_LS, df.VE = df.VE, nom_VE = "sc_moy_AMO_d", modele = Mi_LS_40_e, nom2 = "Pred_AMO_d",  nom3 = "pred_LSink_AMO_d")

df.VE <-aggregate(sc_moy_GSNW ~ Cohorte, data = table_limande_sole_i, FUN = unique)
SR_obs_pred_LS <- Fenv_effet_cohorte(tableau_sp_i =  table_limande_sole_i, SR_obs_pred_sp = SR_obs_pred_LS, df.VE = df.VE, nom_VE = "sc_moy_GSNW", modele = Mi_LS_40_e, nom2 = "Pred_GSNW",  nom3 = "pred_LSink_GSNW")

Fenv_plot(table_sp_i = table_limande_sole_i,SR_obs_pred_sp = SR_obs_pred_LS, modele = Mi_LS_40_e)

i.logit(fixef(Mi_LS_40_e)[[1]])#0.5449973
mean(table_limande_sole_i$sexe_num_2)#0.5334139
mean(SR_obs_pred_LS$SR_obs)#0.5303321
```

```{r, include=FALSE}
#Rajouter des titres aux figures déjà crées 
p1 <-Fenv_plot(table_sp_i = table_hareng_i, SR_obs_pred_sp = SR_obs_pred_H, modele = Mi_H__40_e)[[1]] +
  ggtitle("hareng") +
 theme(plot.title = element_text(face = "bold", hjust = 0.5, size = 14), legend.position='none')


p2 <-Fenv_plot(table_sp_i = table_aiglefin_i, SR_obs_pred_sp = SR_obs_pred_A, modele = Mi_A_40_e)[[1]] +
  ggtitle("Aiglefin") +
 theme(plot.title = element_text(face = "bold", hjust = 0.5, size = 14), legend.position='none')

p3 <-Fenv_plot(table_sp_i = table_lieu_i, SR_obs_pred_sp = SR_obs_pred_L, modele = Mi_LS_40_e)[[1]]+
  ggtitle("Lieu noir") +
 theme(plot.title = element_text(face = "bold", hjust = 0.5, size = 14), legend.position='none')

p4 <-Fenv_plot(table_sp_i = table_limande_sole_i, SR_obs_pred_sp = SR_obs_pred_LS, modele = Mi_L_40_e)[[1]]+
  ggtitle("Limande-sole") +
 theme(plot.title = element_text(face = "bold", hjust = 0.5, size = 14), legend.position='none')

p5 <-Fenv_plot(table_sp_i = table_maquereau_i, SR_obs_pred_sp = SR_obs_pred_Ma, modele = Mi_Ma_40_e)[[1]]+
  ggtitle("Maquereau commun") +
 theme(plot.title = element_text(face = "bold", hjust = 0.5, size = 14), legend.position='none')

p6 <-Fenv_plot(table_sp_i = table_merlan_i, SR_obs_pred_sp = SR_obs_pred_Me, modele = Mi_Me_40_e_32)[[1]]+
  ggtitle("Merlan") +
 theme(plot.title = element_text(face = "bold", hjust = 0.5, size = 14), legend.position='none')

p7 <-Fenv_plot(table_sp_i = table_morue_i, SR_obs_pred_sp = SR_obs_pred_Mo, modele = Mi_Mo_40_e_pta2)[[1]] +
  ggtitle("Morue de l'Atlantique") +
 theme(plot.title = element_text(face = "bold", hjust = 0.5, size = 14), legend.position='none')

p8 <-Fenv_plot(table_sp_i = table_plie_i, SR_obs_pred_sp = SR_obs_pred_P, modele = Mi_P_40_e_pta23)[[1]] +
  ggtitle("Plie commune") +
 theme(plot.title = element_text(face = "bold", hjust = 0.5, size = 14), legend.position='none')

p9 <-Fenv_plot(table_sp_i = table_sprat_i, SR_obs_pred_sp = SR_obs_pred_S, modele = Mi_S_40_e_pt2)[[1]] +
  ggtitle("Sprat") +
 theme(plot.title = element_text(face = "bold", hjust = 0.5, size = 14), legend.position='none')

p10<- Fenv_plot(table_sp_i = table_tacaud_i, SR_obs_pred_sp = SR_obs_pred_T, modele = Mi_T_40_e_pta23)[[1]] +
  ggtitle("Tacaud norvégien") +
 theme(plot.title = element_text(face = "bold", hjust = 0.5, size = 14), legend.position='none')


P1 <- p1 + p2
P2 <- p3 + p4
P3 <- p5 + p6
P4 <- p7 + p8
P5 <- p9 + p10

plot_pred_M_env <- P1/P2/P3/P4/P5
#ggsave("plot_pred_M_env.png", plot = plot_pred_M_env, width = 13, height = 17)
```




```{r}
#Reconstruire une série temporelle du sexe ratio selon les variables d'âge et de taille
F_predict_TA <- function(table_sp_i, modele, SR_obs_pred_sp){
  tableau <- F_tableau_i2(tableau = table_sp_i)
  
  #au lieu de prendre leur valeur moyenne on les fixe à 0 pour avoir les effets de l'âge et de la taille
  tableau$sc_NAO <- 0
  tableau$sc_AMO_d <- 0
  tableau$sc_GSNW <- 0
  tableau$sc_SST <- 0
  predict_TA <- predict(modele, newdata = tableau, type = "response")
  table_sp_i <- cbind(table_sp_i, predict_TA)
  SR_pred_TA_sp <- aggregate(predict_TA ~ Species + Cohorte, data = table_sp_i, FUN = mean)
  SR_obs_pred_sp <- left_join(SR_obs_pred_sp, SR_pred_TA_sp, by = c("Species" , "Cohorte"))
  return(SR_obs_pred_sp)
}

SR_obs_pred_H <- F_predict_TA(table_sp_i = table_hareng_i, modele = Mi_H__40_e, SR_obs_pred_sp = SR_obs_pred_H)
SR_obs_pred_A <- F_predict_TA(table_sp_i = table_aiglefin_i, modele = Mi_A_40_e, SR_obs_pred_sp = SR_obs_pred_A)
SR_obs_pred_L <- F_predict_TA(table_sp_i = table_lieu_i, modele = Mi_L_40_e, SR_obs_pred_sp = SR_obs_pred_L)
SR_obs_pred_LS <- F_predict_TA(table_sp_i = table_limande_sole_i, modele = Mi_LS_40_e, SR_obs_pred_sp = SR_obs_pred_LS)
SR_obs_pred_Ma <- F_predict_TA(table_sp_i = table_maquereau_i, modele = Mi_Ma_40_e, SR_obs_pred_sp = SR_obs_pred_Ma)
SR_obs_pred_Me <- F_predict_TA(table_sp_i = table_merlan_i, modele = Mi_Me_40_e_32, SR_obs_pred_sp = SR_obs_pred_Me)
SR_obs_pred_Mo <- F_predict_TA(table_sp_i = table_morue_i, modele = Mi_Mo_40_e_pta2, SR_obs_pred_sp = SR_obs_pred_Mo)
SR_obs_pred_P <- F_predict_TA(table_sp_i = table_plie_i, modele = Mi_P_40_e_pta23, SR_obs_pred_sp = SR_obs_pred_P)
SR_obs_pred_S <- F_predict_TA(table_sp_i = table_sprat_i, modele = Mi_S_40_e_pt2, SR_obs_pred_sp = SR_obs_pred_S)
SR_obs_pred_T <- F_predict_TA(table_sp_i = table_tacaud_i, modele = Mi_T_40_e_pta23, SR_obs_pred_sp = SR_obs_pred_T)


#Test sur le Hareng pour voir si ça a marché

Legende <- c("Sexe ratio observé" = "#006666", "Prédiction du modèle" = "#CC9900", "Prédiction NAO" = "#333399" , "Prédiction SST"= "#339966", "Prédiction AMO" = "#990000", "Prédiction GSNW" = "#990099", "Predictions âge et taille" = "#339900") 

intercept_H <- mean(table_hareng_i$sexe_num_2)
    ggplot(SR_obs_pred_H, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "Sexe ratio observé"), alpha = 0.5) + 
    geom_line(aes(y = SR_obs, colour = "Sexe ratio observé"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Prédiction du modèle"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Prédiction du modèle"), size = 1) +
    geom_point(aes(y = Pred_SST, colour = "Prédiction SST"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_SST, colour = "Prédiction SST"), linetype = "twodash", size = 1, alpha = 0.80) +
    geom_point(aes(y = Pred_AMO_d, colour = "Prédiction AMO"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_AMO_d, colour = "Prédiction AMO"), linetype = "twodash", size = 1, alpha = 0.80) +
    geom_point(aes(y = predict_TA, colour = "Predictions âge et taille"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = predict_TA, colour = "Predictions âge et taille"), linetype = "twodash", size = 1, alpha = 0.80) +
    scale_color_manual(values = Legende, breaks = c("Sexe ratio observé", "Prédiction du modèle", "Prédiction SST", "Prédiction AMO", "Predictions âge et taille")) +
    geom_hline(aes(yintercept = intercept_H),  color = "#000000", alpha = 0.6) +  #geom_hline(aes(yintercept = i.logit(fixef(modele)[[1]]))) +
    labs( y = "sexe ratio", x = "Cohorte") +
    theme_light() +
    ggtitle("Hareng") +
    theme(plot.title = element_text(face = "bold", hjust = 0.5, size = 14), legend.position='none')

```



hareng, Aiglefin, Tacaud
M_i_A_40
M_i_H_40
M_i_L_40
M_i_Ma_40
M_i_Me_40_pta32
M_i_Mo_40_pta2
M_i_P_40_pta3
M_i_S_40_pt2
Mi_T_40_e_pta23
M_i_LS_40
```{r}
AIC(M_i_A_40)
AIC(M_i_H_40)
AIC(M_i_L_40)
AIC(M_i_LS_40)
AIC(M_i_Ma_40)
AIC(M_i_Me_40_pta32)
AIC(M_i_Mo_40_pta2)
AIC(M_i_P_40_pta3)
AIC(M_i_S_40_pt2)
AIC(M_i_T_40_pta23)

vif(M_i_A_40)
vif(M_i_H_40)
vif(M_i_L_40)
vif(M_i_LS_40)
vif(M_i_Ma_40)
vif(M_i_Me_40_pta32)
vif(M_i_Mo_40_pta2)
vif(M_i_P_40_pta3)
vif(M_i_S_40_pt2)
vif(M_i_T_40_pta23)

vif(M_i_A_40)
vif(M_i_H_40)
vif(M_i_L_40)
vif(M_i_LS_40)
vif(M_i_Ma_40)
vif(M_i_Me_40)
vif(M_i_Mo_40)
vif(M_i_P_40)
vif(M_i_S_40)
vif(M_i_T_40)

summary(M_i_A_40)
summary(M_i_H_40)
summary(M_i_L_40)
summary(M_i_LS_40)
summary(M_i_Ma_40)
summary(M_i_Me_40_pta32)
summary(M_i_Mo_40_pta2)
summary(M_i_P_40_pta3)
summary(M_i_S_40_pt2)
summary(M_i_T_40_pta23)

Anova(M_i_A_40)
Anova(M_i_H_40)
Anova(M_i_L_40)
Anova(M_i_LS_40)
Anova(M_i_Ma_40)
Anova(M_i_Me_40_pta32)
Anova(M_i_Mo_40_pta2)
Anova(M_i_P_40_pta3)
Anova(M_i_S_40_pt2)
Anova(M_i_T_40_pta23)

summary(M_i_A_nul)
summary(M_i_H_nul)
summary(M_i_L_nul)
summary(M_i_LS_nul)
summary(M_i_Ma_nul)
summary(M_i_Me_nul)
summary(M_i_Mo_nul)
summary(M_i_P_nul)
summary(M_i_S_nul)
summary(M_i_T_nul)

summary(Mi_A_40_e)
summary(Mi_H__40_e)
summary(Mi_L_40_e)
summary(Mi_LS_40_e)
summary(Mi_Ma_40_e)
summary(Mi_Me_40_e_32)
summary(Mi_Mo_40_e_pta2)
summary(Mi_P_40_e_pta3)
summary(Mi_S_40_e_pt2)
summary(Mi_T_40_e_pta23)

vif(Mi_A_40_e)
vif(Mi_H__40_e)
vif(Mi_L_40_e)
vif(Mi_LS_40_e)
vif(Mi_Ma_40_e)
vif(Mi_Me_40_e_32)
vif(Mi_Mo_40_e_pta2)
vif(Mi_P_40_e_pta3)
vif(Mi_S_40_e_pt2)
vif(Mi_T_40_e_pta23)


Anova(Mi_A_40_e)
Anova(Mi_H__40_e)
Anova(Mi_L_40_e)
Anova(Mi_LS_40_e)
Anova(Mi_Ma_40_e)
Anova(Mi_Me_40_e_32)
Anova(Mi_Mo_40_e_pta2)
Anova(Mi_P_40_e_pta3)
Anova(Mi_S_40_e_pt2)
Anova(Mi_T_40_e_pta23)

Anova(Mi_P_40_e_pta23)
summary(Mi_P_40_e_pta23)

Anova(M_i_P_40_pta23)
summary(M_i_P_40_pta23)

AIC(M_i_P_40_pta23)
Anova(M_i_P_40_pta23)

library(lmtest)
library(lme4)
library(car)
library(nlme)
library(dplyr)
library(tidyverse)

acf(random.effects(Mi_T_40_e_pta23))
acf(random.effects(Mi_T_40_e_pta23)$Area)
pacf(random.effects(Mi_T_40_e_pta23)$fcohorte)
pacf(random.effects(Mi_T_40_e_pta23)$Area)
acf(residuals(M_i_T_40_pta23))
acf(residuals(Mi_H__40_e))
acf(residuals(M_i_H_40))

acf(residuals(Mi_A_40_e))
acf(residuals(Mi_H__40_e))
acf(residuals(Mi_L_40_e))
acf(residuals(Mi_LS_40_e))
acf(residuals(Mi_Ma_40_e))
acf(residuals(Mi_Me_40_e_32))
acf(residuals(Mi_Mo_40_e_pta2))
acf(residuals(Mi_P_40_e_pta3))
acf(residuals(Mi_S_40_e_pt2))
acf(residuals(Mi_T_40_e_pta23))


acf(random.effects(M_i_T_40_pta23)$Area)
acf(random.effects(M_i_T_40_pta23)$fcohorte)
pacf(random.effects(M_i_T_40_pta23)$fcohorte)
pacf(random.effects(Mi_T_40_e_pta23)$Area)

acf(random.effects(M_i_L_40)$fcohorte)


acf(residuals(Mi_T_40_e_pta23))
```


*Figure rapport*
```{r}
Legende <- c("Sexe ratio observé" = "#006666", "Prédiction du modèle" = "#CC9900", "Prédiction NAO" = "#333399" , "Prédiction SST"= "#339966", "Prédiction AMO" = "#990000", "Prédiction GSNW" = "#990099", "Predictions âge et taille" = "#009900") ##339900
#006600
#669900
intercept_H <- mean(table_hareng_i$sexe_num_2)  
intercept_A <- mean(table_aiglefin_i$sexe_num_2) 
intercept_L <- mean(table_lieu_i$sexe_num_2) 
intercept_LS <- mean(table_limande_sole_i$sexe_num_2)
intercept_Ma <- mean(table_maquereau_i$sexe_num_2)
intercept_Me <- mean(table_merlan_i$sexe_num_2) 
intercept_Mo <- mean(table_morue_i$sexe_num_2)
intercept_P <- mean(table_plie_i$sexe_num_2)
intercept_S <- mean(table_sprat_i$sexe_num_2)   
intercept_T <- mean(table_tacaud_i$sexe_num_2)
 
  pH<- ggplot(SR_obs_pred_H, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "Sexe ratio observé"), alpha = 0.5) + 
    geom_line(aes(y = SR_obs, colour = "Sexe ratio observé"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Prédiction du modèle"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Prédiction du modèle"), size = 1) +
    geom_point(aes(y = Pred_SST, colour = "Prédiction SST"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_SST, colour = "Prédiction SST"), linetype = "twodash", size = 1, alpha = 0.80) +
    geom_point(aes(y = Pred_AMO_d, colour = "Prédiction AMO"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_AMO_d, colour = "Prédiction AMO"), linetype = "twodash", size = 1, alpha = 0.80) +
    geom_point(aes(y = predict_TA, colour = "Predictions âge et taille"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = predict_TA, colour = "Predictions âge et taille"), linetype = "twodash", size = 1, alpha = 0.80) +
    scale_color_manual(values = Legende, breaks = c("Sexe ratio observé", "Prédiction du modèle", "Prédiction SST", "Prédiction AMO", "Predictions âge et taille")) +
    geom_hline(aes(yintercept = intercept_H),  color = "#000000", alpha = 0.6) +  #geom_hline(aes(yintercept = i.logit(fixef(modele)[[1]]))) +
    labs( y = "sexe ratio", x = "Cohorte") +
    theme_light() +
    ggtitle("Hareng") +
    theme(plot.title = element_text(face = "bold", hjust = 0.5, size = 14), legend.position='none')

 pA<- ggplot(SR_obs_pred_A, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "Sexe ratio observé"), alpha = 0.5) + 
    geom_line(aes(y = SR_obs, colour = "Sexe ratio observé"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Prédiction du modèle"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Prédiction du modèle"), size = 1) +
    geom_point(aes(y = Pred_SST, colour = "Prédiction SST"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_SST, colour = "Prédiction SST"), linetype = "twodash", size = 1, alpha = 0.80) +
    geom_point(aes(y = Pred_AMO_d, colour = "Prédiction AMO"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_AMO_d, colour = "Prédiction AMO"), linetype = "twodash", size = 1, alpha = 0.80) +
    geom_point(aes(y = predict_TA, colour = "Predictions âge et taille"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = predict_TA, colour = "Predictions âge et taille"), linetype = "twodash", size = 1, alpha = 0.80) +
    scale_color_manual(values = Legende, breaks = c("Sexe ratio observé", "Prédiction du modèle", "Prédiction SST", "Prédiction AMO", "Predictions âge et taille")) +
    geom_hline(aes(yintercept = intercept_A),  color = "#000000", alpha = 0.6) +  #geom_hline(aes(yintercept = i.logit(fixef(modele)[[1]]))) +
    labs( y = "sexe ratio", x = "Cohorte") +
    theme_light() +
   ggtitle("Aiglefin") +
 theme(plot.title = element_text(face = "bold", hjust = 0.5, size = 14), legend.position='none')
 
  
 pL<- ggplot(SR_obs_pred_L, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "Sexe ratio observé"), alpha = 0.5) + 
    geom_line(aes(y = SR_obs, colour = "Sexe ratio observé"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Prédiction du modèle"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Prédiction du modèle"), size = 1) +
    geom_point(aes(y = predict_TA, colour = "Predictions âge et taille"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = predict_TA, colour = "Predictions âge et taille"), linetype = "twodash", size = 1, alpha = 0.80) +
    scale_color_manual(values = Legende, breaks = c("Sexe ratio observé", "Prédiction du modèle", "Predictions âge et taille")) +
    geom_hline(aes(yintercept = intercept_L),  color = "#000000", alpha = 0.6) +  #geom_hline(aes(yintercept = i.logit(fixef(modele)[[1]]))) +
    labs( y = "sexe ratio", x = "Cohorte") +
    theme_light() +
   ggtitle("Lieu noir") +
 theme(plot.title = element_text(face = "bold", hjust = 0.5, size = 14), legend.position='none')
 
 
  pLS<- ggplot(SR_obs_pred_LS, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "Sexe ratio observé"), alpha = 0.5) + 
    geom_line(aes(y = SR_obs, colour = "Sexe ratio observé"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Prédiction du modèle"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Prédiction du modèle"), size = 1) +
    geom_point(aes(y = Pred_NAO, colour = "Prédiction NAO"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_NAO, colour = "Prédiction NAO"), linetype = "twodash", size = 1, alpha = 0.80) +
    geom_point(aes(y = Pred_GSNW, colour = "Prédiction GSNW"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_GSNW, colour = "Prédiction GSNW"), linetype = "twodash", size = 1, alpha = 0.80) +
    geom_point(aes(y = predict_TA, colour = "Predictions âge et taille"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = predict_TA, colour = "Predictions âge et taille"), linetype = "twodash", size = 1, alpha = 0.80) +
    scale_color_manual(values = Legende, breaks = c("Sexe ratio observé", "Prédiction du modèle",  "Prédiction GSNW", "Prédiction NAO", "Predictions âge et taille")) +
    geom_hline(aes(yintercept = intercept_LS),  color = "#000000", alpha = 0.6) +  #geom_hline(aes(yintercept = i.logit(fixef(modele)[[1]]))) +
    labs( y = "sexe ratio", x = "Cohorte") +
    theme_light() +
    ggtitle("Limande-sole") +
 theme(plot.title = element_text(face = "bold", hjust = 0.5, size = 14), legend.position='none')
  
  
   
   pMa<- ggplot(SR_obs_pred_Ma, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "Sexe ratio observé"), alpha = 0.5) + 
    geom_line(aes(y = SR_obs, colour = "Sexe ratio observé"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Prédiction du modèle"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Prédiction du modèle"), size = 1) +
    geom_point(aes(y = Pred_NAO, colour = "Prédiction NAO"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_NAO, colour = "Prédiction NAO"), linetype = "twodash", size = 1, alpha = 0.80) +
    geom_point(aes(y = predict_TA, colour = "Predictions âge et taille"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = predict_TA, colour = "Predictions âge et taille"), linetype = "twodash", size = 1, alpha = 0.80) +
    scale_color_manual(values = Legende, breaks = c("Sexe ratio observé", "Prédiction du modèle", "Prédiction NAO", "Predictions âge et taille")) +
    geom_hline(aes(yintercept = intercept_Ma),  color = "#000000", alpha = 0.6) +  #geom_hline(aes(yintercept = i.logit(fixef(modele)[[1]]))) +
    labs( y = "sexe ratio", x = "Cohorte") +
    theme_light() +
     ggtitle("Maquereau commun") +
 theme(plot.title = element_text(face = "bold", hjust = 0.5, size = 14), legend.position='none')
   
  
   
    pMe<- ggplot(SR_obs_pred_Me, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "Sexe ratio observé"), alpha = 0.5) + 
    geom_line(aes(y = SR_obs, colour = "Sexe ratio observé"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Prédiction du modèle"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Prédiction du modèle"), size = 1) +
    geom_point(aes(y = Pred_NAO, colour = "Prédiction NAO"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_NAO, colour = "Prédiction NAO"), linetype = "twodash", size = 1,alpha = 0.80) +
    geom_point(aes(y = Pred_SST, colour = "Prédiction SST"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_SST, colour = "Prédiction SST"), linetype = "twodash", size = 1, alpha = 0.80) +
    geom_point(aes(y = Pred_AMO_d, colour = "Prédiction AMO"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_AMO_d, colour = "Prédiction AMO"), linetype = "twodash", size = 1, alpha = 0.80) +
    geom_point(aes(y = Pred_GSNW, colour = "Prédiction GSNW"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_GSNW, colour = "Prédiction GSNW"), linetype = "twodash", size = 1, alpha = 0.80) +
    geom_point(aes(y = predict_TA, colour = "Predictions âge et taille"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = predict_TA, colour = "Predictions âge et taille"), linetype = "twodash", size = 1, alpha = 0.80) +
    scale_color_manual(values = Legende, breaks = c("Sexe ratio observé", "Prédiction du modèle", "Prédiction SST", "Prédiction AMO", "Prédiction GSNW", "Prédiction NAO", "Predictions âge et taille")) +
    geom_hline(aes(yintercept = intercept_Me),  color = "#000000", alpha = 0.6) +  #geom_hline(aes(yintercept = i.logit(fixef(modele)[[1]]))) +
    labs( y = "sexe ratio", x = "Cohorte") +
    theme_light() +
      ggtitle("Merlan") +
    theme(plot.title = element_text(face = "bold", hjust = 0.5, size = 14), legend.position='none')
     
    
    pMo<- ggplot(SR_obs_pred_Mo, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "Sexe ratio observé"), alpha = 0.5) + 
    geom_line(aes(y = SR_obs, colour = "Sexe ratio observé"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Prédiction du modèle"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Prédiction du modèle"), size = 1) +
    geom_point(aes(y = predict_TA, colour = "Predictions âge et taille"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = predict_TA, colour = "Predictions âge et taille"), linetype = "twodash", size = 1, alpha = 0.80) +
    scale_color_manual(values = Legende, breaks = c("Sexe ratio observé", "Prédiction du modèle", "Predictions âge et taille")) +
    geom_hline(aes(yintercept = intercept_Mo),  color = "#000000", alpha = 0.6) +  #geom_hline(aes(yintercept = i.logit(fixef(modele)[[1]]))) +
    labs( y = "sexe ratio", x = "Cohorte") +
    theme_light() +
      ggtitle("Morue de l'Atlantique") +
    theme(plot.title = element_text(face = "bold", hjust = 0.5, size = 14), legend.position='none')
     
    
    pP<- ggplot(SR_obs_pred_P, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "Sexe ratio observé"), alpha = 0.5) + 
    geom_line(aes(y = SR_obs, colour = "Sexe ratio observé"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Prédiction du modèle"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Prédiction du modèle"), size = 1) +
    geom_point(aes(y = Pred_AMO_d, colour = "Prédiction AMO"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_AMO_d, colour = "Prédiction AMO"), linetype = "twodash", size = 1, alpha = 0.80) +
    geom_point(aes(y = predict_TA, colour = "Predictions âge et taille"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = predict_TA, colour = "Predictions âge et taille"), linetype = "twodash", size = 1, alpha = 0.80) +
    scale_color_manual(values = Legende, breaks = c("Sexe ratio observé", "Prédiction du modèle", "Prédiction AMO", "Predictions âge et taille")) +
    geom_hline(aes(yintercept = intercept_P),  color = "#000000", alpha = 0.6) +  #geom_hline(aes(yintercept = i.logit(fixef(modele)[[1]]))) +
    labs( y = "sexe ratio", x = "Cohorte") +
    theme_light() +    
      ggtitle("Plie commune") +
 theme(plot.title = element_text(face = "bold", hjust = 0.5, size = 14), legend.position='none')
     
    
      pS<- ggplot(SR_obs_pred_S, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "Sexe ratio observé"), alpha = 0.5) + 
    geom_line(aes(y = SR_obs, colour = "Sexe ratio observé"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Prédiction du modèle"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Prédiction du modèle"), size = 1) +
    geom_point(aes(y = Pred_AMO_d, colour = "Prédiction AMO"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_AMO_d, colour = "Prédiction AMO"), linetype = "twodash", size = 1, alpha = 0.80) +
    geom_point(aes(y = Pred_GSNW, colour = "Prédiction GSNW"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_GSNW, colour = "Prédiction GSNW"), linetype = "twodash", size = 1, alpha = 0.80) +
    geom_point(aes(y = predict_TA, colour = "Predictions âge et taille"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = predict_TA, colour = "Predictions âge et taille"), linetype = "twodash", size = 1, alpha = 0.80) +
    scale_color_manual(values = Legende, breaks = c("Sexe ratio observé", "Prédiction du modèle", "Prédiction GSNW", "Prédiction AMO", "Predictions âge et taille")) +
    geom_hline(aes(yintercept = intercept_S),  color = "#000000", alpha = 0.6) +  #geom_hline(aes(yintercept = i.logit(fixef(modele)[[1]]))) +
    labs( y = "sexe ratio", x = "Cohorte") +
    theme_light() +
    ggtitle("Sprat") +
 theme(plot.title = element_text(face = "bold", hjust = 0.5, size = 14), legend.position='none')
      
   
       pT<- ggplot(SR_obs_pred_T, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "Sexe ratio observé"), alpha = 0.5, color = "#006666") + 
    geom_line(aes(y = SR_obs, colour = "Sexe ratio observé"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Prédiction du modèle"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Prédiction du modèle"), size = 1) +
    geom_point(aes(y = Pred_NAO, colour = "Prédiction NAO"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_NAO, colour = "Prédiction NAO"), linetype = "twodash", size = 1, alpha = 0.80) +
    geom_point(aes(y = Pred_SST, colour = "Prédiction SST"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_SST, colour = "Prédiction SST"), linetype = "twodash", size = 1, alpha = 0.80) +
    geom_point(aes(y = Pred_AMO_d, colour = "Prédiction AMO"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_AMO_d, colour = "Prédiction AMO"), linetype = "twodash", size = 1, alpha = 0.80) +
    geom_point(aes(y = Pred_GSNW, colour = "Prédiction GSNW"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_GSNW, colour = "Prédiction GSNW"), linetype = "twodash", size = 1, alpha = 0.80) +
   geom_point(aes(y = predict_TA, colour = "Predictions âge et taille"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = predict_TA, colour = "Predictions âge et taille"), linetype = "twodash", size = 1, alpha = 0.80) +
    scale_color_manual(values = Legende, breaks = c("Sexe ratio observé", "Prédiction du modèle", "Prédiction SST", "Prédiction AMO", "Predictions âge et taille", "Prédiction GSNW", "Prédiction NAO")) +
    geom_hline(aes(yintercept = intercept_T),  color = "#000000", alpha = 0.6) +  #geom_hline(aes(yintercept = i.logit(fixef(modele)[[1]]))) +
    labs( y = "sexe ratio", x = "Cohorte") +
    theme_light() +
    ggtitle("Tacaud norvégien") +
    theme(plot.title = element_text(face = "bold", hjust = 0.5, size = 16), legend.position='none')
       
P1<-pH + pA 
P2 <- pL + pLS
P3<-  pMa + pMe
P4 <- pMo + pP
P5 <- pS + pT

plot_eff_VE_sign <- P1/P2/P3/P4/P5

ps1 <- pH + pL + pMe
ps2 <-pP + pS + pT
plot_soutenance_VE <- ps1/ps2

#ggsave("plot_eff_VE_sign.png", plot = plot_eff_VE_sign, width = 16, height = 18)
#ggsave("plot_soutenance_eff_VE_sign.png", plot = plot_soutenance_VE, width = 22, height = 7)
```

Pour le Merlan et le tacaud, j'ai fais en plusieurs figures pour des raisons de lisibilité
```{r}
    pMe1<- ggplot(SR_obs_pred_Me, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "Sexe ratio observé"), alpha = 0.5) + 
    geom_line(aes(y = SR_obs, colour = "Sexe ratio observé"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Prédiction du modèle"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Prédiction du modèle"), size = 1) +
    geom_point(aes(y = Pred_SST, colour = "Prédiction SST"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_SST, colour = "Prédiction SST"), linetype = "twodash", size = 1, alpha = 0.80) +
    geom_point(aes(y = Pred_AMO_d, colour = "Prédiction AMO"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_AMO_d, colour = "Prédiction AMO"), linetype = "twodash", size = 1, alpha = 0.80) +
    geom_point(aes(y = predict_TA, colour = "Predictions âge et taille"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = predict_TA, colour = "Predictions âge et taille"), linetype = "twodash", size = 1, alpha = 0.80) +
    scale_color_manual(values = Legende, breaks = c("Sexe ratio observé", "Prédiction du modèle", "Prédiction SST", "Prédiction AMO",  "Predictions âge et taille")) +
    geom_hline(aes(yintercept = intercept_Me),  color = "#000000", alpha = 0.6) +  #geom_hline(aes(yintercept = i.logit(fixef(modele)[[1]]))) +
    labs( y = "sexe ratio", x = "Cohorte") +
    theme_light() +
      #ggtitle("Merlan") +
    theme(legend.position='none')
    
 
    pMe2<- ggplot(SR_obs_pred_Me, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "Sexe ratio observé"), alpha = 0.5) + 
    geom_line(aes(y = SR_obs, colour = "Sexe ratio observé"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Prédiction du modèle"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Prédiction du modèle"), size = 1) +
    geom_point(aes(y = Pred_NAO, colour = "Prédiction NAO"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_NAO, colour = "Prédiction NAO"), linetype = "twodash", size = 1, alpha = 0.80) +
    geom_point(aes(y = Pred_GSNW, colour = "Prédiction GSNW"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_GSNW, colour = "Prédiction GSNW"), linetype = "twodash", size = 1, alpha = 0.80) +
    geom_point(aes(y = predict_TA, colour = "Predictions âge et taille"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = predict_TA, colour = "Predictions âge et taille"), linetype = "twodash", size = 1, alpha = 0.80) +
    scale_color_manual(values = Legende, breaks = c("Sexe ratio observé", "Prédiction du modèle", "Prédiction NAO", "Prédiction GSNW",  "Predictions âge et taille")) +
    geom_hline(aes(yintercept = intercept_Me),  color = "#000000", alpha = 0.6) +  #geom_hline(aes(yintercept = i.logit(fixef(modele)[[1]]))) +
    labs( y = "sexe ratio", x = "Cohorte") +
    theme_light() +
      #ggtitle("Merlan") +
    theme(legend.position='none')
    
       pT1<- ggplot(SR_obs_pred_T, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "Sexe ratio observé"), alpha = 0.5, color = "#006666") + 
    geom_line(aes(y = SR_obs, colour = "Sexe ratio observé"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Prédiction du modèle"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Prédiction du modèle"), size = 1) +
    geom_point(aes(y = Pred_SST, colour = "Prédiction SST"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_SST, colour = "Prédiction SST"), linetype = "twodash", size = 1, alpha = 0.80) +
    geom_point(aes(y = Pred_AMO_d, colour = "Prédiction AMO"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_AMO_d, colour = "Prédiction AMO"), linetype = "twodash", size = 1, alpha = 0.80) +
    geom_point(aes(y = predict_TA, colour = "Predictions âge et taille"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = predict_TA, colour = "Predictions âge et taille"), linetype = "twodash", size = 1, alpha = 0.80) +
    scale_color_manual(values = Legende, breaks = c("Sexe ratio observé", "Prédiction du modèle", "Prédiction SST", "Prédiction AMO", "Predictions âge et taille")) +
    geom_hline(aes(yintercept = intercept_T),  color = "#000000", alpha = 0.6) +  #geom_hline(aes(yintercept = i.logit(fixef(modele)[[1]]))) +
    labs( y = "sexe ratio", x = "Cohorte") +
    theme_light() +
    #ggtitle("Tacaud norvégien") +
    theme(legend.position='none')
       
       pT2<- ggplot(SR_obs_pred_T, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "Sexe ratio observé"), alpha = 0.5, color = "#006666") + 
    geom_line(aes(y = SR_obs, colour = "Sexe ratio observé"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Prédiction du modèle"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Prédiction du modèle"), size = 1) +
    geom_point(aes(y = Pred_NAO, colour = "Prédiction NAO"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_NAO, colour = "Prédiction NAO"), linetype = "twodash", size = 1, alpha = 0.80) +
    geom_point(aes(y = Pred_GSNW, colour = "Prédiction GSNW"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_GSNW, colour = "Prédiction GSNW"), linetype = "twodash", size = 1, alpha = 0.80) +
    geom_point(aes(y = predict_TA, colour = "Predictions âge et taille"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = predict_TA, colour = "Predictions âge et taille"), linetype = "twodash", size = 1, alpha = 0.80) +
    scale_color_manual(values = Legende, breaks = c("Sexe ratio observé", "Prédiction du modèle", "Prédiction NAO", "Prédiction GSNW", "Predictions âge et taille")) +
    geom_hline(aes(yintercept = intercept_T),  color = "#000000", alpha = 0.6) +  #geom_hline(aes(yintercept = i.logit(fixef(modele)[[1]]))) +
    labs( y = "sexe ratio", x = "Cohorte") +
    theme_light() +
    #ggtitle("Tacaud norvégien") +
    theme(legend.position='none')
       
Me <- pMe1 + pMe2 + plot_annotation(title = "Merlan", theme = theme( plot.title = element_text(face = "bold", hjust = 0.5,size = 16)))
Me <- Me + plot_layout(tag_level = 'new') + plot_annotation(tag_levels = c('A','1'))

  
Ta <- pT1 + pT2 + plot_annotation(title = "Tacaud", theme = theme(plot.title = element_text(face = "bold", hjust = 0.5,size = 16)))
# tag_levels = c('A', '1'),
# tag_levels = c('A','1'),
#tag_levels = c('A','1')
#plot.tag = element_text(size = 8)
#plot.tag = element_text(size = 8)

annexe_T_Me <- Me/Ta #+ plot_annotation(tag_levels = c('A')) & theme(plot.tag = element_text(size = 8))
annexe_T_Me[[1]] <- annexe_T_Me[[1]] + plot_layout(tag_level = 'new')
annexe_T_Me <- annexe_T_Me + plot_annotation(tag_levels = c('A', '1'))
annexe_T_Me[[2]] <-annexe_T_Me[[2]] + plot_layout(tag_level = 'new') + plot_annotation(tag_levels = c('B', '1'))
annexe_T_Me <- plot_annotation(tag_levels = list(c('#', '&'), '1'))
#on peut annoter normalement mais ça n'a pas vraiment marché donc j'ai annoté mes figures sur inskape

#ggsave("annexe_Me.png", plot = Me, width = 16, height = 5)
#ggsave("annexe_Ta.png", plot = Ta, width = 16, height = 5)
```


*Figure Benjamin*
```{r}
 pH<- ggplot(SR_obs_pred_H, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "Sexe ratio observé"), alpha = 0.5) + 
    geom_line(aes(y = SR_obs, colour = "Sexe ratio observé"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Prédiction du modèle"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Prédiction du modèle"), size = 1) +
    geom_point(aes(y = Pred_SST, colour = "Prédiction SST"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_SST, colour = "Prédiction SST"), linetype = "twodash", size = 1, alpha = 0.80) +
    #geom_point(aes(y = Pred_AMO_d, colour = "Prédiction AMO"), alpha = 0.5, shape = 5) + 
    #geom_line(aes(y = Pred_AMO_d, colour = "Prédiction AMO"), linetype = "twodash", size = 1, alpha = 0.80) +
    #geom_point(aes(y = predict_TA, colour = "Predictions âge et taille"), alpha = 0.5, shape = 5) + 
    #geom_line(aes(y = predict_TA, colour = "Predictions âge et taille"), linetype = "twodash", size = 1, alpha = 0.80) +
    scale_color_manual(values = Legende, breaks = c("Sexe ratio observé", "Prédiction du modèle", "Prédiction SST", "Prédiction AMO", "Predictions âge et taille")) +
    geom_hline(aes(yintercept = intercept_H),  color = "#000000", alpha = 0.6) +  #geom_hline(aes(yintercept = i.logit(fixef(modele)[[1]]))) +
    labs( y = "sexe ratio", x = "Cohorte") +
    theme_light() +
    ggtitle("Hareng") +
    theme(plot.title = element_text(face = "bold", hjust = 0.5, size = 14), legend.position='none')

 pA<- ggplot(SR_obs_pred_A, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "Sexe ratio observé"), alpha = 0.5) + 
    geom_line(aes(y = SR_obs, colour = "Sexe ratio observé"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Prédiction du modèle"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Prédiction du modèle"), size = 1) +
    geom_point(aes(y = Pred_SST, colour = "Prédiction SST"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_SST, colour = "Prédiction SST"), linetype = "twodash", size = 1, alpha = 0.80) +
    #geom_point(aes(y = Pred_AMO_d, colour = "Prédiction AMO"), alpha = 0.5, shape = 5) + 
    #geom_line(aes(y = Pred_AMO_d, colour = "Prédiction AMO"), linetype = "twodash", size = 1, alpha = 0.80) +
    #geom_point(aes(y = predict_TA, colour = "Predictions âge et taille"), alpha = 0.5, shape = 5) + 
    #geom_line(aes(y = predict_TA, colour = "Predictions âge et taille"), linetype = "twodash", size = 1, alpha = 0.80) +
    scale_color_manual(values = Legende, breaks = c("Sexe ratio observé", "Prédiction du modèle", "Prédiction SST", "Prédiction AMO", "Predictions âge et taille")) +
    geom_hline(aes(yintercept = intercept_A),  color = "#000000", alpha = 0.6) +  #geom_hline(aes(yintercept = i.logit(fixef(modele)[[1]]))) +
    labs( y = "sexe ratio", x = "Cohorte") +
    theme_light() +
   ggtitle("Aiglefin") +
 theme(plot.title = element_text(face = "bold", hjust = 0.5, size = 14), legend.position='none')
 
  
 pL<- ggplot(SR_obs_pred_L, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "Sexe ratio observé"), alpha = 0.5) + 
    geom_line(aes(y = SR_obs, colour = "Sexe ratio observé"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Prédiction du modèle"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Prédiction du modèle"), size = 1) + 
    geom_point(aes(y = Pred_SST, colour = "Prédiction SST"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_SST, colour = "Prédiction SST"), linetype = "twodash", size = 1, alpha = 0.80) +
    #geom_point(aes(y = predict_TA, colour = "Predictions âge et taille"), alpha = 0.5, shape = 5) + 
    #geom_line(aes(y = predict_TA, colour = "Predictions âge et taille"), linetype = "twodash", size = 1, alpha = 0.80) +
    scale_color_manual(values = Legende, breaks = c("Sexe ratio observé", "Prédiction du modèle", "Prédiction SST", "Predictions âge et taille")) +
    geom_hline(aes(yintercept = intercept_L),  color = "#000000", alpha = 0.6) +  #geom_hline(aes(yintercept = i.logit(fixef(modele)[[1]]))) +
    labs( y = "sexe ratio", x = "Cohorte") +
    theme_light() +
   ggtitle("Lieu noir") +
 theme(plot.title = element_text(face = "bold", hjust = 0.5, size = 14), legend.position='none')
 
 
  pLS<- ggplot(SR_obs_pred_LS, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "Sexe ratio observé"), alpha = 0.5) + 
    geom_line(aes(y = SR_obs, colour = "Sexe ratio observé"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Prédiction du modèle"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Prédiction du modèle"), size = 1) + 
    geom_point(aes(y = Pred_SST, colour = "Prédiction SST"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_SST, colour = "Prédiction SST"), linetype = "twodash", size = 1, alpha = 0.80) +
   # geom_point(aes(y = Pred_NAO, colour = "Prédiction NAO"), alpha = 0.5, shape = 5) + 
  #  geom_line(aes(y = Pred_NAO, colour = "Prédiction NAO"), linetype = "twodash", size = 1, alpha = 0.80) +
  #  geom_point(aes(y = Pred_GSNW, colour = "Prédiction GSNW"), alpha = 0.5, shape = 5) + 
  #  geom_line(aes(y = Pred_GSNW, colour = "Prédiction GSNW"), linetype = "twodash", size = 1, alpha = 0.80) +
  #  geom_point(aes(y = predict_TA, colour = "Predictions âge et taille"), alpha = 0.5, shape = 5) + 
  #  geom_line(aes(y = predict_TA, colour = "Predictions âge et taille"), linetype = "twodash", size = 1, alpha = 0.80) +
    scale_color_manual(values = Legende, breaks = c("Sexe ratio observé", "Prédiction SST", "Prédiction du modèle",  "Prédiction GSNW", "Prédiction NAO", "Predictions âge et taille")) +
    geom_hline(aes(yintercept = intercept_LS),  color = "#000000", alpha = 0.6) +  #geom_hline(aes(yintercept = i.logit(fixef(modele)[[1]]))) +
    labs( y = "sexe ratio", x = "Cohorte") +
    theme_light() +
    ggtitle("Limande-sole") +
 theme(plot.title = element_text(face = "bold", hjust = 0.5, size = 14), legend.position='none')
  
  
   
   pMa<- ggplot(SR_obs_pred_Ma, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "Sexe ratio observé"), alpha = 0.5) + 
    geom_line(aes(y = SR_obs, colour = "Sexe ratio observé"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Prédiction du modèle"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Prédiction du modèle"), size = 1) + 
    geom_point(aes(y = Pred_SST, colour = "Prédiction SST"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_SST, colour = "Prédiction SST"), linetype = "twodash", size = 1, alpha = 0.80) +
   # geom_point(aes(y = Pred_NAO, colour = "Prédiction NAO"), alpha = 0.5, shape = 5) + 
  #  geom_line(aes(y = Pred_NAO, colour = "Prédiction NAO"), linetype = "twodash", size = 1, alpha = 0.80) +
  #  geom_point(aes(y = predict_TA, colour = "Predictions âge et taille"), alpha = 0.5, shape = 5) + 
  #  geom_line(aes(y = predict_TA, colour = "Predictions âge et taille"), linetype = "twodash", size = 1, alpha = 0.80) +
    scale_color_manual(values = Legende, breaks = c("Sexe ratio observé", "Prédiction SST", "Prédiction du modèle", "Prédiction NAO", "Predictions âge et taille")) +
    geom_hline(aes(yintercept = intercept_Ma),  color = "#000000", alpha = 0.6) +  #geom_hline(aes(yintercept = i.logit(fixef(modele)[[1]]))) +
    labs( y = "sexe ratio", x = "Cohorte") +
    theme_light() +
     ggtitle("Maquereau commun") +
 theme(plot.title = element_text(face = "bold", hjust = 0.5, size = 14), legend.position='none')
   
  
   
    pMe<- ggplot(SR_obs_pred_Me, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "Sexe ratio observé"), alpha = 0.5) + 
    geom_line(aes(y = SR_obs, colour = "Sexe ratio observé"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Prédiction du modèle"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Prédiction du modèle"), size = 1) +
   # geom_point(aes(y = Pred_NAO, colour = "Prédiction NAO"), alpha = 0.5, shape = 5) + 
  #  geom_line(aes(y = Pred_NAO, colour = "Prédiction NAO"), linetype = "twodash", size = 1,alpha = 0.80) +
    geom_point(aes(y = Pred_SST, colour = "Prédiction SST"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_SST, colour = "Prédiction SST"), linetype = "twodash", size = 1, alpha = 0.80) +
   # geom_point(aes(y = Pred_AMO_d, colour = "Prédiction AMO"), alpha = 0.5, shape = 5) + 
  #  geom_line(aes(y = Pred_AMO_d, colour = "Prédiction AMO"), linetype = "twodash", size = 1, alpha = 0.80) +
  #  geom_point(aes(y = Pred_GSNW, colour = "Prédiction GSNW"), alpha = 0.5, shape = 5) + 
  #  geom_line(aes(y = Pred_GSNW, colour = "Prédiction GSNW"), linetype = "twodash", size = 1, alpha = 0.80) +
  #  geom_point(aes(y = predict_TA, colour = "Predictions âge et taille"), alpha = 0.5, shape = 5) + 
  #  geom_line(aes(y = predict_TA, colour = "Predictions âge et taille"), linetype = "twodash", size = 1, alpha = 0.80) +
    scale_color_manual(values = Legende, breaks = c("Sexe ratio observé", "Prédiction SST", "Prédiction du modèle", "Prédiction SST", "Prédiction AMO", "Prédiction GSNW", "Prédiction NAO", "Predictions âge et taille")) +
    geom_hline(aes(yintercept = intercept_Me),  color = "#000000", alpha = 0.6) +  #geom_hline(aes(yintercept = i.logit(fixef(modele)[[1]]))) +
    labs( y = "sexe ratio", x = "Cohorte") +
    theme_light() +
      ggtitle("Merlan") +
    theme(plot.title = element_text(face = "bold", hjust = 0.5, size = 14), legend.position='none')
     
    
    pMo<- ggplot(SR_obs_pred_Mo, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "Sexe ratio observé"), alpha = 0.5) + 
    geom_line(aes(y = SR_obs, colour = "Sexe ratio observé"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Prédiction du modèle"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Prédiction du modèle"), size = 1) + 
    geom_point(aes(y = Pred_SST, colour = "Prédiction SST"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_SST, colour = "Prédiction SST"), linetype = "twodash", size = 1, alpha = 0.80) +
   # geom_point(aes(y = predict_TA, colour = "Predictions âge et taille"), alpha = 0.5, shape = 5) + 
   # geom_line(aes(y = predict_TA, colour = "Predictions âge et taille"), linetype = "twodash", size = 1, alpha = 0.80) +
    scale_color_manual(values = Legende, breaks = c("Sexe ratio observé", "Prédiction SST", "Prédiction du modèle", "Predictions âge et taille")) +
    geom_hline(aes(yintercept = intercept_Mo),  color = "#000000", alpha = 0.6) +  #geom_hline(aes(yintercept = i.logit(fixef(modele)[[1]]))) +
    labs( y = "sexe ratio", x = "Cohorte") +
    theme_light() +
      ggtitle("Morue de l'Atlantique") +
    theme(plot.title = element_text(face = "bold", hjust = 0.5, size = 14), legend.position='none')
     
    
    pP<- ggplot(SR_obs_pred_P, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "Sexe ratio observé"), alpha = 0.5) + 
    geom_line(aes(y = SR_obs, colour = "Sexe ratio observé"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Prédiction du modèle"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Prédiction du modèle"), size = 1) + 
    geom_point(aes(y = Pred_SST, colour = "Prédiction SST"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_SST, colour = "Prédiction SST"), linetype = "twodash", size = 1, alpha = 0.80) +
   # geom_point(aes(y = Pred_AMO_d, colour = "Prédiction AMO"), alpha = 0.5, shape = 5) + 
  #  geom_line(aes(y = Pred_AMO_d, colour = "Prédiction AMO"), linetype = "twodash", size = 1, alpha = 0.80) +
   # geom_point(aes(y = predict_TA, colour = "Predictions âge et taille"), alpha = 0.5, shape = 5) + 
  #  geom_line(aes(y = predict_TA, colour = "Predictions âge et taille"), linetype = "twodash", size = 1, alpha = 0.80) +
    scale_color_manual(values = Legende, breaks = c("Sexe ratio observé", "Prédiction du modèle", "Prédiction AMO", "Predictions âge et taille")) +
    geom_hline(aes(yintercept = intercept_P),  color = "#000000", alpha = 0.6) +  #geom_hline(aes(yintercept = i.logit(fixef(modele)[[1]]))) +
    labs( y = "sexe ratio", x = "Cohorte") +
    theme_light() +    
      ggtitle("Plie commune") +
 theme(plot.title = element_text(face = "bold", hjust = 0.5, size = 14), legend.position='none')
     
    
      pS<- ggplot(SR_obs_pred_S, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "Sexe ratio observé"), alpha = 0.5) + 
    geom_line(aes(y = SR_obs, colour = "Sexe ratio observé"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Prédiction du modèle"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Prédiction du modèle"), size = 1) + 
    geom_point(aes(y = Pred_SST, colour = "Prédiction SST"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_SST, colour = "Prédiction SST"), linetype = "twodash", size = 1, alpha = 0.80) +
  #  geom_point(aes(y = Pred_AMO_d, colour = "Prédiction AMO"), alpha = 0.5, shape = 5) + 
  #  geom_line(aes(y = Pred_AMO_d, colour = "Prédiction AMO"), linetype = "twodash", size = 1, alpha = 0.80) +
  #  geom_point(aes(y = Pred_GSNW, colour = "Prédiction GSNW"), alpha = 0.5, shape = 5) + 
  #  geom_line(aes(y = Pred_GSNW, colour = "Prédiction GSNW"), linetype = "twodash", size = 1, alpha = 0.80) +
  #  geom_point(aes(y = predict_TA, colour = "Predictions âge et taille"), alpha = 0.5, shape = 5) + 
  #  geom_line(aes(y = predict_TA, colour = "Predictions âge et taille"), linetype = "twodash", size = 1, alpha = 0.80) +
    scale_color_manual(values = Legende, breaks = c("Sexe ratio observé", "Prédiction SST", "Prédiction du modèle", "Prédiction GSNW", "Prédiction AMO", "Predictions âge et taille")) +
    geom_hline(aes(yintercept = intercept_S),  color = "#000000", alpha = 0.6) +  #geom_hline(aes(yintercept = i.logit(fixef(modele)[[1]]))) +
    labs( y = "sexe ratio", x = "Cohorte") +
    theme_light() +
    ggtitle("Sprat") +
 theme(plot.title = element_text(face = "bold", hjust = 0.5, size = 14), legend.position='none')
      
   
       pT<- ggplot(SR_obs_pred_T, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "Sexe ratio observé"), alpha = 0.5, color = "#006666") + 
    geom_line(aes(y = SR_obs, colour = "Sexe ratio observé"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Prédiction du modèle"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Prédiction du modèle"), size = 1) +
   # geom_point(aes(y = Pred_NAO, colour = "Prédiction NAO"), alpha = 0.5, shape = 5) + 
  #  geom_line(aes(y = Pred_NAO, colour = "Prédiction NAO"), linetype = "twodash", size = 1, alpha = 0.80) +
    geom_point(aes(y = Pred_SST, colour = "Prédiction SST"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_SST, colour = "Prédiction SST"), linetype = "twodash", size = 1, alpha = 0.80) +
   # geom_point(aes(y = Pred_AMO_d, colour = "Prédiction AMO"), alpha = 0.5, shape = 5) + 
  #  geom_line(aes(y = Pred_AMO_d, colour = "Prédiction AMO"), linetype = "twodash", size = 1, alpha = 0.80) +
  #  geom_point(aes(y = Pred_GSNW, colour = "Prédiction GSNW"), alpha = 0.5, shape = 5) + 
  #  geom_line(aes(y = Pred_GSNW, colour = "Prédiction GSNW"), linetype = "twodash", size = 1, alpha = 0.80) +
  # geom_point(aes(y = predict_TA, colour = "Predictions âge et taille"), alpha = 0.5, shape = 5) + 
  #  geom_line(aes(y = predict_TA, colour = "Predictions âge et taille"), linetype = "twodash", size = 1, alpha = 0.80) +
    scale_color_manual(values = Legende, breaks = c("Sexe ratio observé", "Prédiction SST", "Prédiction du modèle", "Prédiction SST", "Prédiction AMO", "Predictions âge et taille", "Prédiction GSNW", "Prédiction NAO")) +
    geom_hline(aes(yintercept = intercept_T),  color = "#000000", alpha = 0.6) +  #geom_hline(aes(yintercept = i.logit(fixef(modele)[[1]]))) +
    labs( y = "sexe ratio", x = "Cohorte") +
    theme_light() +
    ggtitle("Tacaud norvégien") +
    theme(plot.title = element_text(face = "bold", hjust = 0.5, size = 16), legend.position='none')
 
P1<-pH + pA 
P2 <- pL + pLS
P3<-  pMa + pMe
P4 <- pMo + pP
P5 <- pS + pT       
            
ggsave("pred_M_VE_A.tiff", plot = pA, width = 10, height = 5)
ggsave("pred_M_VE_H.tiff", plot = pH, width = 10, height = 5)
ggsave("pred_M_VE_L.tiff", plot = pL, width = 10, height = 5)
ggsave("pred_M_VE_LS.tiff", plot = pLS, width = 10, height = 5)
ggsave("pred_M_VE_Ma.tiff", plot = pMa, width = 10, height = 5)
ggsave("pred_M_VE_Me.tiff", plot = pMe, width = 10, height = 5)
ggsave("pred_M_VE_Mo.tiff", plot = pMo, width = 10, height = 5)
ggsave("pred_M_VE_P.tiff", plot = pP, width = 10, height = 5)
ggsave("pred_M_VE_S.tiff", plot = pS, width = 10, height = 5)
ggsave("pred_M_VE_T.tiff", plot = pT, width = 10, height = 5)
 
```


Hareng : taille, AMO et SST
Aiglefin : taille, age, aMO et SST
Lieu : taille et âge
LS : taille, NAO,GSNW
Maquereau : taille et NAO
Merlan : tout
Morue : rien
Plie : taille, âge, AMO
Sprat : taille, âge, AMO, GSNW
tacaud : tout


*figure rapport avec contribution des effets des variables cohorte, fcohorte, âge, taille* 
```{r}
SR_obs_pred_H <- F_resume_M_C(table_sp_i = table_hareng_i, modele = M_i_H_40)
SR_obs_pred_A <- F_resume_M_C(table_sp_i = table_aiglefin_i, modele = M_i_A_40)
SR_obs_pred_L <- F_resume_M_C(table_sp_i = table_lieu_i, modele = M_i_L_40)
SR_obs_pred_LS <- F_resume_M_C(table_sp_i = table_limande_sole_i, modele = M_i_LS_40)
SR_obs_pred_Ma <- F_resume_M_C(table_sp_i = table_maquereau_i, modele = M_i_Ma_40)
SR_obs_pred_Me <- F_resume_M_C(table_sp_i = table_merlan_i, modele = M_i_Me_40_pta32)
SR_obs_pred_Mo <- F_resume_M_C(table_sp_i = table_morue_i, modele = M_i_Mo_40_pta2)
SR_obs_pred_P <- F_resume_M_C(table_sp_i = table_plie_i, modele = M_i_P_40_pta23)
SR_obs_pred_S <- F_resume_M_C(table_sp_i = table_sprat_i, modele = M_i_S_40_pt2)
SR_obs_pred_T <- F_resume_M_C(table_sp_i = table_tacaud_i, modele = M_i_T_40_pta23)
df <- data.frame(Cohorte = SR_obs_pred_H$Cohorte, Prediction_cohorte = SR_obs_pred_H$pred_C_reponse)
SR_obs_pred_H <- F_pred_fcohorte(tableau = table_hareng_i, modele = M_i_H_40, d = 1995)
SR_obs_pred_H<- left_join(SR_obs_pred_H, df, by = "Cohorte")
df <- data.frame(Cohorte = SR_obs_pred_A$Cohorte, Prediction_cohorte = SR_obs_pred_A$pred_C_reponse)
SR_obs_pred_A <- F_pred_fcohorte(tableau = table_aiglefin_i, modele = M_i_A_40, d = 1993)
SR_obs_pred_A<- left_join(SR_obs_pred_A, df, by = "Cohorte")
df <- data.frame(Cohorte = SR_obs_pred_L$Cohorte, Prediction_cohorte = SR_obs_pred_L$pred_C_reponse)
SR_obs_pred_L <- F_pred_fcohorte(tableau = table_lieu_i, modele = M_i_L_40, d = 1996)
SR_obs_pred_L<- left_join(SR_obs_pred_L, df, by = "Cohorte")
df <- data.frame(Cohorte = SR_obs_pred_LS$Cohorte, Prediction_cohorte = SR_obs_pred_LS$pred_C_reponse)
SR_obs_pred_LS <- F_pred_fcohorte(tableau = table_limande_sole_i, modele = M_i_LS_40, d = 2009)
SR_obs_pred_LS<- left_join(SR_obs_pred_LS, df, by = "Cohorte")
df <- data.frame(Cohorte = SR_obs_pred_Ma$Cohorte, Prediction_cohorte = SR_obs_pred_Ma$pred_C_reponse)
SR_obs_pred_Ma <- F_pred_fcohorte(tableau = table_maquereau_i, modele = M_i_Ma_40, d = 2002)
SR_obs_pred_Ma<- left_join(SR_obs_pred_Ma, df, by = "Cohorte")
df <- data.frame(Cohorte = SR_obs_pred_Me$Cohorte, Prediction_cohorte = SR_obs_pred_Me$pred_C_reponse)
SR_obs_pred_Me <- F_pred_fcohorte(tableau = table_merlan_i, modele = M_i_Me_40_pta32, d = 1994)
SR_obs_pred_Me<- left_join(SR_obs_pred_Me, df, by = "Cohorte")
df <- data.frame(Cohorte = SR_obs_pred_Mo$Cohorte, Prediction_cohorte = SR_obs_pred_Mo$pred_C_reponse)
SR_obs_pred_Mo <- F_pred_fcohorte(tableau = table_morue_i, modele = M_i_Mo_40_pta2, d = 1995)
SR_obs_pred_Mo<- left_join(SR_obs_pred_Mo, df, by = "Cohorte")
df <- data.frame(Cohorte = SR_obs_pred_P$Cohorte, Prediction_cohorte = SR_obs_pred_P$pred_C_reponse)
SR_obs_pred_P <- F_pred_fcohorte(tableau = table_plie_i, modele = M_i_P_40_pta23, d = 2002)
SR_obs_pred_P<- left_join(SR_obs_pred_P, df, by = "Cohorte")
df <- data.frame(Cohorte = SR_obs_pred_S$Cohorte, Prediction_cohorte = SR_obs_pred_S$pred_C_reponse)
SR_obs_pred_S <- F_pred_fcohorte(tableau = table_sprat_i, modele = M_i_S_40_pt2, d = 2004)
SR_obs_pred_S<- left_join(SR_obs_pred_S, df, by = "Cohorte")
df <- data.frame(Cohorte = SR_obs_pred_T$Cohorte, Prediction_cohorte = SR_obs_pred_T$pred_C_reponse)
SR_obs_pred_T <- F_pred_fcohorte(tableau = table_tacaud_i, modele = M_i_T_40_pta23, d = 1993)
SR_obs_pred_T<- left_join(SR_obs_pred_T, df, by = "Cohorte")


#Reconstruire une série temporelle du sexe ratio selon les variables d'âge et de taille
F_predict_TA_C <- function(table_sp_i, modele, SR_obs_pred_sp){
  tableau <- F_tableau_i2(tableau = table_sp_i)
  tableau$sc_cohorte <- 0 #on fixe la cohorte à 0
  predict_TA <- predict(modele, newdata = tableau, type = "response")
  table_sp_i <- cbind(table_sp_i, predict_TA)
  SR_pred_TA_sp <- aggregate(predict_TA ~ Species + Cohorte, data = table_sp_i, FUN = mean)
  SR_obs_pred_sp <- left_join(SR_obs_pred_sp, SR_pred_TA_sp, by = c("Species" , "Cohorte"))
  return(SR_obs_pred_sp)
}

SR_obs_pred_H <- F_predict_TA_C(table_sp_i = table_hareng_i, modele = M_i_H_40, SR_obs_pred_sp = SR_obs_pred_H)
SR_obs_pred_A <- F_predict_TA_C(table_sp_i = table_aiglefin_i, modele = M_i_A_40, SR_obs_pred_sp = SR_obs_pred_A)
SR_obs_pred_L <- F_predict_TA_C(table_sp_i = table_lieu_i, modele = M_i_L_40, SR_obs_pred_sp = SR_obs_pred_L)
SR_obs_pred_LS <- F_predict_TA_C(table_sp_i = table_limande_sole_i, modele = M_i_LS_40, SR_obs_pred_sp = SR_obs_pred_LS)
SR_obs_pred_Ma <- F_predict_TA_C(table_sp_i = table_maquereau_i, modele = M_i_Ma_40, SR_obs_pred_sp = SR_obs_pred_Ma)
SR_obs_pred_Me <- F_predict_TA_C(table_sp_i = table_merlan_i, modele = M_i_Me_40_pta32, SR_obs_pred_sp = SR_obs_pred_Me)
SR_obs_pred_Mo <- F_predict_TA_C(table_sp_i = table_morue_i, modele = M_i_Mo_40_pta2, SR_obs_pred_sp = SR_obs_pred_Mo)
SR_obs_pred_P <- F_predict_TA_C(table_sp_i = table_plie_i, modele = M_i_P_40_pta23, SR_obs_pred_sp = SR_obs_pred_P)
SR_obs_pred_S <- F_predict_TA_C(table_sp_i = table_sprat_i, modele = M_i_S_40_pt2, SR_obs_pred_sp = SR_obs_pred_S)
SR_obs_pred_T <- F_predict_TA_C(table_sp_i = table_tacaud_i, modele = M_i_T_40_pta23, SR_obs_pred_sp = SR_obs_pred_T)


colour <- c("Sexe ratio observé" = "#006666", "Prédictions du modèle" = "#CC9900", "Prédictions du modèle en fixant l'effet aléatoire de la cohorte" = "#333399" , "Prédictions de la Cohorte"= "#339966", "Predictions âge et taille" = "#339900") 

       pH<- ggplot(SR_obs_pred_H, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "Sexe ratio observé"), alpha = 0.5, color = "#006666") + 
    geom_line(aes(y = SR_obs, colour = "Sexe ratio observé"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Prédictions du modèle"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Prédictions du modèle"), size = 1) +
    geom_point(aes(y = Prediction_cohorte, colour = "Prédictions de la Cohorte"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Prediction_cohorte, colour = "Prédictions de la Cohorte"), linetype = "twodash", size = 1, alpha = 0.80) +
   geom_point(aes(y = predict_TA, colour = "Predictions âge et taille"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = predict_TA, colour = "Predictions âge et taille"), linetype = "twodash", size = 1, alpha = 0.80) +
         geom_point(aes(y = pred_fcohorte, colour = "Prédictions du modèle en fixant l'effet aléatoire de la cohorte"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = pred_fcohorte, colour = "Prédictions du modèle en fixant l'effet aléatoire de la cohorte"), size = 0.7, linetype = "twodash") +
    scale_color_manual(values = colour, breaks = c("Sexe ratio observé", "Prédictions du modèle", "Predictions âge et taille", "Prédictions de la Cohorte", "Prédictions du modèle en fixant l'effet aléatoire de la cohorte")) +
    labs( y = "sexe ratio", x = "Cohorte") +
    theme_light() +
    ggtitle("Hareng") +
    theme(plot.title = element_text(face = "bold", hjust = 0.5, size = 16), legend.position='none')
       
        pA<- ggplot(SR_obs_pred_A, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "Sexe ratio observé"), alpha = 0.5, color = "#006666") + 
    geom_line(aes(y = SR_obs, colour = "Sexe ratio observé"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Prédictions du modèle"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Prédictions du modèle"), size = 1) +
    geom_point(aes(y = Prediction_cohorte, colour = "Prédictions de la Cohorte"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Prediction_cohorte, colour = "Prédictions de la Cohorte"), linetype = "twodash", size = 1, alpha = 0.80) +
    geom_point(aes(y = predict_TA, colour = "Predictions âge et taille"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = predict_TA, colour = "Predictions âge et taille"), linetype = "twodash", size = 1, alpha = 0.80) +
    geom_point(aes(y = pred_fcohorte, colour = "Prédictions du modèle en fixant l'effet aléatoire de la cohorte"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = pred_fcohorte, colour = "Prédictions du modèle en fixant l'effet aléatoire de la cohorte"), size = 0.7, linetype = "twodash") +
    scale_color_manual(values = colour, breaks = c("Sexe ratio observé", "Prédictions du modèle", "Predictions âge et taille", "Prédictions de la Cohorte", "Prédictions du modèle en fixant l'effet aléatoire de la cohorte")) +
    labs( y = "sexe ratio", x = "Cohorte") +
    theme_light() +
    ggtitle("Aiglefin") +
    theme(plot.title = element_text(face = "bold", hjust = 0.5, size = 16), legend.position='none')
        
         pL<- ggplot(SR_obs_pred_L, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "Sexe ratio observé"), alpha = 0.5, color = "#006666") + 
    geom_line(aes(y = SR_obs, colour = "Sexe ratio observé"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Prédictions du modèle"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Prédictions du modèle"), size = 1) +
    geom_point(aes(y = Prediction_cohorte, colour = "Prédictions de la Cohorte"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Prediction_cohorte, colour = "Prédictions de la Cohorte"), linetype = "twodash", size = 1, alpha = 0.80) +
    geom_point(aes(y = predict_TA, colour = "Predictions âge et taille"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = predict_TA, colour = "Predictions âge et taille"), linetype = "twodash", size = 1, alpha = 0.80) +
    geom_point(aes(y = pred_fcohorte, colour = "Prédictions du modèle en fixant l'effet aléatoire de la cohorte"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = pred_fcohorte, colour = "Prédictions du modèle en fixant l'effet aléatoire de la cohorte"), size = 0.7, linetype = "twodash") +
    scale_color_manual(values = colour, breaks = c("Sexe ratio observé", "Prédictions du modèle", "Predictions âge et taille", "Prédictions de la Cohorte", "Prédictions du modèle en fixant l'effet aléatoire de la cohorte")) +
    labs( y = "sexe ratio", x = "Cohorte") +
    theme_light() +
    ggtitle("Lieu noir") +
    theme(plot.title = element_text(face = "bold", hjust = 0.5, size = 16), legend.position='none')
         
          pLS<- ggplot(SR_obs_pred_LS, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "Sexe ratio observé"), alpha = 0.5, color = "#006666") + 
    geom_line(aes(y = SR_obs, colour = "Sexe ratio observé"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Prédictions du modèle"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Prédictions du modèle"), size = 1) +
    geom_point(aes(y = Prediction_cohorte, colour = "Prédictions de la Cohorte"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Prediction_cohorte, colour = "Prédictions de la Cohorte"), linetype = "twodash", size = 1, alpha = 0.80) +
   geom_point(aes(y = predict_TA, colour = "Predictions âge et taille"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = predict_TA, colour = "Predictions âge et taille"), linetype = "twodash", size = 1, alpha = 0.80) +
    geom_point(aes(y = pred_fcohorte, colour = "Prédictions du modèle en fixant l'effet aléatoire de la cohorte"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = pred_fcohorte, colour = "Prédictions du modèle en fixant l'effet aléatoire de la cohorte"), size = 0.7, linetype = "twodash") +
    scale_color_manual(values = colour, breaks = c("Sexe ratio observé", "Prédictions du modèle", "Predictions âge et taille", "Prédictions de la Cohorte", "Prédictions du modèle en fixant l'effet aléatoire de la cohorte")) +
    labs( y = "sexe ratio", x = "Cohorte") +
    theme_light() +
    ggtitle("Limande-sole") +
    theme(plot.title = element_text(face = "bold", hjust = 0.5, size = 16), legend.position='none')
          
           pMa<- ggplot(SR_obs_pred_Ma, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "Sexe ratio observé"), alpha = 0.5, color = "#006666") + 
    geom_line(aes(y = SR_obs, colour = "Sexe ratio observé"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Prédictions du modèle"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Prédictions du modèle"), size = 1) +
    geom_point(aes(y = Prediction_cohorte, colour = "Prédictions de la Cohorte"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Prediction_cohorte, colour = "Prédictions de la Cohorte"), linetype = "twodash", size = 1, alpha = 0.80) +
   geom_point(aes(y = predict_TA, colour = "Predictions âge et taille"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = predict_TA, colour = "Predictions âge et taille"), linetype = "twodash", size = 1, alpha = 0.80) +
    geom_point(aes(y = pred_fcohorte, colour = "Prédictions du modèle en fixant l'effet aléatoire de la cohorte"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = pred_fcohorte, colour = "Prédictions du modèle en fixant l'effet aléatoire de la cohorte"), size = 0.7, linetype = "twodash") +
    scale_color_manual(values = colour, breaks = c("Sexe ratio observé", "Prédictions du modèle", "Predictions âge et taille", "Prédictions de la Cohorte", "Prédictions du modèle en fixant l'effet aléatoire de la cohorte")) +
    labs( y = "sexe ratio", x = "Cohorte") +
    theme_light() +
    ggtitle("Maquereau commun") +
    theme(plot.title = element_text(face = "bold", hjust = 0.5, size = 16), legend.position='none')
           
            pMe<- ggplot(SR_obs_pred_Me, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "Sexe ratio observé"), alpha = 0.5, color = "#006666") + 
    geom_line(aes(y = SR_obs, colour = "Sexe ratio observé"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Prédictions du modèle"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Prédictions du modèle"), size = 1) +
    geom_point(aes(y = Prediction_cohorte, colour = "Prédictions de la Cohorte"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Prediction_cohorte, colour = "Prédictions de la Cohorte"), linetype = "twodash", size = 1, alpha = 0.80) +
   geom_point(aes(y = predict_TA, colour = "Predictions âge et taille"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = predict_TA, colour = "Predictions âge et taille"), linetype = "twodash", size = 1, alpha = 0.80) +
    geom_point(aes(y = pred_fcohorte, colour = "Prédictions du modèle en fixant l'effet aléatoire de la cohorte"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = pred_fcohorte, colour = "Prédictions du modèle en fixant l'effet aléatoire de la cohorte"), size = 0.7, linetype = "twodash") +
    scale_color_manual(values = colour, breaks = c("Sexe ratio observé", "Prédictions du modèle", "Predictions âge et taille", "Prédictions de la Cohorte", "Prédictions du modèle en fixant l'effet aléatoire de la cohorte")) +
    labs( y = "sexe ratio", x = "Cohorte") +
    theme_light() +
    ggtitle("Merlan") +
    theme(plot.title = element_text(face = "bold", hjust = 0.5, size = 16), legend.position='none')
            
             pMo<- ggplot(SR_obs_pred_Mo, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "Sexe ratio observé"), alpha = 0.5, color = "#006666") + 
    geom_line(aes(y = SR_obs, colour = "Sexe ratio observé"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Prédictions du modèle"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Prédictions du modèle"), size = 1) +
    geom_point(aes(y = Prediction_cohorte, colour = "Prédictions de la Cohorte"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Prediction_cohorte, colour = "Prédictions de la Cohorte"), linetype = "twodash", size = 1, alpha = 0.80) +
   geom_point(aes(y = predict_TA, colour = "Predictions âge et taille"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = predict_TA, colour = "Predictions âge et taille"), linetype = "twodash", size = 1, alpha = 0.80) +
    geom_point(aes(y = pred_fcohorte, colour = "Prédictions du modèle en fixant l'effet aléatoire de la cohorte"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = pred_fcohorte, colour = "Prédictions du modèle en fixant l'effet aléatoire de la cohorte"), size = 0.7, linetype = "twodash") +
    scale_color_manual(values = colour, breaks = c("Sexe ratio observé", "Prédictions du modèle", "Predictions âge et taille", "Prédictions de la Cohorte", "Prédictions du modèle en fixant l'effet aléatoire de la cohorte")) +
    labs( y = "sexe ratio", x = "Cohorte") +
    theme_light() +
    ggtitle("Morue de l'Atlantique") +
    theme(plot.title = element_text(face = "bold", hjust = 0.5, size = 16), legend.position='none')
             
              pP<- ggplot(SR_obs_pred_P, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "Sexe ratio observé"), alpha = 0.5, color = "#006666") + 
    geom_line(aes(y = SR_obs, colour = "Sexe ratio observé"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Prédictions du modèle"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Prédictions du modèle"), size = 1) +
    geom_point(aes(y = Prediction_cohorte, colour = "Prédictions de la Cohorte"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Prediction_cohorte, colour = "Prédictions de la Cohorte"), linetype = "twodash", size = 1, alpha = 0.80) +
   geom_point(aes(y = predict_TA, colour = "Predictions âge et taille"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = predict_TA, colour = "Predictions âge et taille"), linetype = "twodash", size = 1, alpha = 0.80) +
    geom_point(aes(y = pred_fcohorte, colour = "Prédictions du modèle en fixant l'effet aléatoire de la cohorte"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = pred_fcohorte, colour = "Prédictions du modèle en fixant l'effet aléatoire de la cohorte"), size = 0.7, linetype = "twodash") +
    scale_color_manual(values = colour, breaks = c("Sexe ratio observé", "Prédictions du modèle", "Predictions âge et taille", "Prédictions de la Cohorte", "Prédictions du modèle en fixant l'effet aléatoire de la cohorte")) +
    labs( y = "sexe ratio", x = "Cohorte") +
    theme_light() +
    ggtitle("Plie commune") +
    theme(plot.title = element_text(face = "bold", hjust = 0.5, size = 16), legend.position='none')
              
               pS<- ggplot(SR_obs_pred_S, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "Sexe ratio observé"), alpha = 0.5, color = "#006666") + 
    geom_line(aes(y = SR_obs, colour = "Sexe ratio observé"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Prédictions du modèle"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Prédictions du modèle"), size = 1) +
    geom_point(aes(y = Prediction_cohorte, colour = "Prédictions de la Cohorte"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Prediction_cohorte, colour = "Prédictions de la Cohorte"), linetype = "twodash", size = 1, alpha = 0.80) +
   geom_point(aes(y = predict_TA, colour = "Predictions âge et taille"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = predict_TA, colour = "Predictions âge et taille"), linetype = "twodash", size = 1, alpha = 0.80) +
    geom_point(aes(y = pred_fcohorte, colour = "Prédictions du modèle en fixant l'effet aléatoire de la cohorte"), alpha = 0.5, shape = 5) +
    geom_line(aes(y = pred_fcohorte, colour = "Prédictions du modèle en fixant l'effet aléatoire de la cohorte"), size = 0.7, linetype = "twodash") +
    scale_color_manual(values = colour, breaks = c("Sexe ratio observé", "Prédictions du modèle", "Predictions âge et taille", "Prédictions de la Cohorte", "Prédictions du modèle en fixant l'effet aléatoire de la cohorte")) +
    labs( y = "sexe ratio", x = "Cohorte") +
    theme_light() +
    ggtitle("Sprat") +
    theme(plot.title = element_text(face = "bold", hjust = 0.5, size = 16), legend.position='none')
               
               
               pT<- ggplot(SR_obs_pred_T, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "Sexe ratio observé"), alpha = 0.5, color = "#006666") + 
    geom_line(aes(y = SR_obs, colour = "Sexe ratio observé"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Prédictions du modèle"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Prédictions du modèle"), size = 1) +
    geom_point(aes(y = Prediction_cohorte, colour = "Prédictions de la Cohorte"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Prediction_cohorte, colour = "Prédictions de la Cohorte"), linetype = "twodash", size = 1, alpha = 0.80) +
   geom_point(aes(y = predict_TA, colour = "Predictions âge et taille"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = predict_TA, colour = "Predictions âge et taille"), linetype = "twodash", size = 1, alpha = 0.80) +
    geom_point(aes(y = pred_fcohorte, colour = "Prédictions du modèle en fixant l'effet aléatoire de la cohorte"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = pred_fcohorte, colour = "Prédictions du modèle en fixant l'effet aléatoire de la cohorte"), size = 0.7, linetype = "twodash") +
    scale_color_manual(values = colour, breaks = c("Sexe ratio observé", "Prédictions du modèle", "Predictions âge et taille", "Prédictions de la Cohorte", "Prédictions du modèle en fixant l'effet aléatoire de la cohorte")) +
    labs( y = "sexe ratio", x = "Cohorte") +
    theme_light() +
    ggtitle("Tacaud norvégien") +
    theme(plot.title = element_text(face = "bold", hjust = 0.5, size = 16), legend.position='none')
               
P1<-pH + pA 
P2 <- pL + pLS
P3<-  pMa + pMe
P4 <- pMo + pP
P5 <- pS + pT

plot_eff_VE_sign <- P1/P2/P3/P4/P5


#ggsave("plot_eff_VE_sign.png", plot = plot_eff_VE_sign, width = 16, height = 18)
```





```{r}
colour <- c("Sexe ratio observé" = "#006666", "Prédiction du modèle" = "#CC9900", "Prédiction  NAO" = "#333399" , "Prédiction SST"= "#339966", "Prédiction AMO" = "#990000", "Prédiction GSNW" = "#990099") 

ggplot(SR_obs_pred_T, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "Sexe ratio observé"), alpha = 0.5) + 
    geom_line(aes(y = SR_obs, colour = "Sexe ratio observé"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Prédiction du modèle"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour ="Prédiction du modèle"), size = 1) +
    geom_point(aes(y = Pred_NAO, colour = "Prédiction  NAO"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_NAO, colour = "Prédiction  NAO"), linetype = "twodash", size = 1, alpha = 0.7) +
    geom_point(aes(y = Pred_SST, colour = "Prédiction SST"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_SST, colour = "Prédiction SST"), linetype = "twodash", size = 1, alpha = 0.7) +
    geom_point(aes(y = Pred_AMO_d, colour = "Prédiction AMO"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_AMO_d, colour = "Prédiction AMO"), linetype = "twodash", size = 1, alpha = 0.7) +
    geom_point(aes(y = Pred_GSNW, colour = "Prédiction GSNW"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_GSNW, colour = "Prédiction GSNW"), linetype = "twodash", size = 1, alpha = 0.7) +
    #scale_color_brewer(palette="Dark2", name="sexe ratio", ) +
    scale_color_manual(values = colour, breaks = c("Sexe ratio observé", "Prédiction du modèle", "Prédiction  NAO", "Prédiction SST", "Prédiction AMO", "Prédiction GSNW")) +
    geom_hline(aes(yintercept = intercept_T),  color = "#000000", alpha = 0.5) +  #geom_hline(aes(yintercept = i.logit(fixef(modele)[[1]]))) +
    labs( y = "sexe ratio", x = "Cohorte") +
    theme_light() +
    ggtitle("Tacaud norvégien") +
 theme(plot.title = element_text(face = "bold", hjust = 0.5, size = 14))#, legend.position='none')
       
```




##### Figures soutenance

**variables environnementales**
```{r}
Legende <- c("Sexe ratio observé" = "#006666", "Prédiction du modèle" = "#CC9900", "Prédiction NAO" = "#333399" , "Prédiction SST"= "#339966", "Prédiction AMO" = "#990000", "Prédiction GSNW" = "#990099", "Predictions âge et taille" = "#009900") ##339900
#006600
#669900
intercept_H <- mean(table_hareng_i$sexe_num_2)  
intercept_A <- mean(table_aiglefin_i$sexe_num_2) 
intercept_L <- mean(table_lieu_i$sexe_num_2) 
intercept_LS <- mean(table_limande_sole_i$sexe_num_2)
intercept_Ma <- mean(table_maquereau_i$sexe_num_2)
intercept_Me <- mean(table_merlan_i$sexe_num_2) 
intercept_Mo <- mean(table_morue_i$sexe_num_2)
intercept_P <- mean(table_plie_i$sexe_num_2)
intercept_S <- mean(table_sprat_i$sexe_num_2)   
intercept_T <- mean(table_tacaud_i$sexe_num_2)

pH<- ggplot(SR_obs_pred_H, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "Sexe ratio observé"), alpha = 0.5) + 
    geom_line(aes(y = SR_obs, colour = "Sexe ratio observé"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Prédiction du modèle"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Prédiction du modèle"), size = 1) +
    #geom_point(aes(y = Pred_SST, colour = "Prédiction SST"), alpha = 0.5, shape = 5) + 
   # geom_line(aes(y = Pred_SST, colour = "Prédiction SST"), linetype = "twodash", size = 0.85, alpha = 0.80) +
    geom_point(aes(y = Pred_AMO_d, colour = "Prédiction AMO"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_AMO_d, colour = "Prédiction AMO"), linetype = "twodash", size = 0.85, alpha = 0.80) +
    geom_point(aes(y = predict_TA, colour = "Predictions âge et taille"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = predict_TA, colour = "Predictions âge et taille"), linetype = "twodash", size = 0.85, alpha = 0.80) +
    scale_color_manual(values = Legende, breaks = c("Sexe ratio observé", "Prédiction du modèle", "Prédiction SST", "Prédiction AMO", "Predictions âge et taille")) +
    geom_hline(aes(yintercept = intercept_H),  color = "#000000", alpha = 0.6) +  #geom_hline(aes(yintercept = i.logit(fixef(modele)[[1]]))) +
    labs( y = "sexe ratio", x = "Cohorte") +
    theme_light() +
    ggtitle("Hareng") +
    theme(plot.title = element_text(face = "bold", hjust = 0.5, size = 14), legend.position='none')

 pA<- ggplot(SR_obs_pred_A, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "Sexe ratio observé"), alpha = 0.5) + 
    geom_line(aes(y = SR_obs, colour = "Sexe ratio observé"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Prédiction du modèle"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Prédiction du modèle"), size = 1) +
    geom_point(aes(y = Pred_SST, colour = "Prédiction SST"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_SST, colour = "Prédiction SST"), linetype = "twodash", size = 0.85, alpha = 0.80) +
    geom_point(aes(y = Pred_AMO_d, colour = "Prédiction AMO"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_AMO_d, colour = "Prédiction AMO"), linetype = "twodash", size = 0.85, alpha = 0.80) +
    geom_point(aes(y = predict_TA, colour = "Predictions âge et taille"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = predict_TA, colour = "Predictions âge et taille"), linetype = "twodash", size = 0.85, alpha = 0.80) +
    scale_color_manual(values = Legende, breaks = c("Sexe ratio observé", "Prédiction du modèle", "Prédiction SST", "Prédiction AMO", "Predictions âge et taille")) +
    geom_hline(aes(yintercept = intercept_A),  color = "#000000", alpha = 0.6) +  #geom_hline(aes(yintercept = i.logit(fixef(modele)[[1]]))) +
    labs( y = "sexe ratio", x = "Cohorte") +
    theme_light() +
   ggtitle("Aiglefin") +
 theme(plot.title = element_text(face = "bold", hjust = 0.5, size = 14), legend.position='none')
 
  
 pL<- ggplot(SR_obs_pred_L, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "Sexe ratio observé"), alpha = 0.5) + 
    geom_line(aes(y = SR_obs, colour = "Sexe ratio observé"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Prédiction du modèle"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Prédiction du modèle"), size = 1) +
    geom_point(aes(y = predict_TA, colour = "Predictions âge et taille"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = predict_TA, colour = "Predictions âge et taille"), linetype = "twodash", size = 0.85, alpha = 0.80) +
    scale_color_manual(values = Legende, breaks = c("Sexe ratio observé", "Prédiction du modèle", "Predictions âge et taille")) +
    geom_hline(aes(yintercept = intercept_L),  color = "#000000", alpha = 0.6) +  #geom_hline(aes(yintercept = i.logit(fixef(modele)[[1]]))) +
    labs( y = "sexe ratio", x = "Cohorte") +
    theme_light() +
   ggtitle("Lieu noir") +
 theme(plot.title = element_text(face = "bold", hjust = 0.5, size = 14), legend.position='none')
 
 
  pLS<- ggplot(SR_obs_pred_LS, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "Sexe ratio observé"), alpha = 0.5) + 
    geom_line(aes(y = SR_obs, colour = "Sexe ratio observé"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Prédiction du modèle"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Prédiction du modèle"), size = 1) +
    geom_point(aes(y = Pred_NAO, colour = "Prédiction NAO"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_NAO, colour = "Prédiction NAO"), linetype = "twodash", size = 0.85, alpha = 0.80) +
    geom_point(aes(y = Pred_GSNW, colour = "Prédiction GSNW"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_GSNW, colour = "Prédiction GSNW"), linetype = "twodash", size = 0.85, alpha = 0.80) +
    geom_point(aes(y = predict_TA, colour = "Predictions âge et taille"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = predict_TA, colour = "Predictions âge et taille"), linetype = "twodash", size = 0.85, alpha = 0.80) +
    scale_color_manual(values = Legende, breaks = c("Sexe ratio observé", "Prédiction du modèle",  "Prédiction GSNW", "Prédiction NAO", "Predictions âge et taille")) +
    geom_hline(aes(yintercept = intercept_LS),  color = "#000000", alpha = 0.6) +  #geom_hline(aes(yintercept = i.logit(fixef(modele)[[1]]))) +
    labs( y = "sexe ratio", x = "Cohorte") +
    theme_light() +
    ggtitle("Limande-sole") +
 theme(plot.title = element_text(face = "bold", hjust = 0.5, size = 14), legend.position='none')
  
  
   
   pMa<- ggplot(SR_obs_pred_Ma, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "Sexe ratio observé"), alpha = 0.5) + 
    geom_line(aes(y = SR_obs, colour = "Sexe ratio observé"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Prédiction du modèle"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Prédiction du modèle"), size = 1) +
    geom_point(aes(y = Pred_NAO, colour = "Prédiction NAO"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_NAO, colour = "Prédiction NAO"), linetype = "twodash", size = 0.85, alpha = 0.80) +
    geom_point(aes(y = predict_TA, colour = "Predictions âge et taille"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = predict_TA, colour = "Predictions âge et taille"), linetype = "twodash", size = 0.85, alpha = 0.80) +
    scale_color_manual(values = Legende, breaks = c("Sexe ratio observé", "Prédiction du modèle", "Prédiction NAO", "Predictions âge et taille")) +
    geom_hline(aes(yintercept = intercept_Ma),  color = "#000000", alpha = 0.6) +  #geom_hline(aes(yintercept = i.logit(fixef(modele)[[1]]))) +
    labs( y = "sexe ratio", x = "Cohorte") +
    theme_light() +
     ggtitle("Maquereau commun") +
 theme(plot.title = element_text(face = "bold", hjust = 0.5, size = 14), legend.position='none')
   
   
    pMe<- ggplot(SR_obs_pred_Me, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "Sexe ratio observé"), alpha = 0.5) + 
    geom_line(aes(y = SR_obs, colour = "Sexe ratio observé"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Prédiction du modèle"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Prédiction du modèle"), size = 1) +
    geom_point(aes(y = Pred_NAO, colour = "Prédiction NAO"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_NAO, colour = "Prédiction NAO"), linetype = "twodash", size = 0.85,alpha = 0.80) +
    geom_point(aes(y = Pred_SST, colour = "Prédiction SST"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_SST, colour = "Prédiction SST"), linetype = "twodash", size = 0.85, alpha = 0.80) +
    geom_point(aes(y = Pred_AMO_d, colour = "Prédiction AMO"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_AMO_d, colour = "Prédiction AMO"), linetype = "twodash", size = 0.85, alpha = 0.80) +
    geom_point(aes(y = Pred_GSNW, colour = "Prédiction GSNW"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_GSNW, colour = "Prédiction GSNW"), linetype = "twodash", size = 0.85, alpha = 0.80) +
    geom_point(aes(y = predict_TA, colour = "Predictions âge et taille"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = predict_TA, colour = "Predictions âge et taille"), linetype = "twodash", size = 0.85, alpha = 0.80) +
    scale_color_manual(values = Legende, breaks = c("Sexe ratio observé", "Prédiction du modèle", "Prédiction SST", "Prédiction AMO", "Prédiction GSNW", "Prédiction NAO", "Predictions âge et taille")) +
    geom_hline(aes(yintercept = intercept_Me),  color = "#000000", alpha = 0.6) +  #geom_hline(aes(yintercept = i.logit(fixef(modele)[[1]]))) +
    labs( y = "sexe ratio", x = "Cohorte") +
    theme_light() +
      ggtitle("Merlan") +
    theme(plot.title = element_text(face = "bold", hjust = 0.5, size = 14), legend.position='none')
     
    
    pMo<- ggplot(SR_obs_pred_Mo, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "Sexe ratio observé"), alpha = 0.5) + 
    geom_line(aes(y = SR_obs, colour = "Sexe ratio observé"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Prédiction du modèle"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Prédiction du modèle"), size = 1) +
    geom_point(aes(y = predict_TA, colour = "Predictions âge et taille"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = predict_TA, colour = "Predictions âge et taille"), linetype = "twodash", size = 0.85, alpha = 0.80) +
    scale_color_manual(values = Legende, breaks = c("Sexe ratio observé", "Prédiction du modèle", "Predictions âge et taille")) +
    geom_hline(aes(yintercept = intercept_Mo),  color = "#000000", alpha = 0.6) +  #geom_hline(aes(yintercept = i.logit(fixef(modele)[[1]]))) +
    labs( y = "sexe ratio", x = "Cohorte") +
    theme_light() +
      ggtitle("Morue de l'Atlantique") +
    theme(plot.title = element_text(face = "bold", hjust = 0.5, size = 14), legend.position='none')
     
    
    pP<- ggplot(SR_obs_pred_P, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "Sexe ratio observé"), alpha = 0.5) + 
    geom_line(aes(y = SR_obs, colour = "Sexe ratio observé"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Prédiction du modèle"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Prédiction du modèle"), size = 1) +
    geom_point(aes(y = Pred_AMO_d, colour = "Prédiction AMO"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_AMO_d, colour = "Prédiction AMO"), linetype = "twodash", size = 0.85, alpha = 0.80) +
    geom_point(aes(y = predict_TA, colour = "Predictions âge et taille"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = predict_TA, colour = "Predictions âge et taille"), linetype = "twodash", size = 0.85, alpha = 0.80) +
    scale_color_manual(values = Legende, breaks = c("Sexe ratio observé", "Prédiction du modèle", "Prédiction AMO", "Predictions âge et taille")) +
    geom_hline(aes(yintercept = intercept_P),  color = "#000000", alpha = 0.6) +  #geom_hline(aes(yintercept = i.logit(fixef(modele)[[1]]))) +
    labs( y = "sexe ratio", x = "Cohorte") +
    theme_light() +    
      ggtitle("Plie commune") +
 theme(plot.title = element_text(face = "bold", hjust = 0.5, size = 14), legend.position='none')
     
    
      pS<- ggplot(SR_obs_pred_S, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "Sexe ratio observé"), alpha = 0.5) + 
    geom_line(aes(y = SR_obs, colour = "Sexe ratio observé"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Prédiction du modèle"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Prédiction du modèle"), size = 1) +
    geom_point(aes(y = Pred_AMO_d, colour = "Prédiction AMO"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_AMO_d, colour = "Prédiction AMO"), linetype = "twodash", size = 0.85, alpha = 0.80) +
    geom_point(aes(y = Pred_GSNW, colour = "Prédiction GSNW"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_GSNW, colour = "Prédiction GSNW"), linetype = "twodash", size = 0.85, alpha = 0.80) +
    geom_point(aes(y = predict_TA, colour = "Predictions âge et taille"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = predict_TA, colour = "Predictions âge et taille"), linetype = "twodash", size = 0.85, alpha = 0.80) +
    scale_color_manual(values = Legende, breaks = c("Sexe ratio observé", "Prédiction du modèle", "Prédiction GSNW", "Prédiction AMO", "Predictions âge et taille")) +
    geom_hline(aes(yintercept = intercept_S),  color = "#000000", alpha = 0.6) +  #geom_hline(aes(yintercept = i.logit(fixef(modele)[[1]]))) +
    labs( y = "sexe ratio", x = "Cohorte") +
    theme_light() +
    ggtitle("Sprat") +
 theme(plot.title = element_text(face = "bold", hjust = 0.5, size = 14), legend.position='none')
      
   
       pT<- ggplot(SR_obs_pred_T, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "Sexe ratio observé"), alpha = 0.5, color = "#006666") + 
    geom_line(aes(y = SR_obs, colour = "Sexe ratio observé"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Prédiction du modèle"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Prédiction du modèle"), size = 1) +
    geom_point(aes(y = Pred_NAO, colour = "Prédiction NAO"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_NAO, colour = "Prédiction NAO"), linetype = "twodash", size = 0.85, alpha = 0.80) +
    geom_point(aes(y = Pred_SST, colour = "Prédiction SST"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_SST, colour = "Prédiction SST"), linetype = "twodash", size = 0.85, alpha = 0.80) +
    geom_point(aes(y = Pred_AMO_d, colour = "Prédiction AMO"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_AMO_d, colour = "Prédiction AMO"), linetype = "twodash", size = 0.85, alpha = 0.80) +
    geom_point(aes(y = Pred_GSNW, colour = "Prédiction GSNW"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_GSNW, colour = "Prédiction GSNW"), linetype = "twodash", size = 0.85, alpha = 0.80) +
   geom_point(aes(y = predict_TA, colour = "Predictions âge et taille"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = predict_TA, colour = "Predictions âge et taille"), linetype = "twodash", size = 0.85, alpha = 0.80) +
    scale_color_manual(values = Legende, breaks = c("Sexe ratio observé", "Prédiction du modèle", "Prédiction SST", "Prédiction AMO", "Predictions âge et taille", "Prédiction GSNW", "Prédiction NAO")) +
    geom_hline(aes(yintercept = intercept_T),  color = "#000000", alpha = 0.6) +  #geom_hline(aes(yintercept = i.logit(fixef(modele)[[1]]))) +
    labs( y = "sexe ratio", x = "Cohorte") +
    theme_light() +
    ggtitle("Tacaud norvégien") +
    theme(plot.title = element_text(face = "bold", hjust = 0.5, size = 16), legend.position='none')
       
ps1 <- pH + pL + pMe
ps2 <-pP + pS + pT
plot_soutenance_VE <- ps1/ps2
ggsave("plot_soutenance_eff_VE_sign.png", plot = plot_soutenance_VE, width = 22, height = 7)    



#SST
pH<- ggplot(SR_obs_pred_H, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "Sexe ratio observé"), alpha = 0.5) + 
    geom_line(aes(y = SR_obs, colour = "Sexe ratio observé"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Prédiction du modèle"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Prédiction du modèle"), size = 1) +
    geom_point(aes(y = Pred_SST, colour = "Prédiction SST"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_SST, colour = "Prédiction SST"), linetype = "twodash", size = 0.85, alpha = 0.80) +
    geom_point(aes(y = predict_TA, colour = "Predictions âge et taille"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = predict_TA, colour = "Predictions âge et taille"), linetype = "twodash", size = 0.85, alpha = 0.80) +
    scale_color_manual(values = Legende, breaks = c("Sexe ratio observé", "Prédiction du modèle", "Prédiction SST", "Predictions âge et taille")) +
    geom_hline(aes(yintercept = intercept_H),  color = "#000000", alpha = 0.6) +  #geom_hline(aes(yintercept = i.logit(fixef(modele)[[1]]))) +
    labs( y = "sexe ratio", x = "Cohorte") +
    theme_light() +
    ggtitle("Hareng") +
    theme(plot.title = element_text(face = "bold", hjust = 0.5, size = 14), legend.position='none')


    pMe<- ggplot(SR_obs_pred_Me, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "Sexe ratio observé"), alpha = 0.5) + 
    geom_line(aes(y = SR_obs, colour = "Sexe ratio observé"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Prédiction du modèle"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Prédiction du modèle"), size = 1) +
    geom_point(aes(y = Pred_SST, colour = "Prédiction SST"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_SST, colour = "Prédiction SST"), linetype = "twodash", size = 0.85, alpha = 0.80) +
    geom_point(aes(y = predict_TA, colour = "Predictions âge et taille"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = predict_TA, colour = "Predictions âge et taille"), linetype = "twodash", size = 0.85, alpha = 0.80) +
    scale_color_manual(values = Legende, breaks = c("Sexe ratio observé", "Prédiction du modèle", "Prédiction SST", "Predictions âge et taille")) +
    geom_hline(aes(yintercept = intercept_Me),  color = "#000000", alpha = 0.6) +  #geom_hline(aes(yintercept = i.logit(fixef(modele)[[1]]))) +
    labs( y = "sexe ratio", x = "Cohorte") +
    theme_light() +
      ggtitle("Merlan") +
    theme(plot.title = element_text(face = "bold", hjust = 0.5, size = 14), legend.position='none')
     
    
   
       pT<- ggplot(SR_obs_pred_T, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "Sexe ratio observé"), alpha = 0.5, color = "#006666") + 
    geom_line(aes(y = SR_obs, colour = "Sexe ratio observé"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Prédiction du modèle"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Prédiction du modèle"), size = 1) +
    geom_point(aes(y = Pred_SST, colour = "Prédiction SST"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_SST, colour = "Prédiction SST"), linetype = "twodash", size = 0.85, alpha = 0.80) +
   geom_point(aes(y = predict_TA, colour = "Predictions âge et taille"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = predict_TA, colour = "Predictions âge et taille"), linetype = "twodash", size = 0.85, alpha = 0.80) +
    scale_color_manual(values = Legende, breaks = c("Sexe ratio observé", "Prédiction du modèle", "Prédiction SST",  "Predictions âge et taille")) +
    geom_hline(aes(yintercept = intercept_T),  color = "#000000", alpha = 0.6) +  #geom_hline(aes(yintercept = i.logit(fixef(modele)[[1]]))) +
    labs( y = "sexe ratio", x = "Cohorte") +
    theme_light() +
    ggtitle("Tacaud norvégien") +
    theme(plot.title = element_text(face = "bold", hjust = 0.5, size = 16), legend.position='none')
       

plot_soutenance_VE_sst <- pH/pMe/pT
ggsave("plot_soutenance_VE_sst.png", plot = plot_soutenance_VE_sst, width =10, height = 13)    


#ggsave("plot_merlan_sst.png", plot = pMe, width = 16, height = 8)
#ggsave("plot_tacaud_sst.png", plot = pT, width = 16, height = 8)
#ggsave("plot_hareng_sst.png", plot = pH, width = 16, height = 8)
#ggsave("plot_hareng_amo.png", plot = pH, width = 16, height = 8)
```





```{r}
pMe<- ggplot(SR_obs_pred_Me, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "Sexe ratio observé"), alpha = 0.5) + 
    geom_line(aes(y = SR_obs, colour = "Sexe ratio observé"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Prédiction du modèle"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Prédiction du modèle"), size = 1) +
    geom_point(aes(y = Pred_NAO, colour = "Prédiction NAO"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_NAO, colour = "Prédiction NAO"), linetype = "twodash", size = 0.85,alpha = 0.80) +
    geom_point(aes(y = Pred_AMO_d, colour = "Prédiction AMO"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_AMO_d, colour = "Prédiction AMO"), linetype = "twodash", size = 0.85, alpha = 0.80) +
    geom_point(aes(y = Pred_GSNW, colour = "Prédiction GSNW"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_GSNW, colour = "Prédiction GSNW"), linetype = "twodash", size = 0.85, alpha = 0.80) +
    geom_point(aes(y = predict_TA, colour = "Predictions âge et taille"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = predict_TA, colour = "Predictions âge et taille"), linetype = "twodash", size = 0.85, alpha = 0.80) +
    scale_color_manual(values = Legende, breaks = c("Sexe ratio observé", "Prédiction du modèle", "Prédiction AMO", "Prédiction GSNW", "Prédiction NAO", "Predictions âge et taille")) +
    geom_hline(aes(yintercept = intercept_Me),  color = "#000000", alpha = 0.6) +  #geom_hline(aes(yintercept = i.logit(fixef(modele)[[1]]))) +
    labs( y = "sexe ratio", x = "Cohorte") +
    theme_light() +
      ggtitle("Merlan") +
    theme(plot.title = element_text(face = "bold", hjust = 0.5, size = 14), legend.position='none')



ggsave("plot_sprat_Env.png", plot = pS, width = 16, height = 8)



```



**variables cohorte**
```{r}
SR_obs_pred_H <- F_resume_M_C(table_sp_i = table_hareng_i, modele = M_i_H_40)
SR_obs_pred_A <- F_resume_M_C(table_sp_i = table_aiglefin_i, modele = M_i_A_40)
SR_obs_pred_L <- F_resume_M_C(table_sp_i = table_lieu_i, modele = M_i_L_40)
SR_obs_pred_LS <- F_resume_M_C(table_sp_i = table_limande_sole_i, modele = M_i_LS_40)
SR_obs_pred_Ma <- F_resume_M_C(table_sp_i = table_maquereau_i, modele = M_i_Ma_40)
SR_obs_pred_Me <- F_resume_M_C(table_sp_i = table_merlan_i, modele = M_i_Me_40_pta32)
SR_obs_pred_Mo <- F_resume_M_C(table_sp_i = table_morue_i, modele = M_i_Mo_40_pta2)
SR_obs_pred_P <- F_resume_M_C(table_sp_i = table_plie_i, modele = M_i_P_40_pta23)
SR_obs_pred_S <- F_resume_M_C(table_sp_i = table_sprat_i, modele = M_i_S_40_pt2)
SR_obs_pred_T <- F_resume_M_C(table_sp_i = table_tacaud_i, modele = M_i_T_40_pta23)
df <- data.frame(Cohorte = SR_obs_pred_H$Cohorte, Prediction_cohorte = SR_obs_pred_H$pred_C_reponse)
SR_obs_pred_H <- F_pred_fcohorte(tableau = table_hareng_i, modele = M_i_H_40, d = 1995)
SR_obs_pred_H<- left_join(SR_obs_pred_H, df, by = "Cohorte")
df <- data.frame(Cohorte = SR_obs_pred_A$Cohorte, Prediction_cohorte = SR_obs_pred_A$pred_C_reponse)
SR_obs_pred_A <- F_pred_fcohorte(tableau = table_aiglefin_i, modele = M_i_A_40, d = 1993)
SR_obs_pred_A<- left_join(SR_obs_pred_A, df, by = "Cohorte")
df <- data.frame(Cohorte = SR_obs_pred_L$Cohorte, Prediction_cohorte = SR_obs_pred_L$pred_C_reponse)
SR_obs_pred_L <- F_pred_fcohorte(tableau = table_lieu_i, modele = M_i_L_40, d = 1996)
SR_obs_pred_L<- left_join(SR_obs_pred_L, df, by = "Cohorte")
df <- data.frame(Cohorte = SR_obs_pred_LS$Cohorte, Prediction_cohorte = SR_obs_pred_LS$pred_C_reponse)
SR_obs_pred_LS <- F_pred_fcohorte(tableau = table_limande_sole_i, modele = M_i_LS_40, d = 2009)
SR_obs_pred_LS<- left_join(SR_obs_pred_LS, df, by = "Cohorte")
df <- data.frame(Cohorte = SR_obs_pred_Ma$Cohorte, Prediction_cohorte = SR_obs_pred_Ma$pred_C_reponse)
SR_obs_pred_Ma <- F_pred_fcohorte(tableau = table_maquereau_i, modele = M_i_Ma_40, d = 2002)
SR_obs_pred_Ma<- left_join(SR_obs_pred_Ma, df, by = "Cohorte")
df <- data.frame(Cohorte = SR_obs_pred_Me$Cohorte, Prediction_cohorte = SR_obs_pred_Me$pred_C_reponse)
SR_obs_pred_Me <- F_pred_fcohorte(tableau = table_merlan_i, modele = M_i_Me_40_pta32, d = 1994)
SR_obs_pred_Me<- left_join(SR_obs_pred_Me, df, by = "Cohorte")
df <- data.frame(Cohorte = SR_obs_pred_Mo$Cohorte, Prediction_cohorte = SR_obs_pred_Mo$pred_C_reponse)
SR_obs_pred_Mo <- F_pred_fcohorte(tableau = table_morue_i, modele = M_i_Mo_40_pta2, d = 1995)
SR_obs_pred_Mo<- left_join(SR_obs_pred_Mo, df, by = "Cohorte")
df <- data.frame(Cohorte = SR_obs_pred_P$Cohorte, Prediction_cohorte = SR_obs_pred_P$pred_C_reponse)
SR_obs_pred_P <- F_pred_fcohorte(tableau = table_plie_i, modele = M_i_P_40_pta23, d = 2002)
SR_obs_pred_P<- left_join(SR_obs_pred_P, df, by = "Cohorte")
df <- data.frame(Cohorte = SR_obs_pred_S$Cohorte, Prediction_cohorte = SR_obs_pred_S$pred_C_reponse)
SR_obs_pred_S <- F_pred_fcohorte(tableau = table_sprat_i, modele = M_i_S_40_pt2, d = 2004)
SR_obs_pred_S<- left_join(SR_obs_pred_S, df, by = "Cohorte")
df <- data.frame(Cohorte = SR_obs_pred_T$Cohorte, Prediction_cohorte = SR_obs_pred_T$pred_C_reponse)
SR_obs_pred_T <- F_pred_fcohorte(tableau = table_tacaud_i, modele = M_i_T_40_pta23, d = 1993)
SR_obs_pred_T<- left_join(SR_obs_pred_T, df, by = "Cohorte")


#Reconstruire une série temporelle du sexe ratio selon les variables d'âge et de taille
F_predict_TA_C <- function(table_sp_i, modele, SR_obs_pred_sp){
  tableau <- F_tableau_i2(tableau = table_sp_i)
  tableau$sc_cohorte <- 0
  predict_TA <- predict(modele, newdata = tableau, type = "response")
  table_sp_i <- cbind(table_sp_i, predict_TA)
  SR_pred_TA_sp <- aggregate(predict_TA ~ Species + Cohorte, data = table_sp_i, FUN = mean)
  SR_obs_pred_sp <- left_join(SR_obs_pred_sp, SR_pred_TA_sp, by = c("Species" , "Cohorte"))
  return(SR_obs_pred_sp)
}

SR_obs_pred_H <- F_predict_TA_C(table_sp_i = table_hareng_i, modele = M_i_H_40, SR_obs_pred_sp = SR_obs_pred_H)
SR_obs_pred_A <- F_predict_TA_C(table_sp_i = table_aiglefin_i, modele = M_i_A_40, SR_obs_pred_sp = SR_obs_pred_A)
SR_obs_pred_L <- F_predict_TA_C(table_sp_i = table_lieu_i, modele = M_i_L_40, SR_obs_pred_sp = SR_obs_pred_L)
SR_obs_pred_LS <- F_predict_TA_C(table_sp_i = table_limande_sole_i, modele = M_i_LS_40, SR_obs_pred_sp = SR_obs_pred_LS)
SR_obs_pred_Ma <- F_predict_TA_C(table_sp_i = table_maquereau_i, modele = M_i_Ma_40, SR_obs_pred_sp = SR_obs_pred_Ma)
SR_obs_pred_Me <- F_predict_TA_C(table_sp_i = table_merlan_i, modele = M_i_Me_40_pta32, SR_obs_pred_sp = SR_obs_pred_Me)
SR_obs_pred_Mo <- F_predict_TA_C(table_sp_i = table_morue_i, modele = M_i_Mo_40_pta2, SR_obs_pred_sp = SR_obs_pred_Mo)
SR_obs_pred_P <- F_predict_TA_C(table_sp_i = table_plie_i, modele = M_i_P_40_pta23, SR_obs_pred_sp = SR_obs_pred_P)
SR_obs_pred_S <- F_predict_TA_C(table_sp_i = table_sprat_i, modele = M_i_S_40_pt2, SR_obs_pred_sp = SR_obs_pred_S)
SR_obs_pred_T <- F_predict_TA_C(table_sp_i = table_tacaud_i, modele = M_i_T_40_pta23, SR_obs_pred_sp = SR_obs_pred_T)



colour <- c("Sexe ratio observé" = "#006666", "Prédictions du modèle" = "#CC9900", "Prédictions du modèle en fixant l'effet aléatoire de la cohorte" = "#333399" , "Prédictions de la Cohorte"= "#339966", "Predictions âge et taille" = "#009900") 

       pH<- ggplot(SR_obs_pred_H, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "Sexe ratio observé"), alpha = 0.5, color = "#006666") + 
    geom_line(aes(y = SR_obs, colour = "Sexe ratio observé"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Prédictions du modèle"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Prédictions du modèle"), size = 1) +
    geom_point(aes(y = Prediction_cohorte, colour = "Prédictions de la Cohorte"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Prediction_cohorte, colour = "Prédictions de la Cohorte"), linetype = "twodash", size = 0.85, alpha = 0.80) +
   geom_point(aes(y = predict_TA, colour = "Predictions âge et taille"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = predict_TA, colour = "Predictions âge et taille"), linetype = "twodash", size = 0.85, alpha = 0.80) +
         geom_point(aes(y = pred_fcohorte, colour = "Prédictions du modèle en fixant l'effet aléatoire de la cohorte"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = pred_fcohorte, colour = "Prédictions du modèle en fixant l'effet aléatoire de la cohorte"), size = 0.85, linetype = "twodash") +
    scale_color_manual(values = colour, breaks = c("Sexe ratio observé", "Prédictions du modèle", "Predictions âge et taille", "Prédictions de la Cohorte", "Prédictions du modèle en fixant l'effet aléatoire de la cohorte")) +
    labs( y = "sexe ratio", x = "Cohorte") +
    theme_light() +
    ggtitle("Hareng") +
    theme(plot.title = element_text(face = "bold", hjust = 0.5, size = 16), legend.position='none')
       
        pA<- ggplot(SR_obs_pred_A, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "Sexe ratio observé"), alpha = 0.5, color = "#006666") + 
    geom_line(aes(y = SR_obs, colour = "Sexe ratio observé"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Prédictions du modèle"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Prédictions du modèle"), size = 1) +
    geom_point(aes(y = Prediction_cohorte, colour = "Prédictions de la Cohorte"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Prediction_cohorte, colour = "Prédictions de la Cohorte"), linetype = "twodash", size = 0.85, alpha = 0.80) +
    geom_point(aes(y = predict_TA, colour = "Predictions âge et taille"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = predict_TA, colour = "Predictions âge et taille"), linetype = "twodash", size = 0.85, alpha = 0.80) +
    geom_point(aes(y = pred_fcohorte, colour = "Prédictions du modèle en fixant l'effet aléatoire de la cohorte"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = pred_fcohorte, colour = "Prédictions du modèle en fixant l'effet aléatoire de la cohorte"), size = 0.85, linetype = "twodash") +
    scale_color_manual(values = colour, breaks = c("Sexe ratio observé", "Prédictions du modèle", "Predictions âge et taille", "Prédictions de la Cohorte", "Prédictions du modèle en fixant l'effet aléatoire de la cohorte")) +
    labs( y = "sexe ratio", x = "Cohorte") +
    theme_light() +
    ggtitle("Aiglefin") +
    theme(plot.title = element_text(face = "bold", hjust = 0.5, size = 16), legend.position='none')
        
         pL<- ggplot(SR_obs_pred_L, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "Sexe ratio observé"), alpha = 0.5, color = "#006666") + 
    geom_line(aes(y = SR_obs, colour = "Sexe ratio observé"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Prédictions du modèle"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Prédictions du modèle"), size = 1) +
    geom_point(aes(y = Prediction_cohorte, colour = "Prédictions de la Cohorte"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Prediction_cohorte, colour = "Prédictions de la Cohorte"), linetype = "twodash", size = 0.85, alpha = 0.80) +
    geom_point(aes(y = predict_TA, colour = "Predictions âge et taille"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = predict_TA, colour = "Predictions âge et taille"), linetype = "twodash", size = 0.85, alpha = 0.80) +
    geom_point(aes(y = pred_fcohorte, colour = "Prédictions du modèle en fixant l'effet aléatoire de la cohorte"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = pred_fcohorte, colour = "Prédictions du modèle en fixant l'effet aléatoire de la cohorte"), size = 0.85, linetype = "twodash") +
    scale_color_manual(values = colour, breaks = c("Sexe ratio observé", "Prédictions du modèle", "Predictions âge et taille", "Prédictions de la Cohorte", "Prédictions du modèle en fixant l'effet aléatoire de la cohorte")) +
    labs( y = "sexe ratio", x = "Cohorte") +
    theme_light() +
    ggtitle("Lieu noir") +
    theme(plot.title = element_text(face = "bold", hjust = 0.5, size = 16), legend.position='none')
         
          pLS<- ggplot(SR_obs_pred_LS, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "Sexe ratio observé"), alpha = 0.5, color = "#006666") + 
    geom_line(aes(y = SR_obs, colour = "Sexe ratio observé"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Prédictions du modèle"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Prédictions du modèle"), size = 1) +
    geom_point(aes(y = Prediction_cohorte, colour = "Prédictions de la Cohorte"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Prediction_cohorte, colour = "Prédictions de la Cohorte"), linetype = "twodash", size = 0.85, alpha = 0.80) +
   geom_point(aes(y = predict_TA, colour = "Predictions âge et taille"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = predict_TA, colour = "Predictions âge et taille"), linetype = "twodash", size = 0.85, alpha = 0.80) +
    geom_point(aes(y = pred_fcohorte, colour = "Prédictions du modèle en fixant l'effet aléatoire de la cohorte"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = pred_fcohorte, colour = "Prédictions du modèle en fixant l'effet aléatoire de la cohorte"), size = 0.85, linetype = "twodash") +
    scale_color_manual(values = colour, breaks = c("Sexe ratio observé", "Prédictions du modèle", "Predictions âge et taille", "Prédictions de la Cohorte", "Prédictions du modèle en fixant l'effet aléatoire de la cohorte")) +
    labs( y = "sexe ratio", x = "Cohorte") +
    theme_light() +
    ggtitle("Limande-sole") +
    theme(plot.title = element_text(face = "bold", hjust = 0.5, size = 16), legend.position='none')
          
           pMa<- ggplot(SR_obs_pred_Ma, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "Sexe ratio observé"), alpha = 0.5, color = "#006666") + 
    geom_line(aes(y = SR_obs, colour = "Sexe ratio observé"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Prédictions du modèle"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Prédictions du modèle"), size = 1) +
    geom_point(aes(y = Prediction_cohorte, colour = "Prédictions de la Cohorte"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Prediction_cohorte, colour = "Prédictions de la Cohorte"), linetype = "twodash", size = 0.85, alpha = 0.80) +
   geom_point(aes(y = predict_TA, colour = "Predictions âge et taille"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = predict_TA, colour = "Predictions âge et taille"), linetype = "twodash", size = 0.85, alpha = 0.80) +
    geom_point(aes(y = pred_fcohorte, colour = "Prédictions du modèle en fixant l'effet aléatoire de la cohorte"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = pred_fcohorte, colour = "Prédictions du modèle en fixant l'effet aléatoire de la cohorte"), size = 0.85, linetype = "twodash") +
    scale_color_manual(values = colour, breaks = c("Sexe ratio observé", "Prédictions du modèle", "Predictions âge et taille", "Prédictions de la Cohorte", "Prédictions du modèle en fixant l'effet aléatoire de la cohorte")) +
    labs( y = "sexe ratio", x = "Cohorte") +
    theme_light() +
    ggtitle("Maquereau commun") +
    theme(plot.title = element_text(face = "bold", hjust = 0.5, size = 16), legend.position='none')
           
            pMe<- ggplot(SR_obs_pred_Me, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "Sexe ratio observé"), alpha = 0.5, color = "#006666") + 
    geom_line(aes(y = SR_obs, colour = "Sexe ratio observé"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Prédictions du modèle"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Prédictions du modèle"), size = 1) +
    geom_point(aes(y = Prediction_cohorte, colour = "Prédictions de la Cohorte"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Prediction_cohorte, colour = "Prédictions de la Cohorte"), linetype = "twodash", size = 0.85, alpha = 0.80) +
   geom_point(aes(y = predict_TA, colour = "Predictions âge et taille"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = predict_TA, colour = "Predictions âge et taille"), linetype = "twodash", size = 0.85, alpha = 0.80) +
    geom_point(aes(y = pred_fcohorte, colour = "Prédictions du modèle en fixant l'effet aléatoire de la cohorte"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = pred_fcohorte, colour = "Prédictions du modèle en fixant l'effet aléatoire de la cohorte"), size = 0.85, linetype = "twodash") +
    scale_color_manual(values = colour, breaks = c("Sexe ratio observé", "Prédictions du modèle", "Predictions âge et taille", "Prédictions de la Cohorte", "Prédictions du modèle en fixant l'effet aléatoire de la cohorte")) +
    labs( y = "sexe ratio", x = "Cohorte") +
    theme_light() +
    ggtitle("Merlan") +
    theme(plot.title = element_text(face = "bold", hjust = 0.5, size = 16), legend.position='none')
            
             pMo<- ggplot(SR_obs_pred_Mo, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "Sexe ratio observé"), alpha = 0.5, color = "#006666") + 
    geom_line(aes(y = SR_obs, colour = "Sexe ratio observé"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Prédictions du modèle"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Prédictions du modèle"), size = 1) +
    geom_point(aes(y = Prediction_cohorte, colour = "Prédictions de la Cohorte"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Prediction_cohorte, colour = "Prédictions de la Cohorte"), linetype = "twodash", size = 0.85, alpha = 0.80) +
   geom_point(aes(y = predict_TA, colour = "Predictions âge et taille"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = predict_TA, colour = "Predictions âge et taille"), linetype = "twodash", size = 0.85, alpha = 0.80) +
    geom_point(aes(y = pred_fcohorte, colour = "Prédictions du modèle en fixant l'effet aléatoire de la cohorte"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = pred_fcohorte, colour = "Prédictions du modèle en fixant l'effet aléatoire de la cohorte"), size = 0.85, linetype = "twodash") +
    scale_color_manual(values = colour, breaks = c("Sexe ratio observé", "Prédictions du modèle", "Predictions âge et taille", "Prédictions de la Cohorte", "Prédictions du modèle en fixant l'effet aléatoire de la cohorte")) +
    labs( y = "sexe ratio", x = "Cohorte") +
    theme_light() +
    ggtitle("Morue de l'Atlantique") +
    theme(plot.title = element_text(face = "bold", hjust = 0.5, size = 16), legend.position='none')
             
              pP<- ggplot(SR_obs_pred_P, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "Sexe ratio observé"), alpha = 0.5, color = "#006666") + 
    geom_line(aes(y = SR_obs, colour = "Sexe ratio observé"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Prédictions du modèle"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Prédictions du modèle"), size = 1) +
    geom_point(aes(y = Prediction_cohorte, colour = "Prédictions de la Cohorte"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Prediction_cohorte, colour = "Prédictions de la Cohorte"), linetype = "twodash", size = 0.85, alpha = 0.80) +
   geom_point(aes(y = predict_TA, colour = "Predictions âge et taille"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = predict_TA, colour = "Predictions âge et taille"), linetype = "twodash", size = 0.85, alpha = 0.80) +
    geom_point(aes(y = pred_fcohorte, colour = "Prédictions du modèle en fixant l'effet aléatoire de la cohorte"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = pred_fcohorte, colour = "Prédictions du modèle en fixant l'effet aléatoire de la cohorte"), size = 0.85, linetype = "twodash") +
    scale_color_manual(values = colour, breaks = c("Sexe ratio observé", "Prédictions du modèle", "Predictions âge et taille", "Prédictions de la Cohorte", "Prédictions du modèle en fixant l'effet aléatoire de la cohorte")) +
    labs( y = "sexe ratio", x = "Cohorte") +
    theme_light() +
    ggtitle("Plie commune") +
    theme(plot.title = element_text(face = "bold", hjust = 0.5, size = 16), legend.position='none')
              
               pS<- ggplot(SR_obs_pred_S, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "Sexe ratio observé"), alpha = 0.5, color = "#006666") + 
    geom_line(aes(y = SR_obs, colour = "Sexe ratio observé"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Prédictions du modèle"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Prédictions du modèle"), size = 1) +
    geom_point(aes(y = Prediction_cohorte, colour = "Prédictions de la Cohorte"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Prediction_cohorte, colour = "Prédictions de la Cohorte"), linetype = "twodash", size = 0.85, alpha = 0.80) +
   geom_point(aes(y = predict_TA, colour = "Predictions âge et taille"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = predict_TA, colour = "Predictions âge et taille"), linetype = "twodash", size = 0.85, alpha = 0.80) +
    geom_point(aes(y = pred_fcohorte, colour = "Prédictions du modèle en fixant l'effet aléatoire de la cohorte"), alpha = 0.5, shape = 5) +
    geom_line(aes(y = pred_fcohorte, colour = "Prédictions du modèle en fixant l'effet aléatoire de la cohorte"), size = 0.85, linetype = "twodash") +
    scale_color_manual(values = colour, breaks = c("Sexe ratio observé", "Prédictions du modèle", "Predictions âge et taille", "Prédictions de la Cohorte", "Prédictions du modèle en fixant l'effet aléatoire de la cohorte")) +
    labs( y = "sexe ratio", x = "Cohorte") +
    theme_light() +
    ggtitle("Sprat") +
    theme(plot.title = element_text(face = "bold", hjust = 0.5, size = 16), legend.position='none')
               
               
               pT<- ggplot(SR_obs_pred_T, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "Sexe ratio observé"), alpha = 0.5, color = "#006666") + 
    geom_line(aes(y = SR_obs, colour = "Sexe ratio observé"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Prédictions du modèle"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Prédictions du modèle"), size = 1) +
    geom_point(aes(y = Prediction_cohorte, colour = "Prédictions de la Cohorte"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Prediction_cohorte, colour = "Prédictions de la Cohorte"), linetype = "twodash", size = 0.85, alpha = 0.80) +
   geom_point(aes(y = predict_TA, colour = "Predictions âge et taille"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = predict_TA, colour = "Predictions âge et taille"), linetype = "twodash", size = 0.85, alpha = 0.80) +
    geom_point(aes(y = pred_fcohorte, colour = "Prédictions du modèle en fixant l'effet aléatoire de la cohorte"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = pred_fcohorte, colour = "Prédictions du modèle en fixant l'effet aléatoire de la cohorte"), size = 0.85, linetype = "twodash") +
    scale_color_manual(values = colour, breaks = c("Sexe ratio observé", "Prédictions du modèle", "Predictions âge et taille", "Prédictions de la Cohorte", "Prédictions du modèle en fixant l'effet aléatoire de la cohorte")) +
    labs( y = "sexe ratio", x = "Cohorte") +
    theme_light() +
    ggtitle("Tacaud norvégien") +
    theme(plot.title = element_text(face = "bold", hjust = 0.5, size = 16), legend.position='none')
               
p1a<-pH + pA + pL 
p1b<-pLS + pMa 

p2a <- pMe + pMo + pP  
p2b <- pS + pT

plot_eff_Ca <- p1a/p2a
plot_eff_Cb <- p1b/p2b


#ggsave("plot_soutenance_eff_Ca.png", plot = plot_eff_Ca, width = 22, height = 7)

#ggsave("plot_soutenance_eff_Cb.png", plot = plot_eff_Cb, width = 15, height = 7)       


p3 <- pH + pL + pMe
p4 <- pP + pS + pT
plot_C_6 <- p3/p4

#ggsave("plot_soutenance_eff_C6.png", plot = plot_C_6, width = 22, height = 7)
 ggsave("plot_hareng_T.png", plot = pT, width = 16, height = 8)      
```


```{r}
pH1<- ggplot(SR_obs_pred_H, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "Sexe ratio observé"), alpha = 0.5, color = "#006666") + 
    geom_line(aes(y = SR_obs, colour = "Sexe ratio observé"), size = 1) +
    scale_color_manual(values = colour, breaks = c("Sexe ratio observé", "Prédictions du modèle", "Predictions âge et taille", "Prédictions de la Cohorte", "Prédictions du modèle en fixant l'effet aléatoire de la cohorte")) +
    labs( y = "sexe ratio", x = "Cohorte") +
    theme_light() +
    ggtitle("Hareng") +
    theme(plot.title = element_text(face = "bold", hjust = 0.5, size = 16), legend.position='none')


pH2<- ggplot(SR_obs_pred_H, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "Sexe ratio observé"), alpha = 0.5, color = "#006666") + 
    geom_line(aes(y = SR_obs, colour = "Sexe ratio observé"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Prédictions du modèle"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Prédictions du modèle"), size = 1) +
    scale_color_manual(values = colour, breaks = c("Sexe ratio observé", "Prédictions du modèle", "Predictions âge et taille", "Prédictions de la Cohorte", "Prédictions du modèle en fixant l'effet aléatoire de la cohorte")) +
    labs( y = "sexe ratio", x = "Cohorte") +
    theme_light() +
    ggtitle("Hareng") +
    theme(plot.title = element_text(face = "bold", hjust = 0.5, size = 16), legend.position='none')


pH3<- ggplot(SR_obs_pred_H, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "Sexe ratio observé"), alpha = 0.5, color = "#006666") + 
    geom_line(aes(y = SR_obs, colour = "Sexe ratio observé"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Prédictions du modèle"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Prédictions du modèle"), size = 1) +
    geom_point(aes(y = Prediction_cohorte, colour = "Prédictions de la Cohorte"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Prediction_cohorte, colour = "Prédictions de la Cohorte"), linetype = "twodash", size = 0.85, alpha = 0.80) +
    scale_color_manual(values = colour, breaks = c("Sexe ratio observé", "Prédictions du modèle", "Predictions âge et taille", "Prédictions de la Cohorte", "Prédictions du modèle en fixant l'effet aléatoire de la cohorte")) +
    labs( y = "sexe ratio", x = "Cohorte") +
    theme_light() +
    ggtitle("Hareng") +
    theme(plot.title = element_text(face = "bold", hjust = 0.5, size = 16), legend.position='none')


pH4<- ggplot(SR_obs_pred_H, aes(x = Cohorte)) +
    geom_point(aes(y = SR_obs, colour = "Sexe ratio observé"), alpha = 0.5, color = "#006666") + 
    geom_line(aes(y = SR_obs, colour = "Sexe ratio observé"), size = 1) +
    geom_point(aes(y = Pred_R, colour = "Prédictions du modèle"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Pred_R, colour = "Prédictions du modèle"), size = 1) +
    geom_point(aes(y = Prediction_cohorte, colour = "Prédictions de la Cohorte"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = Prediction_cohorte, colour = "Prédictions de la Cohorte"), linetype = "twodash", size = 0.85, alpha = 0.80) +
   geom_point(aes(y = predict_TA, colour = "Predictions âge et taille"), alpha = 0.5, shape = 5) + 
    geom_line(aes(y = predict_TA, colour = "Predictions âge et taille"), linetype = "twodash", size = 0.85, alpha = 0.80) +
    scale_color_manual(values = colour, breaks = c("Sexe ratio observé", "Prédictions du modèle", "Predictions âge et taille", "Prédictions de la Cohorte", "Prédictions du modèle en fixant l'effet aléatoire de la cohorte")) +
    labs( y = "sexe ratio", x = "Cohorte") +
    theme_light() +
    ggtitle("Hareng") +
    theme(plot.title = element_text(face = "bold", hjust = 0.5, size = 16), legend.position='none')


 #ggsave("plot_hareng_1.png", plot = pH1, width = 16, height = 8) 
 #ggsave("plot_hareng_2.png", plot = pH2, width = 16, height = 8)    
 #ggsave("plot_hareng_3.png", plot = pH3, width = 16, height = 8) 
 #ggsave("plot_hareng_4.png", plot = pH4, width = 16, height = 8) 
```

