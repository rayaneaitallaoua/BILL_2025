"0","sapply(af_data, FUN = class)"
"1","Frequency "
"1","       AF "
"1","AF_factor "
"1","
"
"1","""integer"" "
"1","""numeric"" "
"1"," ""factor"" "
"1","
"
"0","summary(af_data$AF)"
"1","   Min. "
"1","1st Qu. "
"1"," Median "
"1","   Mean "
"1","3rd Qu. "
"1","   Max. "
"1","
"
"1","0.00100 "
"1","0.03625 "
"1","0.09150 "
"1","0.22108 "
"1","0.26025 "
"1","1.00000 "
"1","
"
"0","length(af_data$AF)#130"
"1","[1]"
"1"," 130"
"1","
"
"0","length(unique(af_data$AF))#130"
"1","[1]"
"1"," 130"
"1","
"
"0","af_data$AF_factor <- as.factor(af_data$AF)"
"0","ggplot(data = af_data, aes(x = AF_factor, y = Frequency)) +"
"0","  geom_bar(stat = ""identity"", width = 0.5, color=""#339966"", fill=""#66CC99"") +"
"0","  geom_text(aes(label=Frequency), vjust=-0.5, hjust = 0.5, size=2.2) +"
"0","  theme(legend.position = ""none"")  +"
"0","  ggtitle(""Allele Frequency Distribution per SV"") +"
"0","  xlab(""FrÃ©quence AllÃ©lique"") + "
"0","  ylab(""FrÃ©quence"")+"
"0","  xlim(""0"", ""1.1"") +"
"0","  scale_x_discrete(breaks = levels(af_data$AF_factor)[seq(1, length(levels(af_data$AF_factor)), by = 5)])+"
"0","  theme_classic() +"
"0","  theme(axis.text.x = element_text(size = 6, angle = 45, hjust = 1)) "
"2","[38;5;254mScale for [32mx[38;5;254m is already present.
Adding another scale for [32mx[38;5;254m, which will replace the existing scale.[39m"
